<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>蓝岚爱肉肉</title>
  <subtitle>Gardon Lee&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://licao404.com/"/>
  <updated>2016-05-18T09:32:22.957Z</updated>
  <id>http://licao404.com/</id>
  
  <author>
    <name>蓝岚</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端模块化之旅（二）：CommonJS、AMD和CMD</title>
    <link href="http://licao404.com/2016/05/18/%E5%89%8D%E7%AB%AF%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8B%E6%97%85-CommonJS%E3%80%81AMD%E5%92%8CCMD/"/>
    <id>http://licao404.com/2016/05/18/前端模块化之旅-CommonJS、AMD和CMD/</id>
    <published>2016-05-18T03:36:24.000Z</published>
    <updated>2016-05-18T09:32:22.957Z</updated>
    
    <content type="html">&lt;img src=&quot;http://7xrvo9.com1.z0.glb.clouddn.com/2016.0518/%E5%89%8D%E7%AB%AF%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8B%E6%97%85%E4%BA%8C.jpg&quot; class=&quot;full-image&quot;&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;继续前篇，各种模块化规范开始推出，其中比较突出的是服务器端的 CommonJS 规范,它是 Nood.JS 在实践中推出的，也是首先采用 JS 模块化概念的语言，跳出了浏览器；进而出现了浏览器环境的模块化方案 AMD和CMD。&lt;/blockquote&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;CommonJS-Modules-1-0&quot;&gt;&lt;a href=&quot;#CommonJS-Modules-1-0&quot; class=&quot;headerlink&quot; title=&quot;CommonJS Modules/1.0&quot;&gt;&lt;/a&gt;CommonJS Modules/1.0&lt;/h4&gt;&lt;p&gt;CommonJS 规范是服务器端的模块化的规范，是 Nood.js 在实践中推出的，Nood.js 也是首先采用 js 模块化的；&lt;/p&gt;
&lt;p&gt;它规定一个单独的文件就是一个模块，一个模块中存在一个自由变量 &lt;strong&gt;require&lt;/strong&gt;，这是个函数，用于加载模块：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这个 &lt;code&gt;require&lt;/code&gt; 函数接受一个模块标识符，返回外部模块所输出的 &lt;code&gt;API&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;如果出现&lt;a href=&quot;http://weizhifeng.net/commonjs-module-1.0-specification.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;依赖闭环&lt;/a&gt;(dependency cycle)，那么外部模块在被它的传递依赖（transitive dependencies）所 &lt;code&gt;require&lt;/code&gt; 的时候可能并没有执行完成；在这种情况下，”require”返回的对象必须至少包含此外部模块在调用require函数（会进入当前模块执行环境）之前就已经准备完毕的输出。&lt;/li&gt;
&lt;li&gt;如果请求的模块不能返回，那么”require”必须抛出一个错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在一个模块中，会存在一个名为 &lt;strong&gt;exports&lt;/strong&gt; 的自由变量，这是一个对象，模块可以在执行的时候把自身的API加入到其中，用于定义模块，导出给其他地方使用；&lt;br&gt;&lt;code&gt;exports&lt;/code&gt; 对象是输出模块变量的唯一方式。&lt;/p&gt;
&lt;p&gt;参照下面的一个例子：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//math.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;exports.add = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a,b&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; c = a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//index.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; add = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;math&#39;&lt;/span&gt;).add;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;span class=&quot;comment&quot;&gt;//2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;math.js&lt;/code&gt;中将 add 函数绑定到模块中的 &lt;code&gt;exports&lt;/code&gt; 对象中，之后在 &lt;code&gt;index.js&lt;/code&gt; 模块中用 &lt;code&gt;require&lt;/code&gt; 方法加载了 &lt;code&gt;math.js&lt;/code&gt; 模块，并调用该模块中的 add 函数。&lt;/p&gt;
&lt;h4 id=&quot;AMD&quot;&gt;&lt;a href=&quot;#AMD&quot; class=&quot;headerlink&quot; title=&quot;AMD&quot;&gt;&lt;/a&gt;AMD&lt;/h4&gt;&lt;p&gt;Asynchronous Module Definition，即异步的模块定义，是浏览器端的模块化规范，是 RequireJS 对模块定义的规范化产出。&lt;/p&gt;
&lt;p&gt;与服务器端的模块化规范 CommonJS 不同，AMD 的模块加载是异步的，因为是浏览器端，所以势必要是异步的（浏览器同步加载模块会导致性能、可用性、调试和跨域访问等问题）。因为模块异步加载时不会影响后面程序的执行，前面总结过 js 异步的情况，依赖某些模块的语句均放置在回调函数中，等待模块加载完成后再执行；&lt;/p&gt;
&lt;p&gt;AMD 规范只定义了一个函数 &lt;strong&gt;define&lt;/strong&gt; ，是一个全局变量，如下定义一个模块的语法：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;define(id?, dependencies?, factory);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;id&lt;/code&gt;：模块的名字，如果没有提供该参数，模块的名字应该默认为模块加载器请求的指定脚本的名字；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;dependencies&lt;/code&gt;：模块的依赖，已被模块定义的模块标识的数组字面量。依赖参数是可选的，如果忽略此参数，它应该默认为 &lt;code&gt;[&amp;quot;require&amp;quot;, &amp;quot;exports&amp;quot;, &amp;quot;module&amp;quot;]&lt;/code&gt;。然而，如果工厂方法的长度属性小于3，加载器会选择以函数的长度属性指定的参数个数调用工厂方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;factory&lt;/code&gt;：模块的工厂函数，模块初始化要执行的函数或对象。如果为函数，它应该只被执行一次。如果是对象，此对象应该为模块的输出值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://7xrvo9.com1.z0.glb.clouddn.com/2016.0518/%E5%89%8D%E7%AB%AF%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8B%E6%97%85%E4%BA%8C.jpg&quot; class=&quot;full-image&quot; /&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;继续前篇，各种模块化规范开始推出，其中比较突出的是服务器端的 CommonJS 规范,它是 Nood.JS 在实践中推出的，也是首先采用 JS 模块化概念的语言，跳出了浏览器；进而出现了浏览器环境的模块化方案 AMD和CMD。&lt;/blockquote&gt;
    
    </summary>
    
      <category term="编程学习" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端进阶" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="JavaScript" scheme="http://licao404.com/tags/JavaScript/"/>
    
      <category term="模块化" scheme="http://licao404.com/tags/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>前端模块化之旅（一）：因何生它</title>
    <link href="http://licao404.com/2016/05/17/%E5%89%8D%E7%AB%AF%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8B%E6%97%85-%E5%9B%A0%E4%BD%95%E7%94%9F%E5%AE%83/"/>
    <id>http://licao404.com/2016/05/17/前端模块化之旅-因何生它/</id>
    <published>2016-05-17T11:27:30.000Z</published>
    <updated>2016-05-18T01:59:12.820Z</updated>
    
    <content type="html">&lt;img src=&quot;http://7xrvo9.com1.z0.glb.clouddn.com/2016.0517/%E5%89%8D%E7%AB%AF%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8B%E6%97%85%E4%B8%80.jpg&quot; class=&quot;full-image&quot;&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;随着互联网的快速发展，人们不单单只是需要一个网页了，功能更复杂、交互更丰富的 WebAPP 成为开发者需要面对的日常工作内容。随之而来的是更加庞大与更加复杂的 JavaScript 代码，如此而来，仅仅依靠着我们之前面向对象的 JavaScript 进行代码封装已很难满足生产需求，特别是在团队协作的复杂项目中，JavaScript 模块化已成为一个迫切的需求。&lt;/blockquote&gt;


&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;原始社会的生产&quot;&gt;&lt;a href=&quot;#原始社会的生产&quot; class=&quot;headerlink&quot; title=&quot;原始社会的生产&quot;&gt;&lt;/a&gt;原始社会的生产&lt;/h3&gt;&lt;p&gt;开始的开始 Music ..♫.♪.♫.♪…我们都是…咳咳，我们都会使用如下的方式写代码，将独立通用的的功能独立成一个个函数：&lt;/p&gt;
&lt;p&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;http://music.163.com/outchain/player?type=2&amp;id=5240550&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bar&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这都是最初得美好，那些习以为常的习惯，回忆ing…这是最原始的模块，需要使用调用就好。但是但是，使用过就会知道这样会污染全局变量，并且很容易造成 &lt;strong&gt;命名冲突&lt;/strong&gt;，好吧，它属于最初的美好。&lt;/p&gt;
&lt;p&gt;后来，为了解决上面青春期的问题，我们选择了面向对象写法，引入 Namespace (命名空间)，将代码进行简单封装：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myModule = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bar: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myMoudle.bar();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这种方式看似还可以，减少了全局变量，能缓解严峻的问题。但是这并不安全，因为实质上是对象，会暴露所有的模块成员，内部状态可以被外部读写。&lt;/p&gt;
&lt;p&gt;没办法，出了问题继续解决，我们采用匿名闭包的写法（Immediately-Invoked Function Expression，IIFE）：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myModule = (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _log = &lt;span class=&quot;string&quot;&gt;&quot;hello world&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; log = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(_log);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        log: log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//引用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myModule.log();&lt;span class=&quot;comment&quot;&gt;//hello world&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myModule._log;&lt;span class=&quot;comment&quot;&gt;//undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如此，外部就无法读写到内部的成员（&lt;code&gt;_log&lt;/code&gt;）。这时候需求又改变了，你的模块不再是简单的一个模块，而是一个功能很大的模块，需要分成几个部分，这些部分存在相互之间的 &lt;strong&gt;依赖关系&lt;/strong&gt;。好吧，我们来引入依赖：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myModule = (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;$&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $log = $(&lt;span class=&quot;string&quot;&gt;&#39;.log&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; log = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log($log);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        log: log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)(jQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//引用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myModule.log();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样我们在代码中引入了jQuery，方法间存在依赖关系；&lt;/p&gt;
&lt;p&gt;至此，我们用简陋的工具，和无比勤劳的双手为子孙们搭建了发展的架子，为后续社会发展出更先进好用的模块化工具打下了基石，感谢祖辈们的探索！&lt;/p&gt;
&lt;h3 id=&quot;文明社会的探索&quot;&gt;&lt;a href=&quot;#文明社会的探索&quot; class=&quot;headerlink&quot; title=&quot;文明社会的探索&quot;&gt;&lt;/a&gt;文明社会的探索&lt;/h3&gt;&lt;p&gt;飞速变化的年代里，人们总是不满足于现状。有了前人的封装性还不够，我们引入 JS 文件时是靠不断追加 &lt;code&gt;&amp;lt;script src=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; 标签得以实现，每个标签引入顺序是有要求的。&lt;br&gt;当我们引入的文件增多，除了看起来比较累赘，还会出现比较多的依赖关系，而这种写法是无法突出这种关系的，我们需要 &lt;strong&gt;依赖管理&lt;/strong&gt;，也让 &lt;strong&gt;后续维护&lt;/strong&gt; 基本上变得无法进行。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script src=&lt;span class=&quot;string&quot;&gt;&quot;jquery.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script src=&quot;dialog.js&quot;&amp;gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script src=&quot;tooltip.js&quot;&amp;gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script src=&quot;toast.js&quot;&amp;gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script src=&quot;handlebar.js&quot;&amp;gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;......&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;很多时候可能就是由于之前没有引入一个依赖的 js 文件而导致后面 js 的功能失效，浏览器报错。大型项目中，一些通用组件往往因此不能轻易地引入到业务代码中去，生产效率低下。还有一个问题就是 &lt;strong&gt;请求过多&lt;/strong&gt;，不利于性能优化。&lt;/p&gt;
&lt;p&gt;时代的进步是注定需要出现伟人的，积累下的诉求注定是需要人来响应的，一些规范横空出世，诸如 CommonJS规范、AMD规范、CMD规范 等一帮豪杰之辈，怀揣济世为民之心，度前端开发者于混沌之境。欲知其如何演绎，请看下篇 《前端模块化之旅（二）：CommonJS、AMD和CMD》。&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://7xrvo9.com1.z0.glb.clouddn.com/2016.0517/%E5%89%8D%E7%AB%AF%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8B%E6%97%85%E4%B8%80.jpg&quot; class=&quot;full-image&quot; /&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;随着互联网的快速发展，人们不单单只是需要一个网页了，功能更复杂、交互更丰富的 WebAPP 成为开发者需要面对的日常工作内容。随之而来的是更加庞大与更加复杂的 JavaScript 代码，如此而来，仅仅依靠着我们之前面向对象的 JavaScript 进行代码封装已很难满足生产需求，特别是在团队协作的复杂项目中，JavaScript 模块化已成为一个迫切的需求。&lt;/blockquote&gt;
    
    </summary>
    
      <category term="编程学习" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端进阶" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="JavaScript" scheme="http://licao404.com/tags/JavaScript/"/>
    
      <category term="模块化" scheme="http://licao404.com/tags/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>原型链后续之JavaScript的继承</title>
    <link href="http://licao404.com/2016/05/14/%E5%8E%9F%E5%9E%8B%E9%93%BE%E5%90%8E%E7%BB%AD%E4%B9%8BJavaScript%E7%9A%84%E7%BB%A7%E6%89%BF/"/>
    <id>http://licao404.com/2016/05/14/原型链后续之JavaScript的继承/</id>
    <published>2016-05-14T04:15:51.000Z</published>
    <updated>2016-05-16T12:27:32.597Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xr868.com1.z0.glb.clouddn.com/task36/Person%E5%8E%9F%E5%9E%8B%E5%9B%BE.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;还记得这张原型图么（没见过 or 忘了的请戳&lt;a href=&quot;./2016/05/10/OOP-For-JavaScript/&quot;&gt;《OOP For JavaScript》&lt;/a&gt;和&lt;a href=&quot;./2016/05/12/原型链/&quot;&gt;《说清楚JavaScript的原型链》&lt;/a&gt;这两篇博文）？深入学习了JavaScript原型和原型链的的概念和原理后，我们内心会隐隐有种道不明的感觉，如果你学习过其他面向对象语言，你会不自觉发现这是种多么熟悉的感觉啊——这不就像是继承么？此文就将内心的感觉整理出来，作为JavaScript语言的一个核心概念来学习。&lt;/blockquote&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;【理论知识】&quot;&gt;&lt;a href=&quot;#【理论知识】&quot; class=&quot;headerlink&quot; title=&quot;【理论知识】&quot;&gt;&lt;/a&gt;【理论知识】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;继承有什么作用&quot;&gt;&lt;a href=&quot;#继承有什么作用&quot; class=&quot;headerlink&quot; title=&quot;继承有什么作用? &quot;&gt;&lt;/a&gt;&lt;strong&gt;继承有什么作用? &lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;继承是面向对象语言中一个重要的概念，通过继承实现代码复用，拓展软件功能；&lt;/li&gt;
&lt;li&gt;不像其他面向对象语言的继承有着诸如“父类”和“子类”的概念，父类的的属性和方法子类可以继承而不必重写，只需要写出新增或者改写的内容。JavaScript是基于对象的语言，没有类的概念，所以，要想实现继承，就需要用js的原型链或者用 &lt;code&gt;apply&lt;/code&gt; 和 &lt;code&gt;call&lt;/code&gt; 方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;有几种常见创建对象的方式-举例说明&quot;&gt;&lt;a href=&quot;#有几种常见创建对象的方式-举例说明&quot; class=&quot;headerlink&quot; title=&quot;有几种常见创建对象的方式? 举例说明?&quot;&gt;&lt;/a&gt;&lt;strong&gt;有几种常见创建对象的方式? 举例说明?&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;工厂模式 ，由于JavaScript中无法创建类，所以通过一个函数来封装以特定接口创建对象的细节，例如：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;creatHuman&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name,age&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name: name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        age: age,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        selfIntro: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;I&#39;m &quot;&lt;/span&gt; + name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; o;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; people1 = creatHuman(&lt;span class=&quot;string&quot;&gt;&quot;Gardon&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; people2 = creatHuman(&lt;span class=&quot;string&quot;&gt;&quot;John&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;构造函数模式 ，自定义对象类型的属性和方法：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Human&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name,age&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age = age,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.selfIntro = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;I&#39;m &quot;&lt;/span&gt; + name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; people1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Human(&lt;span class=&quot;string&quot;&gt;&quot;Gardon&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; people2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Human(&lt;span class=&quot;string&quot;&gt;&quot;John&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;原型模式&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Human&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Human.prototype.name = &lt;span class=&quot;string&quot;&gt;&quot;Gardon&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Human.prototype.age = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Human.prototype.selfIntro = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;I&#39;m &quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; people1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Human();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; people2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Human();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;构造函数模式与原型模式结合 ， 目前JavaScript中使用最广泛，认同度最高的一种创建自定义类型的方法：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Human&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name,age&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age = age&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Human.prototype.selfIntro = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;I&#39;m &quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; people1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Human(&lt;span class=&quot;string&quot;&gt;&quot;Gardon&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; people2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Human(&lt;span class=&quot;string&quot;&gt;&quot;John&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;……&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;下面两种写法有什么区别&quot;&gt;&lt;a href=&quot;#下面两种写法有什么区别&quot; class=&quot;headerlink&quot; title=&quot;下面两种写法有什么区别?&quot;&gt;&lt;/a&gt;&lt;strong&gt;下面两种写法有什么区别?&lt;/strong&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//方法1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;People&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, sex&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sex = sex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.printName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; People(&lt;span class=&quot;string&quot;&gt;&#39;Gardon&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//方法2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, sex&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sex = sex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.printName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&#39;John&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;经过前面的总结，可知：上面的代码采用两种不同的创建对象的模式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;方法1 用的是构造函数模式，每次通过 &lt;code&gt;new&lt;/code&gt; 创建 &lt;code&gt;People&lt;/code&gt; 的新实例，会为每个新实例绑定属性和方法，也就是每个 &lt;code&gt;People&lt;/code&gt; 的实例都被添加了 &lt;code&gt;printName&lt;/code&gt; 方法；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;方法2 构造函数模式与原型模式结合，实例的属性都是在构造函数中定义的，而由所有实例共享的属性和方法则是在原型中定义的，也就是所有 &lt;code&gt;Person&lt;/code&gt; 的实例都继承了 &lt;code&gt;Person&lt;/code&gt; 原型对象的 &lt;code&gt;printName&lt;/code&gt; 方法，由原型链指向也可发现这种区别。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Object-create-有什么作用？兼容性如何？如何使用？&quot;&gt;&lt;a href=&quot;#Object-create-有什么作用？兼容性如何？如何使用？&quot; class=&quot;headerlink&quot; title=&quot;Object.create 有什么作用？兼容性如何？如何使用？&quot;&gt;&lt;/a&gt;&lt;strong&gt;Object.create 有什么作用？兼容性如何？如何使用？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;ECMAScript5 通过新增 &lt;code&gt;Object.create()&lt;/code&gt; 方法创建一个拥有指定原型和若干个指定属性的对象，规范化了原型式继承；&lt;br&gt;这个方法接受两个参数，第一个是用作新对象原型的对象、第二个是一个为新对象定义额外属性的对象，是个可选值；&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;好吧，这样解释确实有点晦涩，继续来个 &lt;code&gt;Human&lt;/code&gt; 的栗子加个原型图说明下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//这里首先新建了个构造函数Human（对象）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Human&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name,age&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Human.prototype.selfIntro = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;I&#39;m &quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//这里又新建了个构造函数GreatMan（对象）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GreatMan&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;trait&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.trait = trait;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Human.call(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//重新定义Human函数的运行上下文为当前GreatMan的上下文&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在需要 &lt;code&gt;GreatMan&lt;/code&gt; 继承自 &lt;code&gt;Human&lt;/code&gt; 。除了原型链继承，我们使用一种原型式的继承：将 &lt;code&gt;Human&lt;/code&gt; 的原型拷贝一份，这用到了 &lt;code&gt;Object.create()&lt;/code&gt; 方法，然后让新对象（也就是 &lt;code&gt;GreatMan&lt;/code&gt;） 的 &lt;code&gt;prototype&lt;/code&gt; 指向拷贝来的原型：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GreatMan.prototype = &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.create(Human.prototype);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; turing = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; GreatMan(&lt;span class=&quot;string&quot;&gt;&quot;diligent&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(turing.selfIntro());&lt;span class=&quot;comment&quot;&gt;//I&#39;m undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;turing.name = &lt;span class=&quot;string&quot;&gt;&quot;Turing&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(turing.selfIntro());&lt;span class=&quot;comment&quot;&gt;//I&#39;m Turing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原型图示：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xr868.com1.z0.glb.clouddn.com/task37/%E5%8E%9F%E5%9E%8B%E5%9B%BEcreate.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;考虑兼容性：支持 Object.create() 方法的浏览器有 &lt;code&gt;IE9+&lt;/code&gt;、&lt;code&gt;Firefix4+&lt;/code&gt;、&lt;code&gt;Safari5+&lt;/code&gt;、&lt;code&gt;Opera12+&lt;/code&gt; 和 &lt;code&gt;Chrome&lt;/code&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;hasOwnProperty-有什么作用？-如何使用？&quot;&gt;&lt;a href=&quot;#hasOwnProperty-有什么作用？-如何使用？&quot; class=&quot;headerlink&quot; title=&quot;hasOwnProperty 有什么作用？ 如何使用？&quot;&gt;&lt;/a&gt;&lt;strong&gt;hasOwnProperty 有什么作用？ 如何使用？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;code&gt;hasOwnProperty()&lt;/code&gt; 方法用来判断某个对象是否含有指定的自身属性，参数是要检测的是属性名。&lt;br&gt;所有继承了 &lt;code&gt;Object.prototype&lt;/code&gt; 的对象都会从原型链上继承到 &lt;code&gt;hasOwnProperty&lt;/code&gt; 方法，这个方法可以用来检测一个对象是否含有特定的自身属性，如对上面的例子:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Human&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name,age&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.selfAge = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;I&#39;m &quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age);    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Human.prototype.selfIntro = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;I&#39;m &quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; people1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Human(&lt;span class=&quot;string&quot;&gt;&quot;Gardon&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;people1.hasOwnProperty(&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;people1.hasOwnProperty(&lt;span class=&quot;string&quot;&gt;&#39;age&#39;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;people1.hasOwnProperty(&lt;span class=&quot;string&quot;&gt;&#39;selfAge&#39;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;people1.hasOwnProperty(&lt;span class=&quot;string&quot;&gt;&#39;selfIntro&#39;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;//false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们创建 Human 的实例 &lt;code&gt;people1&lt;/code&gt;，people1 的属性包含 name、ag、selfAge，所以 &lt;code&gt;hasOwnProperty&lt;/code&gt; 返回的是 &lt;code&gt;true&lt;/code&gt;,而 &lt;code&gt;selfIntro&lt;/code&gt; 是其指向的原型的属性，所以 &lt;code&gt;hasOwnProperty&lt;/code&gt; 返回 &lt;code&gt;false&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&quot;实现-Object-create-的-polyfill，如：（ps-写个-函数create，实现-Object-create-的功能）&quot;&gt;&lt;a href=&quot;#实现-Object-create-的-polyfill，如：（ps-写个-函数create，实现-Object-create-的功能）&quot; class=&quot;headerlink&quot; title=&quot;实现 Object.create 的 polyfill，如：（ps: 写个 函数create，实现 Object.create 的功能）&quot;&gt;&lt;/a&gt;&lt;strong&gt;实现 Object.create 的 polyfill，如：（ps: 写个 函数create，实现 Object.create 的功能）&lt;/strong&gt;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/ziyunfei/archive/2012/09/17/2688829.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;什么是 polyfill？&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Object.create&lt;/code&gt; 的内部实现逻辑前面的解释和原型图已经很明了，现在通过自定义函数实现：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//create传入的参数是需要继承的对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;create&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;obj&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;F&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&amp;#125;&lt;span class=&quot;comment&quot;&gt;//基于传入对象创建一个临时的构造函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    F.prototype = obj;&lt;span class=&quot;comment&quot;&gt;//将传入的对象作为构造函数的原型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; F();&lt;span class=&quot;comment&quot;&gt;//返回构造函数的一个新实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;a: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, b:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj2 = create(obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(obj2.a); &lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;区区3行,这是 ECMAScript 另外一种继承的思路：原型式继承。最初由 &lt;a href=&quot;http://www.crockford.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Douglas Crockford&lt;/a&gt; 在其文章 &lt;a href=&quot;http://javascript.crockford.com/prototypal.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Prototypal Inheritance in JavaScript》&lt;/a&gt; 中提出。&lt;/p&gt;
&lt;p&gt;ECMAScript5 通过新增 &lt;code&gt;Object.create()&lt;/code&gt; 方法创建一个拥有指定原型和若干个指定属性的对象，规范化了原型式继承，&lt;code&gt;Object.create()&lt;/code&gt; 在传入一个参数的情况下，和 &lt;code&gt;create()&lt;/code&gt; 方法的行为相同。&lt;/p&gt;
&lt;h4 id=&quot;如下代码中-call-的作用是什么&quot;&gt;&lt;a href=&quot;#如下代码中-call-的作用是什么&quot; class=&quot;headerlink&quot; title=&quot;如下代码中 call 的作用是什么?&quot;&gt;&lt;/a&gt;&lt;strong&gt;如下代码中 call 的作用是什么?&lt;/strong&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, sex&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sex = sex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Male&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, sex, age&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Person.call(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, name, sex);    &lt;span class=&quot;comment&quot;&gt;//这里的 call 有什么作用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;前面谈论 &lt;code&gt;this&lt;/code&gt; 时（参见&lt;a href=&quot;./2016/05/04/关于-this-二三事/#more&quot;&gt;《关于 “this” 二三事》&lt;/a&gt;）已经简单提过 &lt;code&gt;call&lt;/code&gt; 和 &lt;code&gt;apply&lt;/code&gt; 函数的一般作用：用来动态改变某个函数运行时上下文（重新定义函数的执行环境），也就是函数内部 &lt;code&gt;this&lt;/code&gt; 的指向。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;call&lt;/code&gt; 和 &lt;code&gt;apply&lt;/code&gt; 也正是通过这种作用来实现继承，上面代码中，&lt;code&gt;call&lt;/code&gt; 将 &lt;code&gt;Person&lt;/code&gt; 这个构造函数的运行时上下文变为 &lt;code&gt;Male&lt;/code&gt; 这个构造函数（&lt;code&gt;Person&lt;/code&gt; 内部的 &lt;code&gt;this&lt;/code&gt; 指向 &lt;code&gt;Male&lt;/code&gt;）;&lt;/p&gt;
&lt;p&gt;这时候通过 &lt;code&gt;new&lt;/code&gt; 新建 &lt;code&gt;Male&lt;/code&gt; 的实例对象：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; goodman = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Male(&lt;span class=&quot;string&quot;&gt;&quot;Gardon&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;male&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(goodman.age);&lt;span class=&quot;comment&quot;&gt;//20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(goodman.name);&lt;span class=&quot;comment&quot;&gt;//Gardon&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(goodman.sex);&lt;span class=&quot;comment&quot;&gt;//male&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;发现 &lt;code&gt;goodman&lt;/code&gt; 是不是就有了 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;sex&lt;/code&gt; 属性呢？然而 &lt;code&gt;Male&lt;/code&gt; 中并没有这两个属性，而是通过 &lt;code&gt;call&lt;/code&gt; 函数继承了 &lt;code&gt;Person&lt;/code&gt; 的属性。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;apply 函数与 call 函数作用相同，参数传入方式略有区别，同样参见之前的博文&lt;a href=&quot;./2016/05/04/关于-this-二三事/#more&quot;&gt;《关于 “this” 二三事》&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Person.apply(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,[name, sex]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;补全代码，实现继承&quot;&gt;&lt;a href=&quot;#补全代码，实现继承&quot; class=&quot;headerlink&quot; title=&quot;补全代码，实现继承&quot;&gt;&lt;/a&gt;&lt;strong&gt;补全代码，实现继承&lt;/strong&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, sex&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sex = sex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Male&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, sex, age&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age = age;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Person.call(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,name,sex)&lt;span class=&quot;comment&quot;&gt;//call方法继承属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Male.prototype = &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.create(Person.prototype);&lt;span class=&quot;comment&quot;&gt;//Object.create继承原型方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Male.prototype.printName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.getName())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Male.prototype.getAge = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; john = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Male(&lt;span class=&quot;string&quot;&gt;&#39;Gardon&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;male&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;john.printName();&lt;span class=&quot;comment&quot;&gt;//Gardon&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;【小试牛刀】&quot;&gt;&lt;a href=&quot;#【小试牛刀】&quot; class=&quot;headerlink&quot; title=&quot;【小试牛刀】&quot;&gt;&lt;/a&gt;【小试牛刀】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;实现如下可拖拽-dialog-弹窗功能，如下是功能要求&quot;&gt;&lt;a href=&quot;#实现如下可拖拽-dialog-弹窗功能，如下是功能要求&quot; class=&quot;headerlink&quot; title=&quot;实现如下可拖拽 dialog 弹窗功能，如下是功能要求&quot;&gt;&lt;/a&gt;&lt;strong&gt;实现如下可拖拽 dialog 弹窗功能，如下是功能要求&lt;/strong&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//功能描述：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 1. 可使用 dialog.open() 去打开弹窗&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 2. 当点击确定、取消时可使用用户自定义事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 3. dialog 可拖动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 4. 允许页面展示多个 dialog&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Dialog&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//todo ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tpl = &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;列表1&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;列表2&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;列表1&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;列表1&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#open4&#39;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; dialog4 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Dialog();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dialog4.open(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    title: &lt;span class=&quot;string&quot;&gt;&#39;Message&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    message: tpl,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    isShowCloseBtn: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    isShowConfirmBtn: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onClose: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      alert(&lt;span class=&quot;string&quot;&gt;&#39;取消&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onConfirm: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      alert(&lt;span class=&quot;string&quot;&gt;&#39;确定&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首先实现一个普通的 &lt;code&gt;dialog&lt;/code&gt;，前面用过原生 JavaScript 实现过，但是还比较简陋。现在我们用面向对象的写法将其封装成jQuery插件：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://febox.applinzi.com/goDialog/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DEMO预览&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/tree/master/homework/%E6%9D%8E%E6%93%8D/goDialog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实现代码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后我们在上面的基础上，加入拖拽事件，&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://febox.applinzi.com/task37/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DEMO预览&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/tree/master/homework/%E6%9D%8E%E6%93%8D/task37&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实现代码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xr868.com1.z0.glb.clouddn.com/task36/Person%E5%8E%9F%E5%9E%8B%E5%9B%BE.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;还记得这张原型图么（没见过 or 忘了的请戳&lt;a href=&quot;./2016/05/10/OOP-For-JavaScript/&quot;&gt;《OOP For JavaScript》&lt;/a&gt;和&lt;a href=&quot;./2016/05/12/原型链/&quot;&gt;《说清楚JavaScript的原型链》&lt;/a&gt;这两篇博文）？深入学习了JavaScript原型和原型链的的概念和原理后，我们内心会隐隐有种道不明的感觉，如果你学习过其他面向对象语言，你会不自觉发现这是种多么熟悉的感觉啊——这不就像是继承么？此文就将内心的感觉整理出来，作为JavaScript语言的一个核心概念来学习。&lt;/blockquote&gt;
    
    </summary>
    
      <category term="编程学习" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端基础" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="JavaScript" scheme="http://licao404.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>说清楚JavaScript的原型链</title>
    <link href="http://licao404.com/2016/05/12/%E5%8E%9F%E5%9E%8B%E9%93%BE/"/>
    <id>http://licao404.com/2016/05/12/原型链/</id>
    <published>2016-05-12T02:15:34.000Z</published>
    <updated>2016-05-13T15:04:13.808Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;首先通过一个小例子来为我们解释原型链做个准备工作，了解几个概念有助于我们由浅入深挖掘JavaScript原型链。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.sayName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;My name is :&#39;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&quot;Gardon&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p.sayName();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;试着解释Person、-prototype、proto、p、constructor之间的关联。&quot;&gt;&lt;a href=&quot;#试着解释Person、-prototype、proto、p、constructor之间的关联。&quot; class=&quot;headerlink&quot; title=&quot;试着解释Person、 prototype、proto、p、constructor之间的关联。&quot;&gt;&lt;/a&gt;&lt;strong&gt;试着解释Person、 prototype、&lt;strong&gt;proto&lt;/strong&gt;、p、constructor之间的关联。&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;这里首先创建了一个构造函数 &lt;code&gt;Person&lt;/code&gt;，每个函数都有一个 &lt;strong&gt;prototype&lt;/strong&gt; 属性，指向它的原型对象；&lt;/li&gt;
&lt;li&gt;同时原型对象会有一个 &lt;strong&gt;constructor&lt;/strong&gt; 属性，指回 &lt;code&gt;prototype&lt;/code&gt; 所在的函数（这里也就是 &lt;code&gt;Person&lt;/code&gt;）；&lt;/li&gt;
&lt;li&gt;每个对象都会有 &lt;code&gt;__proto__&lt;/code&gt; 属性（包括函数，函数也是对象），指向它的构造函数（上一层）的原型对象，这里 &lt;code&gt;p&lt;/code&gt; 是通过构造函数 &lt;code&gt;Person&lt;/code&gt; 的实例对象，它的 &lt;code&gt;__proto__&lt;/code&gt; 属性会指向 &lt;code&gt;Person&lt;/code&gt; 的原型对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;2-上例中，对对象-p-可以这样调用-p-toString-。toString是哪里来的-画出原型图-并解释什么是原型链。&quot;&gt;&lt;a href=&quot;#2-上例中，对对象-p-可以这样调用-p-toString-。toString是哪里来的-画出原型图-并解释什么是原型链。&quot; class=&quot;headerlink&quot; title=&quot;2. 上例中，对对象 p 可以这样调用 p.toString()。toString是哪里来的? 画出原型图? 并解释什么是原型链。&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. 上例中，对对象 p 可以这样调用 p.toString()。toString是哪里来的? 画出原型图? 并解释什么是原型链。&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;原型图示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xr868.com1.z0.glb.clouddn.com/task36/Person%E5%8E%9F%E5%9E%8B%E5%9B%BE.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;toString 是在最高级的 &lt;strong&gt;Object&lt;/strong&gt; 方法的原型对象中；&lt;/p&gt;
&lt;p&gt;为何 &lt;code&gt;p.toString()&lt;/code&gt; 会找到 &lt;code&gt;Object&lt;/code&gt; 中去呢，这就得解释原型链了，如上图中所示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JavaScript 每个对象都有 &lt;code&gt;__proto__&lt;/code&gt; 属性指向上一层的原型对象，上一层的原型对象的结构依然类似，通过 &lt;code&gt;__proto__&lt;/code&gt; 属性指向上一层的原型对象，这样就用 &lt;code&gt;__proto__&lt;/code&gt; 顺藤摸瓜找到 Object 的原型对象上，这条寻找的链就是 JavaScript 的原型链，而 Object 的原型对象用 &lt;code&gt;Object.proto = null&lt;/code&gt; 表示原型链的最顶端，如此变形成了javascript 的原型链继承 ，同时也解释了为什么所有的javascript对象都具有Object 的基本方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;相当于对象 &lt;code&gt;p&lt;/code&gt; 找自己看有无 toString() 方法，没有，找上一层，以此类推，直到找到 Object 中有toString()方法。&lt;/p&gt;
&lt;h4 id=&quot;3-对-String-做扩展，实现如下方式获取字符串中频率最高的字符&quot;&gt;&lt;a href=&quot;#3-对-String-做扩展，实现如下方式获取字符串中频率最高的字符&quot; class=&quot;headerlink&quot; title=&quot;3. 对 String 做扩展，实现如下方式获取字符串中频率最高的字符&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. 对 String 做扩展，实现如下方式获取字符串中频率最高的字符&lt;/strong&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;.prototype.getMostOften = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _this = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mostoften = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    target;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(_this)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; letter = _this.charAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;),&lt;span class=&quot;comment&quot;&gt;//依次遍历当前字符串中的不重复出现的字母&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        afterstr = _this.split(letter),&lt;span class=&quot;comment&quot;&gt;//剔除当前字符串重复出现的字母&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        count = _this.length - (_this = afterstr.join(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)).length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//出现了count次,并同时将已剔除重复字符串的字符串设置为当前字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(count &amp;gt; mostoften)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mostoften = count;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        target = letter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;出现最多&quot;&lt;/span&gt;:target,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;出现次数&quot;&lt;/span&gt;:mostoften&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; str = &lt;span class=&quot;string&quot;&gt;&#39;ahbbccdeddddfg&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ch = str.getMostOften();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(ch); &lt;span class=&quot;comment&quot;&gt;//d , 因为d 出现了5次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;4-instanceOf-有什么作用？内部逻辑是如何实现的？&quot;&gt;&lt;a href=&quot;#4-instanceOf-有什么作用？内部逻辑是如何实现的？&quot; class=&quot;headerlink&quot; title=&quot;4. instanceOf 有什么作用？内部逻辑是如何实现的？&quot;&gt;&lt;/a&gt;&lt;strong&gt;4. instanceOf 有什么作用？内部逻辑是如何实现的？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;instanceOf&lt;/strong&gt; 是用来判断一个对象是否是某个构造函数的实例。&lt;/p&gt;
&lt;p&gt;由上面 &lt;strong&gt;2&lt;/strong&gt; 的原型图和总结的原型链的概念可以知道，想实现 &lt;code&gt;instanceOf&lt;/code&gt; 的功能，就是判断这个对象的 &lt;code&gt;__proto__&lt;/code&gt; 所指向的原型对象是不是就是某个函数的原型对象（也就是函数的 &lt;code&gt;prototype&lt;/code&gt; 所指）。在上图中 &lt;code&gt;instanceOf&lt;/code&gt; 实际上就是做如下判断：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;p.__proto__ === Person.prototype;&lt;span class=&quot;comment&quot;&gt;//true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当然，由于原型链，顺藤摸瓜可知，任何对象都会是 &lt;code&gt;Object&lt;/code&gt; 的实例；&lt;/p&gt;
&lt;p&gt;了解了内部实现原理，我们尝试自定义函数来完成 &lt;code&gt;instanceOf&lt;/code&gt; 的工作:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isObjInstanceOfFunc&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;obj,Func&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; __proto__ = obj.__proto__;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(__proto__=== Func.prototype)&amp;#123;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!__proto__)&amp;#123;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&amp;#125;&lt;span class=&quot;comment&quot;&gt;//到了 Object 的原型，undefined，return false停止循环&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (__proto__=__proto__.__proto__);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;首先通过一个小例子来为我们解释原型链做个准备工作，了解几个概念有助于我们由浅入深挖掘JavaScript原型链。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.sayName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;My name is :&#39;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&quot;Gardon&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p.sayName();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="编程学习" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端基础" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="JavaScript" scheme="http://licao404.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>【转】前端开发中的字符编码</title>
    <link href="http://licao404.com/2016/05/12/%E3%80%90%E8%BD%AC%E3%80%91%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/"/>
    <id>http://licao404.com/2016/05/12/【转】前端开发中的字符编码/</id>
    <published>2016-05-12T00:28:36.000Z</published>
    <updated>2016-05-12T01:30:30.733Z</updated>
    
    <content type="html">&lt;img src=&quot;http://7xrvo9.com1.z0.glb.clouddn.com/2016.0512/meiziCoder2.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot;&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;前端开发过程中会接触各种各样的编码，比较常见的主要是UTF－8和HTML实体编码，但是web前端的世界却不止这两种编码，而且编码的选择也会造成一定的问题，如前后端开发过程中不同编码的兼容、多字节编码可能会造成的XSS漏洞等。因此，本文旨在更好的全面了解涉及前端开发领域的字符编码，避免可能出现的交互和开发中的忽视的漏洞。&lt;/blockquote&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;URL编码&quot;&gt;&lt;a href=&quot;#URL编码&quot; class=&quot;headerlink&quot; title=&quot;URL编码&quot;&gt;&lt;/a&gt;URL编码&lt;/h3&gt;&lt;p&gt;我曾经在 &lt;strong&gt;URL编码解码和base64&lt;/strong&gt; 一文中讲述了URL编码中的三组函数，并对比了这三组函数与base64编码的关系，在此简要说明一下。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;escape/unescape&lt;/code&gt; 函数针对宽字符做 &lt;code&gt;unicode&lt;/code&gt; 编码，并针对码值做十六进制编码，所以使用 &lt;code&gt;escape&lt;/code&gt; 针对汉字编码会得到形如 “\uxxxx”      的结果；&lt;code&gt;encodeURI/decodeURI&lt;/code&gt;,&lt;code&gt;encodeURIComponent/decodeURIComponent&lt;/code&gt; 函数针对宽字节编码却不同于 &lt;code&gt;escape&lt;/code&gt; ，首先针对宽字节字符进行 &lt;code&gt;UTF－8&lt;/code&gt; 编码，然后针对编码后的结果进行“％”替换，得到结果。以上所述都是针对宽字节字符而言，对于编码靠前的 &lt;code&gt;ASCII&lt;/code&gt; 字符而言，上述三组函数的安全字符的范围也有所不同，具体可在上文中了解。&lt;/p&gt;
&lt;h3 id=&quot;base64编码&quot;&gt;&lt;a href=&quot;#base64编码&quot; class=&quot;headerlink&quot; title=&quot;base64编码&quot;&gt;&lt;/a&gt;base64编码&lt;/h3&gt;&lt;p&gt;&lt;code&gt;base64&lt;/code&gt; 编码在前端通常用于图片和 &lt;code&gt;icon&lt;/code&gt; 的编码，它将每3个8位字节为一组，分成4组6位字节，并且每个字节的高位补零，形成4个8位的字节，由此可看出 &lt;code&gt;base64&lt;/code&gt; 编码是可逆推的。在大多数浏览器中，提供了ASCII字符的 &lt;code&gt;base64&lt;/code&gt; 编码函数，即 &lt;code&gt;window.btoa()&lt;/code&gt; 。该函数无法针对宽字节进行 &lt;code&gt;base64&lt;/code&gt; 编码，若针对中文编码，则需现转换位 &lt;code&gt;UTF－8&lt;/code&gt; 编码，然后进行 &lt;code&gt;base64&lt;/code&gt; 编码。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;unicodeToBase64&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;s&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.btoa(&lt;span class=&quot;built_in&quot;&gt;unescape&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;encodeURIComponent&lt;/span&gt; (s))) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过encodeURIComponent对宽字节字符编码，是“％xx”形式的编码，与UTF8编码的区别仅在于前缀（这是由规范RFC3986决定的，将非ASC字符进行某种形式编码，并转换为16进制，并在字节前加上“％”）。因此通过unescape(encodeURIComponent(s))可以转化为UTF8字节。当然，也可自己写一个转换函数，按照一定规则便行为UTF－8编码的字节，如下例：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;unescape&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;encodeURIComponent&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&quot;中国&quot;&lt;/span&gt;))&lt;span class=&quot;comment&quot;&gt;//结果：&quot;ä¸­å½&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;encodeURIComponent&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&quot;中国&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;//结果：&quot;%E4%B8%AD%E5%9B%BD&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;\u00E4\u00B8\u00AD\u00E5\u009B\u00BD&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;//结果：ä¸­å½&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过简单的replace函数，就可以完成URL编码到UTF8编码的转换，进而完成宽字节字符到base64编码的转换。有了这个函数，我们手动生成一些data URI形式的内容，只需制定MIME类型和编码方式，就可以实现文本的转换，如以下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;a href=&quot;data:text/html;charset=utf-8;base64,PHNjcmlwdD5hbGVydCgxMik8L3NjcmlwD4=&quot;&amp;gt;abc&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//未编码前：&amp;lt;a href=&quot;javascript: alert(1)&quot;&amp;gt;test&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;前端UTF8编码与后端GBK编码的兼容&quot;&gt;&lt;a href=&quot;#前端UTF8编码与后端GBK编码的兼容&quot; class=&quot;headerlink&quot; title=&quot;前端UTF8编码与后端GBK编码的兼容&quot;&gt;&lt;/a&gt;前端UTF8编码与后端GBK编码的兼容&lt;/h3&gt;&lt;p&gt;目前前端大都采用UTF8进行编码，不管是html、js抑或是css，而后端则由于历史原因大都采用GBK或GB2312进行解码，因此前端通过parameter传递的URL编码的字符串就不可能直接在后台进行解码，为了更好的兼容性，前端可进行两次URL编码，即encodeURIComponent（encodeURIComponent（“中国”）），这样后端接收到参数后，先使用GBK或GB2312解码，得到了UTF8编码后再使用UTF8解码即可。两次编码主要是利用“ASC字符使用GBK或GB2312编码不变”的特点完成，富有技巧。&lt;/p&gt;
&lt;h3 id=&quot;HTML实体编码与进制编码&quot;&gt;&lt;a href=&quot;#HTML实体编码与进制编码&quot; class=&quot;headerlink&quot; title=&quot;HTML实体编码与进制编码&quot;&gt;&lt;/a&gt;HTML实体编码与进制编码&lt;/h3&gt;&lt;p&gt;实体编码针对HTML的预留字符而言，如“&amp;lt;&amp;gt;”等。实体编码有两种形式&lt;code&gt;&amp;amp;&lt;/code&gt;实体名;或 &lt;code&gt;&amp;amp;entity_number&lt;/code&gt;;，由于浏览器对 &lt;code&gt;&amp;amp;&lt;/code&gt; 实体名 &lt;code&gt;;&lt;/code&gt; 的兼容性有差别，因此最好采用实体号的形式编码。&lt;/p&gt;
&lt;p&gt;进制编码，顾名思义将 &lt;code&gt;ASC&lt;/code&gt; 字符对应的码值按照十六进制或十进制编码，并转化为 &lt;code&gt;&amp;amp;#x&lt;/code&gt;;(16进制)或 &lt;code&gt;&amp;amp;#D&lt;/code&gt;;(10进制)形式。&lt;/p&gt;
&lt;p&gt;单单针对实体编码而言并没有什么特殊强调的点，之所以把它单独列为一个章节，意在强调这两种编码与js代码的作用域的关系。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;document.write(&amp;lt;img src=1 onerror=alert(23)&amp;gt;&#39;)&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;ccc&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;document.write(&#39;&amp;amp;lt;img src=1 onerror=alert(23)&amp;amp;gt;&#39;)&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;ccc&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;#x3c;&amp;amp;#x69;&amp;amp;#x6d;&amp;amp;#x67;&amp;amp;#x20;&amp;amp;#x73;&amp;amp;#x72;&amp;amp;#x63;&amp;amp;#x3d;&amp;amp;#x31;&amp;amp;#x20;&amp;amp;#x6f;&amp;amp;#x6e;&amp;amp;#x65;&amp;amp;#x72;&amp;amp;#x72;&amp;amp;#x6f;&amp;amp;#x72;&amp;amp;#x3d;&amp;amp;#x61;&amp;amp;#x6c;&amp;amp;#x65;&amp;amp;#x72;&amp;amp;#x74;&amp;amp;#x28;&amp;amp;#x32;&amp;amp;#x33;&amp;amp;#x29;&amp;amp;#x3e;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onerror&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;amp;#x61;&amp;amp;#x6c;&amp;amp;#x65;&amp;amp;#x72;&amp;amp;#x74;&amp;amp;#x28;&amp;amp;#x32;&amp;amp;#x33;&amp;amp;#x29;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.write(&lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;lt;img src=1 onerror=alert(23)&amp;amp;gt;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.write(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;img src=1 onerror=&amp;amp;#x61;&amp;amp;#x6c;&amp;amp;#x65;&amp;amp;#x72;&amp;amp;#x74;&amp;amp;#x28;&amp;amp;#x33;&amp;amp;#x29;&amp;gt;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.write(&lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;#x3c;&amp;amp;#x69;&amp;amp;#x6d;&amp;amp;#x67;&amp;amp;#x20;&amp;amp;#x73;&amp;amp;#x72;&amp;amp;#x63;&amp;amp;#x3d;&amp;amp;#x31;&amp;amp;#x20;&amp;amp;#x6f;&amp;amp;#x6e;&amp;amp;#x65;&amp;amp;#x72;&amp;amp;#x72;&amp;amp;#x6f;&amp;amp;#x72;&amp;amp;#x3d;&amp;amp;#x61;&amp;amp;#x6c;&amp;amp;#x65;&amp;amp;#x72;&amp;amp;#x74;&amp;amp;#x28;&amp;amp;#x32;&amp;amp;#x33;&amp;amp;#x29;&amp;amp;#x3e;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.write(&lt;span class=&quot;string&quot;&gt;&#39;\u003c\u0069\u006d\u0067\u0020\u0073\u0072\u0063\u003d\u0031\u0020\u006f\u006e\u0065\u0072\u0072\u006f\u0072\u003d\u0061\u006c\u0065\u0072\u0074\u0028\u0032\u0033\u0029\u003e&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;代码中列举了8个例子，第一个在事件处理函数onclick中输出HTML片段；第二个则输出经实体编码后的HTML片段；第三个则是直接针对 &lt;code&gt;&amp;lt;img src=1 onerror=alert(23)&amp;gt;&lt;/code&gt; 做16进制编码；第四个则是针对onerror事件处理函数做16进制编码；第五个则是在脚本中输出实体编码的字符；第六个针对事件处理函数做16进制编码；第七个则针对所有的字符做16进制编码；第八个则是在script中直接输出 &lt;code&gt;&amp;lt;img src=1 onerror=alert(23)&amp;gt;&lt;/code&gt; 的unicode编码。&lt;/p&gt;
&lt;p&gt;对比结果，前两个例子在点击后都会弹出alert；第三个例子则在页面中显示文本 &lt;code&gt;&amp;lt;img src=1 onerror=alert(23)&amp;gt;&lt;/code&gt; ；第四个例子则会在页面加载初期弹出alert；第五、七会输出字符串；第六、八则会在第四个例子中的alert之后也弹出alert。现在分析这些结果，通过第一二个例子可知道，HTML标签中（除script标签）的内联js代码可以进行HTML实体编码，这是非常重要的一点，我们可以更为明确的进行验证：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;alert(&#39;&amp;amp;lt;img src=1 onerror=alert(23)&amp;amp;gt;&#39;)&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出的结果自然是 &lt;code&gt;&amp;lt;img src=1onerror=alert(23)&amp;gt;&lt;/code&gt;，这的确论证了我们上文提到的这一点；第三个例子说明了HTML解析器在进行词法分析前，首先进行解码，十六进制和十进制皆可，因此，结果自然输出形如 &lt;code&gt;&amp;lt;img src=1 onerror=alert(23)&amp;gt;&lt;/code&gt; 的字符串；第四个例子则紧接着论证了内联在HTML的并采用十六进制编码的js代码同样会被正确解析并执行，这说明了进制编码同样可被HTML解析器解析；第五、七个例子说明在js中同样可以使用实体编码和进制编码，解析的结果会渲染在页面上；第六个例子则论证了上一观点，只针对事件处理函数做进制编码，执行后页面弹出alert；第八个例子则是在js中执行unicode编码的字符串，正常alert。&lt;/p&gt;
&lt;p&gt;由此可见，js代码内联在HTML的非script标签内，则会遵守HTML编码规范：进制编码和实体编码；而在js代码（script标签内以及js文件内）中，则遵从js编码：1,unicode形式编码(\uxxxx)2,普通的16进制编码(\xH)，这可通过第八个例子得到证明。之所以在本节提到这么多编码特点，主要提醒大家在预防XSS时需要注意的几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;检测用户输入时，不仅仅需要防范类似“&amp;lt;&amp;gt;”这样的字符，通过unicode编码或进制编码仍有可能注入代码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;需要针对特定的关键字做过滤，如“eval、write、prototype”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;尽可能禁止内联事件处理函数的使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;js过滤“src/href/action”属性，如“javascript:”,”data:”&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;JS编码&quot;&gt;&lt;a href=&quot;#JS编码&quot; class=&quot;headerlink&quot; title=&quot;JS编码&quot;&gt;&lt;/a&gt;JS编码&lt;/h3&gt;&lt;p&gt;其实在上节中已提到了js编码，即js可执行unicode编码和十六（八）进制编码后的字符串，但是不支持十进制编码的字串。具体操作可通过常用的几个函数来实现，如“eval，write，setTimeout，Function”执行编码后的字符串；同样，对于十进制编码的字串，通过结合String.fromCharCode和eval同样可以执行。&lt;/p&gt;
&lt;p&gt;在此附上笔者实现的字符转换，更为灵活的实现各种自定义形式的字串编码:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Code = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param str 待编码字串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param jinzhi 进制编码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param prefix 前缀&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param postfix 后缀&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param count 总共编码的位数，默认为4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @returns &amp;#123;string&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Code.encode = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&amp;#123;str = &#39;&#39;,jinzhi = &#39;16&#39;,prefix = &#39;\\u&#39;,postfix = &#39;;&#39;,count = &#39;4&#39;&amp;#125; = &amp;#123;&amp;#125;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ret = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; addZero,tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;str.length;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tmp = str.charCodeAt(i).toString(jinzhi);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            addZero = count - tmp.length + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ret += prefix + &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;(addZero).join(&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;) + tmp + postfix;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Code.decode = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&amp;#123;str = &#39;&#39;,jinzhi = &#39;16&#39;,prefix = &#39;\\u&#39;,postfix = &#39;;&#39;&amp;#125; = &amp;#123;&amp;#125;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ret = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; splits = str.split(&lt;span class=&quot;string&quot;&gt;&#39;;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;splits.length;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; tmp = splits[i].replace(prefix,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ret += &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;.fromCharCode(&lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(tmp,jinzhi));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(Code.encode(&amp;#123;str: &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;img src=@ onerror=alert(123) /&amp;gt;&#39;&lt;/span&gt;&amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(Code.decode(&amp;#123;str: Code.encode(&amp;#123;str: &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;img src=@ onerror=alert(123) /&amp;gt;&#39;&lt;/span&gt;&amp;#125;)&amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另外，对于js输出点的过滤其实并不仅限于上文提到的如eval、setTimeout、Function等几个，由于JS语法比较灵活相对“漏洞”较多，可使用的“线索”也越丰富，如前段时间在Stackoverflow上发现的一个问题，即&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)[&lt;span class=&quot;string&quot;&gt;&#39;constructor&#39;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&#39;constructor&#39;&lt;/span&gt;](&lt;span class=&quot;string&quot;&gt;&#39;return &quot;abc;&quot;&#39;&lt;/span&gt;)()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同样可以执行JS代码，确实挺有特点的，具体为什么上述形式可以执行代码，请读者自己仔细品味。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文由杭州尚妆@欲休分享  |  &lt;a href=&quot;http://www.cnblogs.com/accordion/p/5468704.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://7xrvo9.com1.z0.glb.clouddn.com/2016.0512/meiziCoder2.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; /&gt;
&lt;blockquote class = &quot;blockquote-center&quot;&gt;前端开发过程中会接触各种各样的编码，比较常见的主要是UTF－8和HTML实体编码，但是web前端的世界却不止这两种编码，而且编码的选择也会造成一定的问题，如前后端开发过程中不同编码的兼容、多字节编码可能会造成的XSS漏洞等。因此，本文旨在更好的全面了解涉及前端开发领域的字符编码，避免可能出现的交互和开发中的忽视的漏洞。&lt;/blockquote&gt;
    
    </summary>
    
      <category term="编程学习" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端高级" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E9%AB%98%E7%BA%A7/"/>
    
    
      <category term="转载" scheme="http://licao404.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="干货" scheme="http://licao404.com/tags/%E5%B9%B2%E8%B4%A7/"/>
    
      <category term="字符编码" scheme="http://licao404.com/tags/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>OOP For JavaScript</title>
    <link href="http://licao404.com/2016/05/10/OOP-For-JavaScript/"/>
    <id>http://licao404.com/2016/05/10/OOP-For-JavaScript/</id>
    <published>2016-05-10T14:08:53.000Z</published>
    <updated>2016-05-12T01:51:51.222Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;h3 id=&quot;【知识点】&quot;&gt;&lt;a href=&quot;#【知识点】&quot; class=&quot;headerlink&quot; title=&quot;【知识点】&quot;&gt;&lt;/a&gt;【知识点】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;1-OOP-指什么？有哪些特性&quot;&gt;&lt;a href=&quot;#1-OOP-指什么？有哪些特性&quot; class=&quot;headerlink&quot; title=&quot;1. OOP 指什么？有哪些特性 &quot;&gt;&lt;/a&gt;&lt;strong&gt;1. OOP 指什么？有哪些特性 &lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;OOP （Object Oriented Programming）是面向对象编程，是一种计算机编程架构。面向对象语言（C++，Java等）有一个标志，都有类的概念，通过类可以创建多个具有相同属性和方法的对象（类的实例化）。OOP 达到了软件工程的三个主要目标：重用性、灵活性和扩展性。为了实现整体运算，每个对象都能够接收信息、处理数据和向其它对象发送信息。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;OOP的特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;封装&lt;/strong&gt;：确保组件（数据和功能一起在运行着的计算机程序中形成的单元）不会以不可预期的方式改变其它组件的内部状态；只有在那些提供了内部状态改变方法的组件中，才可以访问其内部状态。每类组件都提供了一个与其它组件联系的接口，并规定了其它组件进行调用的方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;抽象&lt;/strong&gt;：程序有能力忽略正在处理中信息的某些方面，即对信息主要方面关注的能力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;多态&lt;/strong&gt;：组件的引用和类集会涉及到其它许多不同类型的组件，而且引用组件所产生的结果依据实际调用的类型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;继承&lt;/strong&gt;：允许在现存的组件基础上创建子类组件，这统一并增强了多态性和封装性。典型地来说就是用类来对组件进行分组，而且还可以定义新类为现存的类的扩展，这样就可以将类组织成树形或网状结构，这体现了动作的通用性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;2-如何通过构造函数的方式创建一个拥有属性和方法的对象&quot;&gt;&lt;a href=&quot;#2-如何通过构造函数的方式创建一个拥有属性和方法的对象&quot; class=&quot;headerlink&quot; title=&quot;2. 如何通过构造函数的方式创建一个拥有属性和方法的对象?&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. 如何通过构造函数的方式创建一个拥有属性和方法的对象?&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;创建自定义的构造函数，从而定义自定义对象类型的属性和方法，例如下面的构造函数模式：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Student&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name,age,score&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.score = score;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.alertScore = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name + &lt;span class=&quot;string&quot;&gt;&#39;:&#39;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.score);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;创建一个 &lt;code&gt;Student&lt;/code&gt; 的实例，需要使用 &lt;strong&gt;new&lt;/strong&gt; 操作符：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; xiaomin = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Student(&lt;span class=&quot;string&quot;&gt;&quot;xiaomin&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; gardon = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Student(&lt;span class=&quot;string&quot;&gt;&quot;gardon&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;75&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;用 &lt;code&gt;new&lt;/code&gt; 调用构造函数实际上经过了4中步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建一个新对象；&lt;/li&gt;
&lt;li&gt;将构造函数的作用域赋给新对象(this指向这个新对象)；&lt;/li&gt;
&lt;li&gt;执行构造函数中的代码，将属性和方法添加到这个对象上；&lt;/li&gt;
&lt;li&gt;返回新对象&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;3-prototype-是什么？有什么特性&quot;&gt;&lt;a href=&quot;#3-prototype-是什么？有什么特性&quot; class=&quot;headerlink&quot; title=&quot;3. prototype 是什么？有什么特性&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. prototype 是什么？有什么特性&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;JavaScript中创建的每一个函数都有一个 &lt;strong&gt;prototype（原型）&lt;/strong&gt; 属性，这个属性是一个指针，指向一个原型对象，这个对象拥有一系列属性和方法且能被所有特定类型的实例共享。换而言之 &lt;code&gt;prototype&lt;/code&gt; 就是上题中通过调用构造函数创建的那个对象实例(&lt;code&gt;xiaomin&lt;/code&gt;)的原型对象。&lt;/p&gt;
&lt;p&gt;特性：让特定对象的所有实例共享 &lt;code&gt;prototype&lt;/code&gt; (原型对象)包含的属性和方法。不用在构造函数中定义对象实例的信息，而是可以将这些信息直接添加到 &lt;code&gt;prototype&lt;/code&gt; 中,如上题中：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Student&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Student.prototype.name = &lt;span class=&quot;string&quot;&gt;&quot;John&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Student.prototype.age = &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Student.prototype.score = &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Student.prototype.alertScore = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name + &lt;span class=&quot;string&quot;&gt;&#39;:&#39;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.score);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; xiaomin = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Student();&lt;span class=&quot;comment&quot;&gt;//alert John:90&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(xiaomin.age);&lt;span class=&quot;comment&quot;&gt;//console.log 18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; gardon = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Student();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gardon.alertScore();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(xiaomin.alertScore === gardon.alertScore);&lt;span class=&quot;comment&quot;&gt;//true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;4-画出如下代码的原型图&quot;&gt;&lt;a href=&quot;#4-画出如下代码的原型图&quot; class=&quot;headerlink&quot; title=&quot;4. 画出如下代码的原型图&quot;&gt;&lt;/a&gt;&lt;strong&gt;4. 画出如下代码的原型图&lt;/strong&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;People&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sayName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;my name is:&#39;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;People.prototype.walk = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name + &lt;span class=&quot;string&quot;&gt;&#39; is walking&#39;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; People(&lt;span class=&quot;string&quot;&gt;&#39;小明&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; People(&lt;span class=&quot;string&quot;&gt;&#39;蓝岚&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrvo9.com1.z0.glb.clouddn.com/2016.0511/%E5%8E%9F%E5%9E%8B%E5%9B%BE2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;5-以下代码中的变量-name-有什么区别&quot;&gt;&lt;a href=&quot;#5-以下代码中的变量-name-有什么区别&quot; class=&quot;headerlink&quot; title=&quot;5. 以下代码中的变量 name 有什么区别&quot;&gt;&lt;/a&gt;&lt;strong&gt;5. 以下代码中的变量 name 有什么区别&lt;/strong&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;People&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&quot;小明&quot;&lt;/span&gt;            &lt;span class=&quot;comment&quot;&gt;//定义了一个局部变量name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = &lt;span class=&quot;string&quot;&gt;&quot;我&quot;&lt;/span&gt;;             &lt;span class=&quot;comment&quot;&gt;//给this所指的对象（多种情况）绑定一个name属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;People.name = &lt;span class=&quot;string&quot;&gt;&quot;jscode&quot;&lt;/span&gt;;         &lt;span class=&quot;comment&quot;&gt;//给函数People（对象）绑定一个name属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;People.prototype.name = &lt;span class=&quot;string&quot;&gt;&quot;蓝岚&quot;&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//给People的原型对象绑定一个name属性，如果new一个People的实例，这个实例的name属性为“我”，而不是原型对象上的“学前端”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;【练习】&quot;&gt;&lt;a href=&quot;#【练习】&quot; class=&quot;headerlink&quot; title=&quot;【练习】&quot;&gt;&lt;/a&gt;【练习】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;1-创建一个-Car-对象，拥有属性name、color、status；拥有方法run，stop，getStatus&quot;&gt;&lt;a href=&quot;#1-创建一个-Car-对象，拥有属性name、color、status；拥有方法run，stop，getStatus&quot; class=&quot;headerlink&quot; title=&quot;1. 创建一个 Car 对象，拥有属性name、color、status；拥有方法run，stop，getStatus&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 创建一个 Car 对象，拥有属性name、color、status；拥有方法run，stop，getStatus&lt;/strong&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Car&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name,color,status&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.color = color;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.status = status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.run = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.status = &lt;span class=&quot;string&quot;&gt;&quot;runing&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.stop = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.status = &lt;span class=&quot;string&quot;&gt;&quot;stop&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.getStatus = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;2-创建一个-GoTop-对象，当-new-一个-GotTop-对象则会在页面上创建一个回到顶部的元素，点击页面滚动到顶部。拥有以下属性和方法&quot;&gt;&lt;a href=&quot;#2-创建一个-GoTop-对象，当-new-一个-GotTop-对象则会在页面上创建一个回到顶部的元素，点击页面滚动到顶部。拥有以下属性和方法&quot; class=&quot;headerlink&quot; title=&quot;2. 创建一个 GoTop 对象，当 new 一个 GotTop 对象则会在页面上创建一个回到顶部的元素，点击页面滚动到顶部。拥有以下属性和方法&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. 创建一个 GoTop 对象，当 new 一个 GotTop 对象则会在页面上创建一个回到顶部的元素，点击页面滚动到顶部。拥有以下属性和方法&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;ct 属性，GoTop 对应的 DOM 元素的容器&lt;/li&gt;
&lt;li&gt;target属性， GoTop 对应的 DOM 元素&lt;/li&gt;
&lt;li&gt;bindEvent 方法， 用于绑定事件&lt;/li&gt;
&lt;li&gt;createNode 方法， 用于在容器内创建节点&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GoTop&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;$ct&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.ct = $ct;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.target = $(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;div id=&quot;back-top&quot;&amp;gt;Top&amp;lt;/div&amp;gt;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GoTop.prototype.createNode = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.ct.append(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.target);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GoTop.prototype.bindEvent = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.target.on(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).scrollTop(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;3-使用构造函数创建对象的方式完成轮播功能-demo-，使用如下调用方式&quot;&gt;&lt;a href=&quot;#3-使用构造函数创建对象的方式完成轮播功能-demo-，使用如下调用方式&quot; class=&quot;headerlink&quot; title=&quot;3. 使用构造函数创建对象的方式完成轮播功能( demo )，使用如下调用方式&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. 使用构造函数创建对象的方式完成轮播功能( demo )，使用如下调用方式&lt;/strong&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Carousel&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;$node&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//todo...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Carousel.prototype = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//todo ..&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $node1 = $(&lt;span class=&quot;string&quot;&gt;&#39;.ct&#39;&lt;/span&gt;).eq(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $node2 = $(&lt;span class=&quot;string&quot;&gt;&#39;.ct&#39;&lt;/span&gt;).eq(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; carousel1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Carousel($node1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; carousel2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Carousel($node2);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://febox.applinzi.com/task35/task35-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果预览&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task35/task35-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实现代码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;4-使用构造函数创建对象的方式实现-Tab-切换功能&quot;&gt;&lt;a href=&quot;#4-使用构造函数创建对象的方式实现-Tab-切换功能&quot; class=&quot;headerlink&quot; title=&quot;4. 使用构造函数创建对象的方式实现 Tab 切换功能&quot;&gt;&lt;/a&gt;&lt;strong&gt;4. 使用构造函数创建对象的方式实现 Tab 切换功能&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://febox.applinzi.com/task35/task35-2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果预览&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task35/task35-2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实现代码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h3 id=&quot;【知识点】&quot;&gt;&lt;a href=&quot;#【知识点】&quot; class=&quot;headerlink&quot; title=&quot;【知识点】&quot;&gt;&lt;/a&gt;【知识点】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;1-OOP-指什么？有哪些特性&quot;&gt;&lt;a href=&quot;#1-OOP-指什么？有哪些特性&quot; class=&quot;headerlink&quot; title=&quot;1. OOP 指什么？有哪些特性 &quot;&gt;&lt;/a&gt;&lt;strong&gt;1. OOP 指什么？有哪些特性 &lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;OOP （Object Oriented Programming）是面向对象编程，是一种计算机编程架构。面向对象语言（C++，Java等）有一个标志，都有类的概念，通过类可以创建多个具有相同属性和方法的对象（类的实例化）。OOP 达到了软件工程的三个主要目标：重用性、灵活性和扩展性。为了实现整体运算，每个对象都能够接收信息、处理数据和向其它对象发送信息。&lt;/p&gt;
    
    </summary>
    
      <category term="编程学习" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端基础" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="JavaScript" scheme="http://licao404.com/tags/JavaScript/"/>
    
      <category term="OOP" scheme="http://licao404.com/tags/OOP/"/>
    
  </entry>
  
  <entry>
    <title>了解 HTTP</title>
    <link href="http://licao404.com/2016/05/07/%E4%BA%86%E8%A7%A3-HTTP/"/>
    <id>http://licao404.com/2016/05/07/了解-HTTP/</id>
    <published>2016-05-07T07:03:37.000Z</published>
    <updated>2016-05-14T03:25:06.988Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xrvo9.com1.z0.glb.clouddn.com/2016.0507/macbook-926558.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;OSI-七层模型指什么？&quot;&gt;&lt;a href=&quot;#OSI-七层模型指什么？&quot; class=&quot;headerlink&quot; title=&quot;OSI 七层模型指什么？&quot;&gt;&lt;/a&gt;&lt;strong&gt;OSI 七层模型指什么？&lt;/strong&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;p&gt;OSI（Open System Interconnection）七层模型是国际标准化组织（ISO）制定的一个用于计算机或通信系统间互联的标准体系，它是一个七层的、抽象的模型，不仅包括一系列抽象的术语或概念，也包括具体的协议。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;应用层&lt;/strong&gt; (Application)：，OSI 参考模型中的最高层；网络服务与最终用户的一个接口。各种应用程序协议，HTTP,FTP,TFTP,SMTP,SNMP,DNS,POP3;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;表示层&lt;/strong&gt;（Presentation Layer）：OSI 参考模型中的第六层；数据的表示、安全、压缩。在表示层，数据将按照网络能理解的方案进行格式化，这种格式化也因所使用网络的类型不同而不同；表示层管理数据的解密与加密，如系统口令的处理；除此之外，表示层协议还对图片和文件格式信息进行解码和编码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;会话层&lt;/strong&gt;（Session Layer）：OSI 参考模型中的第五层；负责在网络中的两节点之间建立、维持和终止通信。 会话层的功能包括：建立通信链接，保持会话过程通信链接的畅通，同步两个节点之间的对话，决定通信是否被中断以及通信中断时决定从何处重新发送。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;传输层&lt;/strong&gt;（Transport）：OSI 参考模型的第四层；定义传输数据的协议端口号，以及流控和差错效验。协议有：&lt;code&gt;TCP&lt;/code&gt; 、&lt;code&gt;UDP&lt;/code&gt;，数据包一旦离开网卡即进入网络传输层；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;网络层&lt;/strong&gt;（Network）：OSI 参考模型的第三层；进行逻辑地址寻址，实现不同网络之间的路径选择。协议有：&lt;code&gt;ICMP&lt;/code&gt; 、&lt;code&gt;IGMP&lt;/code&gt; 、&lt;code&gt;IP（IPV4 IPV6）&lt;/code&gt; 、 &lt;code&gt;ARP&lt;/code&gt; 、&lt;code&gt;RARP&lt;/code&gt;；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;数据链路层&lt;/strong&gt; (Link) ：OSI 参考模型的第二层；建立逻辑连接、进行硬件地址寻址、差错校验等功能。（由底层网络定义协议）&lt;br&gt;将比特组合成字节进而组合成帧，用MAC地址访问介质，错误发现但不能纠正；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;物理层&lt;/strong&gt;（Physical Layer）：OSI 参考模型的最低层；该层包括物理连网媒介，如电缆连线连接器。物理层的协议产生并检测电压以便发送和接收携带数据的信号。用户要传递信息就要利用一些物理媒体，如双绞线、同轴电缆等，但具体的物理媒体并不在OSI的7层之内，有人把物理媒体当做第0层，物理层的任务就是为它的上一层提供一个物理连接，以及它们的机械、电气、功能和规程特性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;HTTP-的工作原理是什么？&quot;&gt;&lt;a href=&quot;#HTTP-的工作原理是什么？&quot; class=&quot;headerlink&quot; title=&quot;HTTP 的工作原理是什么？&quot;&gt;&lt;/a&gt;&lt;strong&gt;HTTP 的工作原理是什么？&lt;/strong&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;p&gt;HTTP协议（超文本传输协议）定义了Web客户端如何从Web服务器请求Web页面，以及服务器如何将Web页面传送给客户端。HTTP协议采用了请求/响应模型。客户端向服务器端发送一个请求报文（包含请求方法、URL、协议版本、请求头部和请求数据）。服务器端以一个状态作为响应（包括协议的版本、成功或错误代码、服务器信息、响应头和响应数据）。断开连接。HTTP是一种无状态协议。&lt;/p&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;URI-的格式是什么？常见的协议有哪些？&quot;&gt;&lt;a href=&quot;#URI-的格式是什么？常见的协议有哪些？&quot; class=&quot;headerlink&quot; title=&quot;URI 的格式是什么？常见的协议有哪些？&quot;&gt;&lt;/a&gt;&lt;strong&gt;URI 的格式是什么？常见的协议有哪些？&lt;/strong&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;p&gt;URI（统一资源标识符）格式：&lt;strong&gt;&lt;code&gt;&amp;lt;scheme&amp;gt;://&amp;lt;user&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;/&amp;lt;path&amp;gt;;&amp;lt;params&amp;gt;?&amp;lt;query&amp;gt;#&amp;lt;hash&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;scheme&amp;gt;&lt;/code&gt;&lt;/strong&gt; : 协议名，可能为 &lt;code&gt;HTTP&lt;/code&gt;(默认端口80)、&lt;code&gt;HTTPS&lt;/code&gt;(默认端口443)、&lt;code&gt;FTP&lt;/code&gt;(默认端口21)、&lt;code&gt;SSH&lt;/code&gt;(默认端口22)、&lt;code&gt;SMTP&lt;/code&gt;(默认端口25)、&lt;code&gt;IMAP&lt;/code&gt;(默认端口143)等；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt;&lt;/strong&gt; : 用户名，HTTP 协议中不常见，SSH 协议一般是必须的；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;password&amp;gt;&lt;/code&gt;&lt;/strong&gt; : 密码，现在一般不会用明文的方式将密码写在 URI 上；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt;&lt;/strong&gt; : 主机地址，域名或者 IP ，用于确定要连接的对象的地址；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;port&amp;gt;&lt;/code&gt;&lt;/strong&gt; : 端口号，用来区分主机上的进程，以便精确定位要连接的服务；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt;&lt;/strong&gt; : 资源路径，用来确认资源存放的位置；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;params&amp;gt;&lt;/code&gt;&lt;/strong&gt; : 参数，以键值对的形式提供，以 &lt;code&gt;;&lt;/code&gt; 分隔开。在例如 ftp 协议中可用于规定文件是以二进制形式还是文本形式传输。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;query&amp;gt;&lt;/code&gt;&lt;/strong&gt; : 查询字符串，&lt;code&gt;GET&lt;/code&gt;请求传递参数；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;hash&amp;gt;&lt;/code&gt;&lt;/strong&gt; : 片段，定位文档位置；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;HTTP-协议有几种和服务器交互的方法&quot;&gt;&lt;a href=&quot;#HTTP-协议有几种和服务器交互的方法&quot; class=&quot;headerlink&quot; title=&quot;HTTP 协议有几种和服务器交互的方法&quot;&gt;&lt;/a&gt;&lt;strong&gt;HTTP 协议有几种和服务器交互的方法&lt;/strong&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GET&lt;/strong&gt; : 请求服务器资源；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt; : 向服务器发送数据，比如发送表单数据；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;HEAD&lt;/strong&gt; : 请求服务器资源，但是服务器的响应中没有资源的body，只有资源的基本信息。可以用来获取资源元信息，通过状态吗查看资源是否存在，以及测试资源是否被修改；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;TRACE&lt;/strong&gt; : 远程诊断服务器；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;PUT&lt;/strong&gt; : 向服务器写入资源。让服务器用请求的主体部分创建一个请求 URL 命名的文档，如果存在就替换。出于安全原因，并不是所有的服务器都实现这个方法；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;DELETE&lt;/strong&gt; : 删除服务器上的请求的资源。出于安全原因，服务器可能会不支持这个方法；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;OPTIONS&lt;/strong&gt; : 询问服务器可以执行哪些方法；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CONNECT&lt;/strong&gt; : 用于代理进行传输，如使用SSL；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;……&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;状态码-200，301，-304，403-404-500，503-分别代表什么意思&quot;&gt;&lt;a href=&quot;#状态码-200，301，-304，403-404-500，503-分别代表什么意思&quot; class=&quot;headerlink&quot; title=&quot;状态码 200，301， 304，403, 404, 500，503 分别代表什么意思&quot;&gt;&lt;/a&gt;&lt;strong&gt;状态码 200，301， 304，403, 404, 500，503 分别代表什么意思&lt;/strong&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;200 : OK&lt;/strong&gt;  这是我们最想看到的状态码。服务器已经成功处理客户端发来的请求。由于和服务器交互方法的不同，返回的信息有所不同：使用 GET 方法时，对应请求资源的实体会随着状态码一起作为响应返回；而使用 HEAD 方法时，在响应中只返回首部，不会返回实体的主体部分；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;301 : Moved Permanently&lt;/strong&gt;  永久性重定向。请求的资源已被分配新的URI，以后应使用资源现在所指的URI；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;304 : Not Modified&lt;/strong&gt;  如果客户端发送了一个带条件的 GET 请求且该请求已被允许，而文档的内容（自上次访问以来或者根据请求的条件）并没有改变，则服务器应当返回这个状态码。304响应禁止包含消息体，因此始终以消息头后的第一个空行结尾;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;403 : Forbidden&lt;/strong&gt; 服务器已经理解请求，但是拒绝执行它。这个请求不应该被重复提交,如果这不是一个 HEAD 请求，而且服务器希望能够讲清楚为何请求不能被执行，那么就应该在实体内描述拒绝的原因。当然服务器也可以返回一个404响应，假如它不希望让客户端获得任何信息;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;404 : Not Found&lt;/strong&gt; 请求失败，请求所希望得到的资源未被在服务器上发现。404这个状态码被广泛应用于当服务器不想揭示到底为何请求被拒绝或者没有其他适合的响应可用的情况下。出现这个错误的最有可能的原因是服务器端没有这个页面。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;500 : Internal Server Error&lt;/strong&gt; 服务器遇到了一个未曾预料的状况，导致了它无法完成对请求的处理。一般来说，这个问题都会在服务器端的源代码出现错误时出现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;503 : Service Unavailable&lt;/strong&gt; 由于临时的服务器维护或者 &lt;strong&gt;过载&lt;/strong&gt;，服务器当前无法处理请求。这个状况是临时的，并且将在一段时间以后恢复。如果能够预计延迟时间，那么响应中可以包含一个 Retry-After 头用以标明这个延迟时间。如果没有给出这个 Retry-After 信息，那么客户端应当以处理500响应的方式处理它。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;报文有哪几部分组成？&quot;&gt;&lt;a href=&quot;#报文有哪几部分组成？&quot; class=&quot;headerlink&quot; title=&quot;报文有哪几部分组成？&quot;&gt;&lt;/a&gt;&lt;strong&gt;报文有哪几部分组成？&lt;/strong&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;p&gt;HTTP 报文是在 HTTP 应用程序之间发送的数据块。这些数据块以一些文本形式的 &lt;strong&gt;元信息&lt;/strong&gt; 开头，描述报文的内容及含义，后面跟着可选的数据部分。&lt;br&gt;HTTP 报文由三部分组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;起始行（start line）：对报文进行描述；&lt;/li&gt;
&lt;li&gt;首部 （header）：包含属性；&lt;/li&gt;
&lt;li&gt;主体（body）：包含可选的数据；&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;请求头的格式和作用是什么？给个范例截图说明&quot;&gt;&lt;a href=&quot;#请求头的格式和作用是什么？给个范例截图说明&quot; class=&quot;headerlink&quot; title=&quot;请求头的格式和作用是什么？给个范例截图说明&quot;&gt;&lt;/a&gt;&lt;strong&gt;请求头的格式和作用是什么？给个范例截图说明&lt;/strong&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;p&gt;随便打开一个网页，在开发者工具的 &lt;code&gt;NetWork&lt;/code&gt; 中查看 &lt;code&gt;Request Headers&lt;/code&gt; ，格式如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xr868.com1.z0.glb.clouddn.com/task34/RequestHeaders.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;其中包含 &lt;strong&gt;请求方法&lt;/strong&gt; 、 &lt;strong&gt;请求URI地址&lt;/strong&gt;、 &lt;strong&gt;协议版本&lt;/strong&gt;，很明显截图中的请求方法为 &lt;code&gt;GET&lt;/code&gt;，请求地址为 &lt;code&gt;/categories&lt;/code&gt;，协议及其版本为 &lt;code&gt;HTTP/1.1&lt;/code&gt;;&lt;/p&gt;
&lt;p&gt;查看 &lt;code&gt;Response Headers&lt;/code&gt;，格式如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xr868.com1.z0.glb.clouddn.com/task34/ResponseHeaders.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;其中包含 &lt;strong&gt;协议版本&lt;/strong&gt; 、 &lt;strong&gt;状态码&lt;/strong&gt;、 &lt;strong&gt;原因短语&lt;/strong&gt;，很明显截图中的协议及其版本为 &lt;code&gt;HTTP/1.1&lt;/code&gt;，状态码 &lt;code&gt;301&lt;/code&gt;，原因短语是 &lt;code&gt;Moved Permanently&lt;/code&gt;；&lt;/p&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;首部的格式和作用是什么？给个范例截图说明&quot;&gt;&lt;a href=&quot;#首部的格式和作用是什么？给个范例截图说明&quot; class=&quot;headerlink&quot; title=&quot;首部的格式和作用是什么？给个范例截图说明&quot;&gt;&lt;/a&gt;&lt;strong&gt;首部的格式和作用是什么？给个范例截图说明&lt;/strong&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;HTTP首部字段是构成HTTP报文的要素之一。在客户端与服务器端以HTTP协议进行通信时，无论是请求还是响应都会使用首部字段，它能起到传递额外更多信息的作用。使用首部字段是为了给服务器和浏览器提供报文主体大小、所使用的语言、认证信息等内容。——《图解HTTP》&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;HTTP 首部基本可以分为四类：通用首部、请求首部、响应首部、实体首部。&lt;br&gt;HTTP 首部格式是由首部字段名和首部字段值组成，中间用冒号‘:’分隔，例如 &lt;strong&gt;Content-Type: text/html&lt;/strong&gt;,字段值可有多个，例如 &lt;strong&gt;Keep-Alive: timeout=15, max=100&lt;/strong&gt; 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通用首部：客户端和服务器端都能使用&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Cache-Control 控制缓存行为&lt;/li&gt;
&lt;li&gt;Connection 逐跳首部、连接的管理&lt;/li&gt;
&lt;li&gt;Date 日期，报文创建时间&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;请求首部：从客户端往服务器端发送请求报文中所使用的字段，用于补充请求的附加信息、客户端信息和对响应内容相关的优先级等信息&lt;br&gt;&lt;img src=&quot;http://7xr868.com1.z0.glb.clouddn.com/task34/%E8%AF%B7%E6%B1%82%E9%A6%96%E9%83%A8%E5%AD%97%E6%AE%B5.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;例如上图中:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Accept     告诉服务器能够发送那些媒体类型&lt;/li&gt;
&lt;li&gt;Accept-Encoding 告诉服务器能够发送那些编码&lt;/li&gt;
&lt;li&gt;Accept-Language 告诉服务器能够发送那些语言&lt;/li&gt;
&lt;li&gt;Cookie     客户端字符串&lt;/li&gt;
&lt;li&gt;Host 接收请求的服务器的主机名和端口号&lt;/li&gt;
&lt;li&gt;Referer 提供了包含当前请求URI的文档的URL，告诉服务器自己来源&lt;/li&gt;
&lt;li&gt;…..（这里不再列出所有）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;响应首部：由服务器端向客户端返回响应报文中所使用的字段，用于补充响应的附加信息、服务器信息以及对客户端的附加要求等信息。&lt;br&gt;&lt;img src=&quot;http://7xr868.com1.z0.glb.clouddn.com/task34/%E5%93%8D%E5%BA%94%E9%A6%96%E9%83%A8%E5%AD%97%E6%AE%B5.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;例如上图中:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Content-Encoding 主体编码格式&lt;/li&gt;
&lt;li&gt;Content-Type 主体的MIME&lt;/li&gt;
&lt;li&gt;ETag 主体的实体标记&lt;/li&gt;
&lt;li&gt;Last-Modified 实体最后一次修改时间&lt;/li&gt;
&lt;li&gt;Server 服务器应用软件名称和版本&lt;/li&gt;
&lt;li&gt;…..（这里不再列出所有）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;实体首部：针对请求报文和响应报文使用的字段。补充了资源内容，更新时间等和实体相关的信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;主体的作用是什么？给个范例&quot;&gt;&lt;a href=&quot;#主体的作用是什么？给个范例&quot; class=&quot;headerlink&quot; title=&quot;主体的作用是什么？给个范例&quot;&gt;&lt;/a&gt;&lt;strong&gt;主体的作用是什么？给个范例&lt;/strong&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xr868.com1.z0.glb.clouddn.com/task34/%E4%B8%BB%E4%BD%93.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于包含所请求的数据内容；&lt;/li&gt;
&lt;li&gt;包含着返回的 HTML 文件的内容，即全部文本。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;简述浏览器缓存是如何控制的&quot;&gt;&lt;a href=&quot;#简述浏览器缓存是如何控制的&quot; class=&quot;headerlink&quot; title=&quot;简述浏览器缓存是如何控制的&quot;&gt;&lt;/a&gt;&lt;strong&gt;简述浏览器缓存是如何控制的&lt;/strong&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;p&gt;缓存有服务器端缓存和客户端缓存（一般指浏览器缓存），这里介绍浏览器缓存机制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HTML Meta&lt;/strong&gt; 标签控制缓存:浏览器缓存机制，其实主要就是 HTTP 协议定义的缓存机制（如：&lt;code&gt;Expires&lt;/code&gt;； &lt;code&gt;Cache-control&lt;/code&gt;等）。但是也有非 HTTP协议定义的缓存机制，如使用 HTML Meta 标签，Web开发者可以在HTML页面的 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 节点中加入 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 标签&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Pragam&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;no-cache&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上述代码的作用是告诉浏览器当前页面不被缓存，每次访问都需要去服务器拉取。使用上很简单，但只有部分浏览器可以支持，而且所有缓存代理服务器都不支持，因为代理不解析HTML内容本身。而广泛应用的还是 HTTP头信息 来控制缓存。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;HTTP 响应首部字段 &lt;strong&gt;Expires&lt;/strong&gt;，指明缓存的具体过期日期，来控制资源何时过期。在过期时间以内，若再次发起请求，通常浏览器都不会与服务器进行任何通信，而是直接使用本地副本。不过 Expires 是 HTTP 1.0 的东西，现在默认浏览器均默认使用HTTP 1.1，所以它的作用基本忽略。Expires 的一个缺点就是，返回的到期时间是服务器端的时间，这样存在一个问题，如果客户端的时间与服务器的时间相差很大（比如时钟不同步，或者跨时区），那么误差就很大，所以在HTTP 1.1版开始，使用Cache-Control: max-age=秒替代。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Cache-Control&lt;/strong&gt; HTTP 1.1 协议新增的指令，每个资源都可以通过设定 Cache-Control 来建立缓存策略。通常，可为它指定一个   &lt;code&gt;max-age&lt;/code&gt; ，表示缓存的最长时间，单位为秒。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;no-cache，不缓存。&lt;/li&gt;
&lt;li&gt;public，可以缓存。&lt;/li&gt;
&lt;li&gt;no-store，请求和响应的信息都不应该被存储在对方的磁盘系统中。&lt;/li&gt;
&lt;li&gt;must-revalidate，对于客户机的每次请求，代理服务器必须向服务器验证缓存是否过时。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;控制文件是否有修改 &lt;strong&gt;Last-Modified&lt;/strong&gt;/&lt;strong&gt;E-Tag&lt;/strong&gt; Last-Modified 表示被请求资源在服务器端的上次修改时间，而 ETag 则是一个唯一文件标识符，每次文件修改后都会生成一个新的 ETag。服务器通过向浏览器发送这两个字段，来告知浏览器其获得的资源的版本。由于 Last-Modified 和 ETag 的作用是相同的（均为向服务器验证资源是否最新），因此只使用一个即可。通常认为 Last-Modified 更好（它和 Expires 不同，由服务器生成，不依赖浏览器端时间）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;……&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;下图各个参数是什么意思&quot;&gt;&lt;a href=&quot;#下图各个参数是什么意思&quot; class=&quot;headerlink&quot; title=&quot;下图各个参数是什么意思&quot;&gt;&lt;/a&gt;&lt;strong&gt;下图各个参数是什么意思&lt;/strong&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xpvnv.com2.z0.glb.qiniucdn.com/257149f7-1e11-4262-9b15-159389db83c6&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;1.&lt;strong&gt;General&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reques URL : 请求资源所在的位置（资源的URL）；&lt;/li&gt;
&lt;li&gt;Request Method : 请求用的是 PUT 方法；&lt;/li&gt;
&lt;li&gt;Status Code : 状态码和原因短语是 200 OK，资源请求成功；&lt;/li&gt;
&lt;li&gt;Remote Address：远程地址。资源所在 IP 地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2.&lt;strong&gt;Response Headers&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Connection：指定连接方式，持久连接；&lt;/li&gt;
&lt;li&gt;Content-Length：主体部分的大小，单位是字节；&lt;/li&gt;
&lt;li&gt;Content-Type：主体内对象的媒体类型，是 json 文件；&lt;/li&gt;
&lt;li&gt;Date：报文创建的日期时间（GMT时间）；&lt;/li&gt;
&lt;li&gt;Server：服务器软件版本信息；&lt;/li&gt;
&lt;li&gt;X-Powered-By：开发资源的技术；是 Express;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3.&lt;strong&gt;Request Headers&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Accept：能够处理的媒体类型及其相对优先级。&lt;code&gt;*/*&lt;/code&gt; 可以处理与请求相符的任意媒体类型;&lt;/li&gt;
&lt;li&gt;Accept-Encoding：用户代理支持的内容编码及内容编码的优先级顺序。接受gzip、deflate 和 sdch 格式;&lt;/li&gt;
&lt;li&gt;Accept-Language：用户代理能够处理的自然语言集。接受中文;&lt;/li&gt;
&lt;li&gt;Cookie：之前从服务器获得的 Cookie 信息。&lt;/li&gt;
&lt;li&gt;Host：资源所在的主机;&lt;/li&gt;
&lt;li&gt;Origin：资源所在的源。包括主机，协议和端口号;&lt;/li&gt;
&lt;li&gt;Referer：服务器请求的原始资源的 URI；&lt;/li&gt;
&lt;li&gt;User-Agent：发出请求的客户端（浏览器）信息和用户代理名称；&lt;/li&gt;
&lt;li&gt;X-Requested-With：用何种方式请求。这里使用的是 ajax；&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xrvo9.com1.z0.glb.clouddn.com/2016.0507/macbook-926558.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;OSI-七层模型指什么？&quot;&gt;&lt;a href=&quot;#OSI-七层模型指什么？&quot; class=&quot;headerlink&quot; title=&quot;OSI 七层模型指什么？&quot;&gt;&lt;/a&gt;&lt;strong&gt;OSI 七层模型指什么？&lt;/strong&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;p&gt;OSI（Open System Interconnection）七层模型是国际标准化组织（ISO）制定的一个用于计算机或通信系统间互联的标准体系，它是一个七层的、抽象的模型，不仅包括一系列抽象的术语或概念，也包括具体的协议。&lt;/p&gt;
    
    </summary>
    
      <category term="计算机基础" scheme="http://licao404.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
      <category term="计算机网络" scheme="http://licao404.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="Web服务器" scheme="http://licao404.com/tags/Web%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="前后端" scheme="http://licao404.com/tags/%E5%89%8D%E5%90%8E%E7%AB%AF/"/>
    
      <category term="HTTP" scheme="http://licao404.com/tags/HTTP/"/>
    
      <category term="TCP/IP" scheme="http://licao404.com/tags/TCP-IP/"/>
    
  </entry>
  
  <entry>
    <title>从 URI 到页面呈现</title>
    <link href="http://licao404.com/2016/05/07/%E4%BB%8EURI%E5%88%B0%E9%A1%B5%E9%9D%A2%E5%91%88%E7%8E%B0/"/>
    <id>http://licao404.com/2016/05/07/从URI到页面呈现/</id>
    <published>2016-05-07T03:35:26.000Z</published>
    <updated>2016-05-12T01:20:54.579Z</updated>
    
    <content type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;前面提及过怎么用一些软件套件在&lt;a href=&quot;./2016/04/10/使用XAMPP搭建本地Web服务器/&quot;&gt;本地简单搭建 Web 服务器&lt;/a&gt;，具体可以参照我的这篇文章 &amp;gt;&amp;gt; &lt;a href=&quot;./2016/04/10/使用XAMPP搭建本地Web服务器/&quot;&gt;《使用XAMPP搭建本地Web服务器》&lt;/a&gt; ，这次我们理一理从从浏览器输入URL到Web页面呈现在我们眼前，它背后发生了什么？这次我们只是简单说说其过程，它涉及了很多计算机网络知识，&lt;a href=&quot;http://baike.baidu.com/link?url=v-ZiUCzKEFsKfexauR5g8UA9H7D6ZsX_bD9jtGIUWOA3CafdHGK-p7EMwUHBeTuF92VEnVXh6A2o9yaAMJNywTBZQYuusmr7gPBMw0K91P95WgfPYswXuUJ_DeTe8DK9tBTE5WdUlKtKj8q78VOOwMROvTECRNRBxrCGuypphyy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTTP 协议&lt;/a&gt;等，可以留待后续学习深究。&lt;/blockquote&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;简单描述下web-服务器、PHP、数据库、浏览器是如何实现动态网站的&quot;&gt;&lt;a href=&quot;#简单描述下web-服务器、PHP、数据库、浏览器是如何实现动态网站的&quot; class=&quot;headerlink&quot; title=&quot;简单描述下web 服务器、PHP、数据库、浏览器是如何实现动态网站的?&quot;&gt;&lt;/a&gt;&lt;strong&gt;简单描述下web 服务器、PHP、数据库、浏览器是如何实现动态网站的?&lt;/strong&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;客户端（浏览器）根据用户输入的&lt;code&gt;URL&lt;/code&gt;，寻找&lt;code&gt;DNS&lt;/code&gt;服务器将其解析为对应的Web服务器的&lt;code&gt;IP&lt;/code&gt;地址，返回给浏览器；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;浏览器打包&lt;code&gt;Http&lt;/code&gt;请求，通过&lt;code&gt;TCP&lt;/code&gt;协议连接前一步返回的IP所对应的Web服务器，通过默认的&lt;code&gt;80&lt;/code&gt;端口请求Web服务器上相应目录下的动态语言文件（如index.php）;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Web服务器将用户请求的php文件交给php应用服务器处理（Web服务器本身不能处理php动态语言文件）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;php应用服务器接收、打开并解释php文件，在php文件中通过对数据库的连接代码连接本机或其他机器上的&lt;code&gt;MySQL&lt;/code&gt;数据库，在php中执行&lt;code&gt;SQL&lt;/code&gt;查询语句获得数据，php应用服务器将获得的数据生成&lt;code&gt;html&lt;/code&gt;静态代码；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;php应用服务器将生成的&lt;code&gt;html&lt;/code&gt;静态代码返回&lt;code&gt;Web&lt;/code&gt;服务器，&lt;code&gt;Web&lt;/code&gt;服务器通过&lt;code&gt;TCP&lt;/code&gt;协议将&lt;code&gt;html&lt;/code&gt;静态代码传给浏览器；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;浏览器解析接收到的代码，开始渲染页面并呈献给用户。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;常见的-WEB-服务器有哪些？&quot;&gt;&lt;a href=&quot;#常见的-WEB-服务器有哪些？&quot; class=&quot;headerlink&quot; title=&quot;常见的 WEB 服务器有哪些？&quot;&gt;&lt;/a&gt;&lt;strong&gt;常见的 WEB 服务器有哪些？&lt;/strong&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Linux/Unix平台&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Apache：&lt;br&gt;使用最多的Web服务器，几乎可以运行在所有计算机平台，开源免费。简单、速度快、性能稳定，并可做代理服务器来使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Nginx：小型高效，支持正向和反向代理等；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Windows平台&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IIS：微软主推的Web服务器，IIS提供了一个图形界面的管理工具，称为Internet服务管理器，可用于监视配置和控制Internet服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;打开浏览器，在地址栏输入-http-baidu-com-页面展现了饥人谷官网的信息，整个过程发生了什么？（饥人谷官网后台语言-php-web服务器-nginx，数据库-mysql）&quot;&gt;&lt;a href=&quot;#打开浏览器，在地址栏输入-http-baidu-com-页面展现了饥人谷官网的信息，整个过程发生了什么？（饥人谷官网后台语言-php-web服务器-nginx，数据库-mysql）&quot; class=&quot;headerlink&quot; title=&quot;打开浏览器，在地址栏输入 http://baidu.com 页面展现了饥人谷官网的信息，整个过程发生了什么？（饥人谷官网后台语言 php,web服务器 nginx，数据库 mysql）&quot;&gt;&lt;/a&gt;&lt;strong&gt;打开浏览器，在地址栏输入 &lt;code&gt;http://baidu.com&lt;/code&gt; 页面展现了饥人谷官网的信息，整个过程发生了什么？（饥人谷官网后台语言 php,web服务器 nginx，数据库 mysql）&lt;/strong&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;通过域名（URL）查询&lt;code&gt;nginx&lt;/code&gt;服务器对应的IP地址（DNS解析）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查浏览器缓存，看是否有缓存的DNS,有的话就可以直接使用；&lt;/li&gt;
&lt;li&gt;查系统缓存，如果浏览器缓存无记录，浏览器调用系统中的缓存记录；&lt;/li&gt;
&lt;li&gt;查路由器缓存，如果系统中无缓存，进一步查询路由器缓存；&lt;/li&gt;
&lt;li&gt;ISP缓存，如果路由器中无缓存，进一步查询ISP；&lt;/li&gt;
&lt;li&gt;递归搜索，如果ISP缓存里仍然查不到，就会从顶级域名服务器的根域名服务器开始递归查询，一定可以查到；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;上一步查到的IP地址&lt;code&gt;121.40.201.213&lt;/code&gt;,浏览器打包&lt;code&gt;http&lt;/code&gt;请求（服务器所需要的一些信息）,如下图：&lt;br&gt;&lt;img src=&quot;http://7xr868.com1.z0.glb.clouddn.com/task23/http%E8%AF%B7%E6%B1%82.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过&lt;code&gt;TCP&lt;/code&gt;协议与&lt;code&gt;nginx&lt;/code&gt;服务器创建连接（&lt;a href=&quot;http://www.jellythink.com/archives/705&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;三次握手&lt;/a&gt;保证通信可靠性），然后浏览器向服务器发送请求；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;nginx&lt;/code&gt;服务器处理浏览器发来的请求，由于后台语言是&lt;code&gt;php&lt;/code&gt;，则将请求交给php应用服务器；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;php应用服务器接收、打开并解释php文件，在php文件中通过对数据库的连接代码连接本机或其他机器上的&lt;code&gt;MySQL&lt;/code&gt;数据库，在php中执行&lt;code&gt;SQL&lt;/code&gt;查询语句获得数据，php应用服务器将获得的数据生成html静态代码；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;php应用服务器将生成的html静态代码返回&lt;code&gt;nginx&lt;/code&gt;服务器，&lt;code&gt;nginx&lt;/code&gt;服务器通过TCP协议将html静态代码传给浏览器，如下是响应头：&lt;br&gt;&lt;img src=&quot;http://7xr868.com1.z0.glb.clouddn.com/task23/http%E5%93%8D%E5%BA%94.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;浏览器接收响应内容，浏览器开始下载并同时渲染内容，顺序都是从上到下，遇到JavaScript就先下载JavaScript，解析完JavaScript再继续进行其他；具体渲染过程如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解析&lt;code&gt;HTML&lt;/code&gt;生成&lt;code&gt;DOM&lt;/code&gt;树；&lt;/li&gt;
&lt;li&gt;解析&lt;code&gt;CSS&lt;/code&gt;生成&lt;code&gt;CSSOM&lt;/code&gt;树；&lt;/li&gt;
&lt;li&gt;组合&lt;code&gt;DOM&lt;/code&gt;和&lt;code&gt;CSSOM&lt;/code&gt;生成渲染树；&lt;/li&gt;
&lt;li&gt;遇到&lt;code&gt;JavaScript&lt;/code&gt;解析JavaScript，阻塞后面的解析和渲染；&lt;/li&gt;
&lt;li&gt;最后通过调用操作系统&lt;code&gt;Native GUI&lt;/code&gt;的&lt;code&gt;API&lt;/code&gt;进行页面绘制，呈现在用户面前。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote class = &quot;blockquote-center&quot;&gt;前面提及过怎么用一些软件套件在&lt;a href=&quot;./2016/04/10/使用XAMPP搭建本地Web服务器/&quot;&gt;本地简单搭建 Web 服务器&lt;/a&gt;，具体可以参照我的这篇文章 &amp;gt;&amp;gt; &lt;a href=&quot;./2016/04/10/使用XAMPP搭建本地Web服务器/&quot;&gt;《使用XAMPP搭建本地Web服务器》&lt;/a&gt; ，这次我们理一理从从浏览器输入URL到Web页面呈现在我们眼前，它背后发生了什么？这次我们只是简单说说其过程，它涉及了很多计算机网络知识，&lt;a href=&quot;http://baike.baidu.com/link?url=v-ZiUCzKEFsKfexauR5g8UA9H7D6ZsX_bD9jtGIUWOA3CafdHGK-p7EMwUHBeTuF92VEnVXh6A2o9yaAMJNywTBZQYuusmr7gPBMw0K91P95WgfPYswXuUJ_DeTe8DK9tBTE5WdUlKtKj8q78VOOwMROvTECRNRBxrCGuypphyy&quot;&gt;HTTP 协议&lt;/a&gt;等，可以留待后续学习深究。&lt;/blockquote&gt;
    
    </summary>
    
      <category term="计算机基础" scheme="http://licao404.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
      <category term="计算机网络" scheme="http://licao404.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="php" scheme="http://licao404.com/tags/php/"/>
    
      <category term="Web服务器" scheme="http://licao404.com/tags/Web%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="前后端" scheme="http://licao404.com/tags/%E5%89%8D%E5%90%8E%E7%AB%AF/"/>
    
      <category term="HTTP" scheme="http://licao404.com/tags/HTTP/"/>
    
      <category term="TCP/IP" scheme="http://licao404.com/tags/TCP-IP/"/>
    
      <category term="Apache" scheme="http://licao404.com/tags/Apache/"/>
    
  </entry>
  
  <entry>
    <title>关于 &quot;this&quot; 二三事</title>
    <link href="http://licao404.com/2016/05/04/%E5%85%B3%E4%BA%8E-this-%E4%BA%8C%E4%B8%89%E4%BA%8B/"/>
    <id>http://licao404.com/2016/05/04/关于-this-二三事/</id>
    <published>2016-05-04T11:30:55.000Z</published>
    <updated>2016-05-06T00:42:50.613Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;h3 id=&quot;【知识点】&quot;&gt;&lt;a href=&quot;#【知识点】&quot; class=&quot;headerlink&quot; title=&quot;【知识点】&quot;&gt;&lt;/a&gt;【知识点】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;apply、call-有什么作用，什么区别？&quot;&gt;&lt;a href=&quot;#apply、call-有什么作用，什么区别？&quot; class=&quot;headerlink&quot; title=&quot; apply、call 有什么作用，什么区别？&quot;&gt;&lt;/a&gt;&lt;strong&gt; apply、call 有什么作用，什么区别？&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;call&lt;/code&gt; 和 &lt;code&gt;apply&lt;/code&gt; 都是 &lt;code&gt;Function.prototype&lt;/code&gt; 的方法，即每个 &lt;code&gt;Function&lt;/code&gt; 对象的实例（function定义的每个方法）都有这两个方法。&lt;blockquote&gt;
&lt;p&gt;二者的作用完全一样，都是用来&lt;strong&gt;动态改变某个函数运行时上下文&lt;/strong&gt;（重新定义函数的执行环境），也就是函数内部 &lt;code&gt;this&lt;/code&gt; 的指向。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;call&lt;/code&gt; 和 &lt;code&gt;apply&lt;/code&gt; 的区别仅仅是在参数定义的方式不太一样,具体表现为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;call&lt;/code&gt; 和 &lt;code&gt;apply&lt;/code&gt; 方法的第一个参数都是要传入给当前对象的对象，或者是 &lt;code&gt;this&lt;/code&gt; ;后面的参数都是传递给当前对象的参数，&lt;code&gt;call&lt;/code&gt; 需要把参数按照顺序放进去，而 &lt;code&gt;apply&lt;/code&gt; 则是把参数放在数组里;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如下面的一个小例子，体现了这两个函数的共同作用：改变函数内部 &lt;code&gt;this&lt;/code&gt; 的指向。又可以看到细微差别，变量传入方式的不同。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; animal = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	name: &lt;span class=&quot;string&quot;&gt;&#39;tiger&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	food: &lt;span class=&quot;string&quot;&gt;&#39;meat&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fn: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;name,food&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.food = food;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn.call(animal,&lt;span class=&quot;string&quot;&gt;&#39;sheep&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;grass&#39;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//Object &amp;#123;name: &quot;sheep&quot;, food: &quot;grass&quot;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn.apply(animal,[&lt;span class=&quot;string&quot;&gt;&#39;panda&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;bamboo&#39;&lt;/span&gt;]); &lt;span class=&quot;comment&quot;&gt;//Object &amp;#123;name: &quot;panda&quot;, food: &quot;bamboo&quot;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;【练习】&quot;&gt;&lt;a href=&quot;#【练习】&quot; class=&quot;headerlink&quot; title=&quot;【练习】&quot;&gt;&lt;/a&gt;【练习】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;1-以下代码输出什么&quot;&gt;&lt;a href=&quot;#1-以下代码输出什么&quot; class=&quot;headerlink&quot; title=&quot;1. 以下代码输出什么?&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 以下代码输出什么?&lt;/strong&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; john = &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  firstName: &lt;span class=&quot;string&quot;&gt;&quot;John&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.firstName + &lt;span class=&quot;string&quot;&gt;&quot;: hi!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;john.sayHi = func&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;john.sayHi() &lt;span class=&quot;comment&quot;&gt;//alert出 John:hi!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;输出：&lt;code&gt;John:hi!&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;解析：&lt;code&gt;john.sayHi()&lt;/code&gt; 这样写就是对象 &lt;code&gt;john&lt;/code&gt; 调用了函数 &lt;code&gt;func()&lt;/code&gt;（或者说将函数 &lt;code&gt;func()&lt;/code&gt; 绑定在对象 &lt;code&gt;john&lt;/code&gt; 上）。函数 &lt;code&gt;func()&lt;/code&gt; 内部的 &lt;code&gt;this&lt;/code&gt; 指向的就是对象 &lt;code&gt;john&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;2-下面代码输出什么，为什么&quot;&gt;&lt;a href=&quot;#2-下面代码输出什么，为什么&quot; class=&quot;headerlink&quot; title=&quot;2. 下面代码输出什么，为什么&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. 下面代码输出什么，为什么&lt;/strong&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;func() &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;输出：&lt;code&gt;Winsow&lt;/code&gt;对象&lt;/li&gt;
&lt;li&gt;解析：直接 &lt;code&gt;func()&lt;/code&gt; 这样写就是 &lt;code&gt;Winsow&lt;/code&gt; 对象调用了函数 &lt;code&gt;func()&lt;/code&gt;（或者说此时函数 &lt;code&gt;func()&lt;/code&gt; 的执行环境是在全局环境下）。函数 &lt;code&gt;func()&lt;/code&gt; 内部的 &lt;code&gt;this&lt;/code&gt; 指向的就是对象 &lt;code&gt;Winsow&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;3-以下代码输出什么&quot;&gt;&lt;a href=&quot;#3-以下代码输出什么&quot; class=&quot;headerlink&quot; title=&quot;3. 以下代码输出什么?&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. 以下代码输出什么?&lt;/strong&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn0&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fn();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn0();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;输出：&lt;code&gt;Winsow&lt;/code&gt; 对象&lt;/li&gt;
&lt;li&gt;解析：追本溯源还是 &lt;code&gt;Winsow&lt;/code&gt; 对象调用了 &lt;code&gt;fn()&lt;/code&gt;;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;输出：&lt;code&gt;document&lt;/code&gt; 文档对象 , &lt;code&gt;Winsow&lt;/code&gt; 对象&lt;/li&gt;
&lt;li&gt;解析：因为clik事件绑定在 document 上，&lt;code&gt;this&lt;/code&gt; 指向 document 文档对象;延时器的执行环境都是全局的，&lt;code&gt;this&lt;/code&gt; 指向 window&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;4-下面代码输出什么，为什么&quot;&gt;&lt;a href=&quot;#4-下面代码输出什么，为什么&quot; class=&quot;headerlink&quot; title=&quot;4. 下面代码输出什么，为什么&quot;&gt;&lt;/a&gt;&lt;strong&gt;4. 下面代码输出什么，为什么&lt;/strong&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;obj = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  go: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj.go(); &lt;span class=&quot;comment&quot;&gt;//输出 obj 对象，obj 对象调用了函数 go();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(obj.go)(); &lt;span class=&quot;comment&quot;&gt;//输出 obj 对象，立即执行函数写法，还是 obj 对象调用了函数 go();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(a = obj.go)(); &lt;span class=&quot;comment&quot;&gt;//输出 Window 对象，a 是一个全局变量，函数赋值给一个全局变量，a() 执行时依赖的就是全局环境;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || obj.go)(); &lt;span class=&quot;comment&quot;&gt;//输出 Window 对象，(0 || obj.go) 就是 (obj.go)，所以(obj.go)()，调用它的仍然是全局对象;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;5-下面代码输出什么，为什么&quot;&gt;&lt;a href=&quot;#5-下面代码输出什么，为什么&quot; class=&quot;headerlink&quot; title=&quot;5. 下面代码输出什么，为什么&quot;&gt;&lt;/a&gt;&lt;strong&gt;5. 下面代码输出什么，为什么&lt;/strong&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; john = &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  firstName: &lt;span class=&quot;string&quot;&gt;&quot;John&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  alert( &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.firstName )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func.call(john)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;输出：&lt;code&gt;John&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;解析：&lt;code&gt;call&lt;/code&gt; 函数的用法：只有一个参数，指定 &lt;code&gt;func()&lt;/code&gt; 函数内部 &lt;code&gt;this&lt;/code&gt; 指向 &lt;code&gt;john&lt;/code&gt; 对象.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;6-下面代码输出什么，为什么&quot;&gt;&lt;a href=&quot;#6-下面代码输出什么，为什么&quot; class=&quot;headerlink&quot; title=&quot;6. 下面代码输出什么，为什么&quot;&gt;&lt;/a&gt;&lt;strong&gt;6. 下面代码输出什么，为什么&lt;/strong&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; john = &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  firstName: &lt;span class=&quot;string&quot;&gt;&quot;John&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  surname: &lt;span class=&quot;string&quot;&gt;&quot;Smith&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a, b&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  alert( &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;[a] + &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;[b] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func.call(john, &lt;span class=&quot;string&quot;&gt;&#39;firstName&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;surname&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;输出：&lt;code&gt;John Smith&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;解析：&lt;code&gt;call&lt;/code&gt; 函数的用法：第一个参数指定 &lt;code&gt;func()&lt;/code&gt; 函数内部 &lt;code&gt;this&lt;/code&gt; 指向 &lt;code&gt;john&lt;/code&gt; 对象,后面的参数按顺序传入。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;7-以下代码有什么问题，如何修改&quot;&gt;&lt;a href=&quot;#7-以下代码有什么问题，如何修改&quot; class=&quot;headerlink&quot; title=&quot;7. 以下代码有什么问题，如何修改&quot;&gt;&lt;/a&gt;&lt;strong&gt;7. 以下代码有什么问题，如何修改&lt;/strong&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;= &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; self = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;//4. 这里先保存 this 的值，使其指向对象 module&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  bind: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $btn.on(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;//1. this指向的是 $btn ,因为 $btn 绑定了事件处理函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.showMsg(); &lt;span class=&quot;comment&quot;&gt;//2. 因为 this 指向的是 $btn, $btn上怎么会有showMsg()呢，显然只有 module 上有&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;//3. 所以这里需要在之前保存下this值，改为&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      self.showMsg();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  showMsg: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;饥人谷&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h3 id=&quot;【知识点】&quot;&gt;&lt;a href=&quot;#【知识点】&quot; class=&quot;headerlink&quot; title=&quot;【知识点】&quot;&gt;&lt;/a&gt;【知识点】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;apply、call-有什么作用，什么区别？&quot;&gt;&lt;a href=&quot;#apply、call-有什么作用，什么区别？&quot; class=&quot;headerlink&quot; title=&quot; apply、call 有什么作用，什么区别？&quot;&gt;&lt;/a&gt;&lt;strong&gt; apply、call 有什么作用，什么区别？&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;call&lt;/code&gt; 和 &lt;code&gt;apply&lt;/code&gt; 都是 &lt;code&gt;Function.prototype&lt;/code&gt; 的方法，即每个 &lt;code&gt;Function&lt;/code&gt; 对象的实例（function定义的每个方法）都有这两个方法。&lt;blockquote&gt;
&lt;p&gt;二者的作用完全一样，都是用来&lt;strong&gt;动态改变某个函数运行时上下文&lt;/strong&gt;（重新定义函数的执行环境），也就是函数内部 &lt;code&gt;this&lt;/code&gt; 的指向。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="编程学习" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端基础" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="JavaScript" scheme="http://licao404.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>同源策略&amp;跨域请求</title>
    <link href="http://licao404.com/2016/04/28/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5-%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82/"/>
    <id>http://licao404.com/2016/04/28/同源策略-跨域请求/</id>
    <published>2016-04-28T07:54:22.000Z</published>
    <updated>2016-05-07T03:42:26.894Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;h3 id=&quot;【知识点】&quot;&gt;&lt;a href=&quot;#【知识点】&quot; class=&quot;headerlink&quot; title=&quot;【知识点】&quot;&gt;&lt;/a&gt;【知识点】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;1-什么是同源策略？&quot;&gt;&lt;a href=&quot;#1-什么是同源策略？&quot; class=&quot;headerlink&quot; title=&quot;1. 什么是同源策略？&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 什么是同源策略？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;同源策略是浏览器最核心也是最基本的安全的功能。所谓同源，指的是协议、域名、端口号都相同，不同源的客户脚本（JavaScript）在没有明确授权的情况下，只能读写本域下的资源，不能读写对方的资源；&lt;/p&gt;
&lt;h4 id=&quot;2-什么是跨域？跨域有几种实现形式？&quot;&gt;&lt;a href=&quot;#2-什么是跨域？跨域有几种实现形式？&quot; class=&quot;headerlink&quot; title=&quot;2. 什么是跨域？跨域有几种实现形式？&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. 什么是跨域？跨域有几种实现形式？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;跨域是指突破JavaScript同源策略的限制，&lt;code&gt;a.com&lt;/code&gt; 域名下的 &lt;code&gt;js&lt;/code&gt; 可以操作 &lt;code&gt;b.com&lt;/code&gt; 或者 &lt;code&gt;child.a.com&lt;/code&gt; 下的对象中的数据。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;实现形式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;降域（最简单形式）；对于主域相同子域不同（&lt;code&gt;http://www.a.com/&lt;/code&gt; ，&lt;code&gt;http://child.a.com&lt;/code&gt;）的情况，可以同时设置两个域名下 html 文件(&lt;code&gt;index1.html&lt;/code&gt; ， &lt;code&gt;index2.html&lt;/code&gt;) &lt;code&gt;document.domain = a.com&lt;/code&gt; ,然后在 &lt;code&gt;index1.html&lt;/code&gt; 中创建一个 &lt;code&gt;iframe&lt;/code&gt;,去控制 &lt;code&gt;iframe&lt;/code&gt; 的 &lt;code&gt;contentDocument&lt;/code&gt;，这样就实现了不同子域的跨域。&lt;code&gt;iframe&lt;/code&gt; 和 &lt;code&gt;相同主域&lt;/code&gt; 是其限制条件；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JSONP 跨域：由于直接用 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 请求不同域上的数据是不可以的。这种方式主要是通过动态插入一个 &lt;code&gt;script&lt;/code&gt; 标签。浏览器对 &lt;code&gt;script&lt;/code&gt;的资源引用没有同源限制，同时资源加载到页面后会立即执行（没有阻塞的情况下）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CORS（Cross-Origin Resource Sharing）：跨域资源共享，IE需要10以上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTML5 postMessage&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/zichi/p/4620656.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;window.name&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/zichi/p/4621963.html?utm_source=tuicool&amp;amp;utm_medium=referral&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hash&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;3-jsonp-的原理是什么？&quot;&gt;&lt;a href=&quot;#3-jsonp-的原理是什么？&quot; class=&quot;headerlink&quot; title=&quot;3. jsonp 的原理是什么？&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. jsonp 的原理是什么？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;由于直接用 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 请求不同域上的数据是不可以的。这种方式主要是通过动态插入一个 &lt;code&gt;script&lt;/code&gt; 标签。浏览器对 &lt;code&gt;script&lt;/code&gt;的资源引用没有同源限制，同时资源加载到页面后会立即执行（没有阻塞的情况下）&lt;/p&gt;
&lt;p&gt;举个栗子说明：&lt;br&gt;&lt;code&gt;a.com&lt;/code&gt; 域名下的 &lt;code&gt;index.html&lt;/code&gt; 文件&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;http://libs.baidu.com/jquery/2.0.0/jquery.min.js&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// jsonp跨域&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;callback&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;json&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(json);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//动态创建一个script标签&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;script&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//把a.json的URL赋给它&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s.src = &lt;span class=&quot;string&quot;&gt;&#39;http://b.com/a.js&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//把这个script标签插入dom里&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.appendChild(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;由于 &lt;code&gt;jQuery&lt;/code&gt; 将 jsonp 封装在了 ajax 方法中，上面也可以写为：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;http://libs.baidu.com/jquery/2.0.0/jquery.min.js&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  $.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    url: &lt;span class=&quot;string&quot;&gt;&#39;http://b.com/a.js&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    dataType: &lt;span class=&quot;string&quot;&gt;&#39;jsonp&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    jsonpCallback: &lt;span class=&quot;string&quot;&gt;&#39;callback&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;ret&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(ret);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;b.com&lt;/code&gt; 域名下的 &lt;code&gt;a.js&lt;/code&gt; 文件&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;callback(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;aaa&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;正常情况下是不能访问的，会报跨域错误，这里用到了 &lt;code&gt;jsonp&lt;/code&gt; ，实现了跨域访问 &lt;code&gt;a.js&lt;/code&gt; ,得到了 &lt;code&gt;b.com&lt;/code&gt; 下的数据:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Object &amp;#123;name: &amp;quot;aaa&amp;quot;, age: 20&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是 jsonp 是 get 形式的，无法使用 post，承载的信息量有限，信息量较大时请使用更强大的 CORS。&lt;/p&gt;
&lt;h4 id=&quot;4-CORS是什么？&quot;&gt;&lt;a href=&quot;#4-CORS是什么？&quot; class=&quot;headerlink&quot; title=&quot;4. CORS是什么？&quot;&gt;&lt;/a&gt;&lt;strong&gt;4. CORS是什么？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;CORS 全称是跨域资源共享（Cross-Origin Resource Sharing），是一种 &lt;code&gt;ajax&lt;/code&gt; 跨域请求资源的方式，支持现代浏览器，IE支持10以上。&lt;br&gt;实现方式很简单，当你使用 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 发送请求时，浏览器发现该请求不符合同源策略，会给该请求加一个请求头：&lt;code&gt;Origin&lt;/code&gt;，后台进行一系列处理，如果确定接受请求则在返回结果中加入一个响应头：&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;; 浏览器判断该相应头中是否包含 &lt;code&gt;Origin&lt;/code&gt; 的值，如果有则浏览器会处理响应，我们就可以拿到响应数据，如果不包含浏览器直接驳回，这时我们无法拿到响应数据。所以 &lt;code&gt;CORS&lt;/code&gt; 的表象是让你觉得它与同源的 &lt;code&gt;ajax&lt;/code&gt; 请求没啥区别，代码完全一样。&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;【练习】&quot;&gt;&lt;a href=&quot;#【练习】&quot; class=&quot;headerlink&quot; title=&quot;【练习】&quot;&gt;&lt;/a&gt;【练习】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;1-本地搭建服务器，演示同源策略&quot;&gt;&lt;a href=&quot;#1-本地搭建服务器，演示同源策略&quot; class=&quot;headerlink&quot; title=&quot;1. 本地搭建服务器，演示同源策略&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 本地搭建服务器，演示同源策略&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;本地搭建服务器（如果使用 SAE 可创建不同的代码版本，这样可通过1.xxx.sinapp.com和2.xxx.sinapp.com 访问了）&lt;/li&gt;
&lt;li&gt;修改 本地host，通过不同域名访问本地服务器。比如访问 &lt;code&gt;http://a.com/index.html&lt;/code&gt;, &lt;code&gt;http://b.com/ajax.php&lt;/code&gt;，本质是在 &lt;code&gt;index.html&lt;/code&gt; 里使用 &lt;code&gt;ajax&lt;/code&gt; 接口访问 &lt;code&gt;http://b.com/ajax.php&lt;/code&gt; 里的数据。&lt;/li&gt;
&lt;li&gt;查看输出报错&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;通过 &lt;code&gt;XAMPP&lt;/code&gt; 搭建本地服务器，编辑 &lt;code&gt;host&lt;/code&gt; ：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;127.0.0.1 a.com&lt;/li&gt;
&lt;li&gt;127.0.0.1 b.com&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样通过 &lt;code&gt;http://a.com&lt;/code&gt; 和 &lt;code&gt;http://b.com&lt;/code&gt; 两个不同域名可以访问本地服务器&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;编辑 &lt;code&gt;http://a.com/index.html&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;a.com&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://apps.bdimg.com/libs/jquery/1.9.1/jquery.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; start = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		$.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    type: &lt;span class=&quot;string&quot;&gt;&#39;get&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    url: &lt;span class=&quot;string&quot;&gt;&#39;//b.com/ajax.php&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    	start: start,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    	len:&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ret&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(ret.status === &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		        	alert(&lt;span class=&quot;string&quot;&gt;&#39;success to get data!&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			    	start += &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		        	alert(&lt;span class=&quot;string&quot;&gt;&#39;failed to get data!&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    error: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		        alert(&lt;span class=&quot;string&quot;&gt;&quot;Something error&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 &lt;code&gt;a.com&lt;/code&gt; 下我们通过 &lt;code&gt;index.html&lt;/code&gt; 中的 &lt;code&gt;ajax&lt;/code&gt; 访问 &lt;code&gt;b.com&lt;/code&gt; 下的 &lt;code&gt;ajax.php&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;编辑 &lt;code&gt;http://b.com/ajax.php&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 后端 php 测试接口文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $start = $_GET[&lt;span class=&quot;string&quot;&gt;&#39;start&#39;&lt;/span&gt;]; &lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $len = $_GET[&lt;span class=&quot;string&quot;&gt;&#39;len&#39;&lt;/span&gt;];  &lt;span class=&quot;comment&quot;&gt;//5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $items = &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;($i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; $i &amp;lt; $len; $i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        array_push($items, &lt;span class=&quot;string&quot;&gt;&#39;内容&#39;&lt;/span&gt; . ($start+$i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $ret = &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;status&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;data&#39;&lt;/span&gt;=&amp;gt;$items);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#123;status: 1, data: [&#39;内容1&#39;,&#39;内容2&#39;,&#39;内容3&#39;]&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sleep(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; json_encode($ret);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;浏览器输入 &lt;code&gt;a.com&lt;/code&gt; ，看到报错信息：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xr868.com1.z0.glb.clouddn.com/task31/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E9%AA%8C%E8%AF%81.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;2-至少使用一种方式解决跨域问题&quot;&gt;&lt;a href=&quot;#2-至少使用一种方式解决跨域问题&quot; class=&quot;headerlink&quot; title=&quot;2. 至少使用一种方式解决跨域问题&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. 至少使用一种方式解决跨域问题&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;JSONP 解决跨域&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;a.com&lt;/code&gt; 下的 html 请求 &lt;code&gt;b.com&lt;/code&gt; 下的 php&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;编辑 &lt;code&gt;http://a.com/index.html&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;http://libs.baidu.com/jquery/2.0.0/jquery.min.js&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	url: &lt;span class=&quot;string&quot;&gt;&#39;http://b.com/a.php&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	dataType: &lt;span class=&quot;string&quot;&gt;&#39;jsonp&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;ret&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;I&#39;m &quot;&lt;/span&gt; + ret.name + &lt;span class=&quot;string&quot;&gt;&quot;,and I&#39;m &quot;&lt;/span&gt; + ret.age + &lt;span class=&quot;string&quot;&gt;&quot; years old.&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	error: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 alert(&lt;span class=&quot;string&quot;&gt;&quot;Something error&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;编辑 &lt;code&gt;http://b.com/a.php&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $jsondata = &#39;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;name&quot;: &quot;aaa&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;age&quot;: 20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  echo $_GET[&#39;callback&#39;].&#39;(&#39;.$jsondata.&#39;)&#39;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;result&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;I&amp;apos;m aaa,and I&amp;apos;m 20 years old.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;CORS 解决跨域&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;a.com&lt;/code&gt; 下的 html 请求 &lt;code&gt;b.com&lt;/code&gt; 下的 php&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;编辑 &lt;code&gt;http://a.com/index.html&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;http://libs.baidu.com/jquery/2.0.0/jquery.min.js&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	url: &lt;span class=&quot;string&quot;&gt;&#39;http://b.com/a.php&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// dataType: &#39;jsonp&#39;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;ret&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;I&#39;m &quot;&lt;/span&gt; + ret.name + &lt;span class=&quot;string&quot;&gt;&quot;,and I&#39;m &quot;&lt;/span&gt; + ret.age + &lt;span class=&quot;string&quot;&gt;&quot; years old.&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	error: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 alert(&lt;span class=&quot;string&quot;&gt;&quot;Something error&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;编辑 &lt;code&gt;http://b.com/a.php&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;header(&quot;Access-Control-Allow-Origin:http://a.com&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $jsondata = &#39;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;name&quot;: &quot;aaa&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;age&quot;: 20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  echo $_GET[&#39;callback&#39;].&#39;(&#39;.$jsondata.&#39;)&#39;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;result&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;I&amp;apos;m aaa,and I&amp;apos;m 20 years old.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h3 id=&quot;【知识点】&quot;&gt;&lt;a href=&quot;#【知识点】&quot; class=&quot;headerlink&quot; title=&quot;【知识点】&quot;&gt;&lt;/a&gt;【知识点】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;1-什么是同源策略？&quot;&gt;&lt;a href=&quot;#1-什么是同源策略？&quot; class=&quot;headerlink&quot; title=&quot;1. 什么是同源策略？&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 什么是同源策略？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;同源策略是浏览器最核心也是最基本的安全的功能。所谓同源，指的是协议、域名、端口号都相同，不同源的客户脚本（JavaScript）在没有明确授权的情况下，只能读写本域下的资源，不能读写对方的资源；&lt;/p&gt;
&lt;h4 id=&quot;2-什么是跨域？跨域有几种实现形式？&quot;&gt;&lt;a href=&quot;#2-什么是跨域？跨域有几种实现形式？&quot; class=&quot;headerlink&quot; title=&quot;2. 什么是跨域？跨域有几种实现形式？&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. 什么是跨域？跨域有几种实现形式？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;跨域是指突破JavaScript同源策略的限制，&lt;code&gt;a.com&lt;/code&gt; 域名下的 &lt;code&gt;js&lt;/code&gt; 可以操作 &lt;code&gt;b.com&lt;/code&gt; 或者 &lt;code&gt;child.a.com&lt;/code&gt; 下的对象中的数据。&lt;br&gt;
    
    </summary>
    
      <category term="编程学习" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端基础" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
      <category term="计算机网络" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="Web服务器" scheme="http://licao404.com/tags/Web%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="浏览器" scheme="http://licao404.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
      <category term="跨域" scheme="http://licao404.com/tags/%E8%B7%A8%E5%9F%9F/"/>
    
      <category term="CORS" scheme="http://licao404.com/tags/CORS/"/>
    
      <category term="JSONP" scheme="http://licao404.com/tags/JSONP/"/>
    
  </entry>
  
  <entry>
    <title>瀑布流布局</title>
    <link href="http://licao404.com/2016/04/28/%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/"/>
    <id>http://licao404.com/2016/04/28/瀑布流布局/</id>
    <published>2016-04-27T16:04:14.000Z</published>
    <updated>2016-04-27T17:20:30.123Z</updated>
    
    <content type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;瀑布流布局在国内外一些网站上基本都能看到，来看几个使用了瀑布流布局的网站： &lt;a href=&quot;https://www.pinterest.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pinterest&lt;/a&gt; (可能是最早使用这种布局的网站)、&lt;a href=&quot;http://www.pixillion.com/our-work/film/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pixillion&lt;/a&gt;、&lt;a href=&quot;https://gimmebar.com/user/cameron&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gimme Bar&lt;/a&gt; 。炫酷吗，瀑布流布局的实现方式有很多种，也有各自的代表网站，并且已有很多瀑布流插件，但是自己动手丰衣足食，弄懂原理是关键。本文将解析瀑布流布局的原理，并自己用 jQuery 实现，当然也可以用原生 JavaScript 。&lt;/blockquote&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;【原理准备】&quot;&gt;&lt;a href=&quot;#【原理准备】&quot; class=&quot;headerlink&quot; title=&quot;【原理准备】&quot;&gt;&lt;/a&gt;【原理准备】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;瀑布流布局的原理是什么&quot;&gt;&lt;a href=&quot;#瀑布流布局的原理是什么&quot; class=&quot;headerlink&quot; title=&quot;瀑布流布局的原理是什么?&quot;&gt;&lt;/a&gt;&lt;strong&gt;瀑布流布局的原理是什么?&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;首先我们针对的是等宽不等高的元素进行布局，例如承载图片的 &lt;code&gt;item&lt;/code&gt; 等；由于元素高度是不等的，布局的大体思想就是让每个元素找到最短的队，然后排队。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先得知道排几队，通过浏览器窗口宽度除以元素宽度即可，当然注意浏览器的宽度是可变的哦（我们可以通过 &lt;code&gt;resize&lt;/code&gt; 实时监听浏览器窗口）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;知道了排几队，接着我们需要知道每一队的长度，当然这个值随着每一个元素的加入是改变的，那就通过一个数组来存储吧，数组长度就是有几队，数组每一项的值存队的长度；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后我们来看最关键的点：&lt;strong&gt;挑最短的队排！&lt;/strong&gt; 具体可以遍历数组获得最短的队是哪一队，这队多长？&lt;br&gt;找到了队伍咱就排吧，别忘了把自己的高度算进你这队的总长度呀！&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;【具体实现】&quot;&gt;&lt;a href=&quot;#【具体实现】&quot; class=&quot;headerlink&quot; title=&quot;【具体实现】&quot;&gt;&lt;/a&gt;【具体实现】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;原理虽然简单，来个 &lt;code&gt;demo&lt;/code&gt; 看看怎样用代码描述：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://febox.applinzi.com/task30/task30.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果预览&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task30/task30.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实现代码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote class = &quot;blockquote-center&quot;&gt;瀑布流布局在国内外一些网站上基本都能看到，来看几个使用了瀑布流布局的网站： &lt;a href=&quot;https://www.pinterest.com/&quot;&gt;Pinterest&lt;/a&gt; (可能是最早使用这种布局的网站)、&lt;a href=&quot;http://www.pixillion.com/our-work/film/&quot;&gt;Pixillion&lt;/a&gt;、&lt;a href=&quot;https://gimmebar.com/user/cameron&quot;&gt;Gimme Bar&lt;/a&gt; 。炫酷吗，瀑布流布局的实现方式有很多种，也有各自的代表网站，并且已有很多瀑布流插件，但是自己动手丰衣足食，弄懂原理是关键。本文将解析瀑布流布局的原理，并自己用 jQuery 实现，当然也可以用原生 JavaScript 。&lt;/blockquote&gt;
    
    </summary>
    
      <category term="编程学习" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端基础" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="JavaScript" scheme="http://licao404.com/tags/JavaScript/"/>
    
      <category term="jQuery" scheme="http://licao404.com/tags/jQuery/"/>
    
      <category term="效果" scheme="http://licao404.com/tags/%E6%95%88%E6%9E%9C/"/>
    
  </entry>
  
  <entry>
    <title>jQuery懒加载</title>
    <link href="http://licao404.com/2016/04/25/jQuery%E6%87%92%E5%8A%A0%E8%BD%BD/"/>
    <id>http://licao404.com/2016/04/25/jQuery懒加载/</id>
    <published>2016-04-25T11:49:41.000Z</published>
    <updated>2016-04-27T16:49:34.062Z</updated>
    
    <content type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;对于图片过多的页面，我们会使用懒加载，具体表现为当页面被请求时，只加载可视区域的图片，其它部分的图片则不加载，只有这些图片出现在可视区域时才会动态加载这些图片，从而节约了网络带宽和提高了初次加载的速度，也提高了用户体验。本文将介绍其实现原理以及如何动手实现。&lt;/blockquote&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;【原理准备】&quot;&gt;&lt;a href=&quot;#【原理准备】&quot; class=&quot;headerlink&quot; title=&quot;【原理准备】&quot;&gt;&lt;/a&gt;【原理准备】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;1-如何判断一个元素是否出现在窗口可视范围（浏览器的上边缘和下边缘之间，肉眼可视）。写一个函数-isVisible-实现&quot;&gt;&lt;a href=&quot;#1-如何判断一个元素是否出现在窗口可视范围（浏览器的上边缘和下边缘之间，肉眼可视）。写一个函数-isVisible-实现&quot; class=&quot;headerlink&quot; title=&quot;1. 如何判断一个元素是否出现在窗口可视范围（浏览器的上边缘和下边缘之间，肉眼可视）。写一个函数      isVisible 实现&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 如何判断一个元素是否出现在窗口可视范围（浏览器的上边缘和下边缘之间，肉眼可视）。写一个函数      &lt;code&gt;isVisible&lt;/code&gt; 实现&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xr868.com1.z0.glb.clouddn.com/task29/isVisible.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;依照我们画的思路图，给出描述程序：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//判断元素是否出现在浏览器窗口可视范围&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isVisiable&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;$node&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; scrollT = $(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).scrollTop(),&lt;span class=&quot;comment&quot;&gt;//获取页面顶部到窗口顶部的滚动距离&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 	 windowH = $(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).height(),&lt;span class=&quot;comment&quot;&gt;//获取浏览器窗口高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 	 offsetT = $node.offset().top;&lt;span class=&quot;comment&quot;&gt;//获取该元素距页面顶部的距离&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (scrollT+windowH &amp;gt; offsetT) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;2-当窗口滚动时，判断一个元素是不是出现在窗口可视范围。每次出现都在控制台打印-true-。用代码实现&quot;&gt;&lt;a href=&quot;#2-当窗口滚动时，判断一个元素是不是出现在窗口可视范围。每次出现都在控制台打印-true-。用代码实现&quot; class=&quot;headerlink&quot; title=&quot;2. 当窗口滚动时，判断一个元素是不是出现在窗口可视范围。每次出现都在控制台打印 true 。用代码实现&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. 当窗口滚动时，判断一个元素是不是出现在窗口可视范围。每次出现都在控制台打印 true 。用代码实现&lt;/strong&gt;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://js.jirengu.com/fufo/8/edit?html,console,output&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $target = $(&lt;span class=&quot;string&quot;&gt;&#39;.nav3&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//监视窗口滚动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;scroll&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result = isVisiable ($target);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(result)&amp;#123;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(result)&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//判断元素是否出现在浏览器窗口可视范围 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isVisiable&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;$node&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; scrollT = $(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).scrollTop(),&lt;span class=&quot;comment&quot;&gt;//获取页面顶部到窗口顶部的滚动距离&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      windowH = $(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).height(),&lt;span class=&quot;comment&quot;&gt;//获取浏览器窗口高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      offsetT = $node.offset().top;&lt;span class=&quot;comment&quot;&gt;//获取该元素距页面顶部的距离&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (scrollT+windowH &amp;gt; offsetT) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;3-当窗口滚动时，判断一个元素是不是出现在窗口可视范围。在元素第一次出现时在控制台打印-true，以后再次出现不做任何处理。用代码实现&quot;&gt;&lt;a href=&quot;#3-当窗口滚动时，判断一个元素是不是出现在窗口可视范围。在元素第一次出现时在控制台打印-true，以后再次出现不做任何处理。用代码实现&quot; class=&quot;headerlink&quot; title=&quot;3. 当窗口滚动时，判断一个元素是不是出现在窗口可视范围。在元素第一次出现时在控制台打印 true，以后再次出现不做任何处理。用代码实现&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. 当窗口滚动时，判断一个元素是不是出现在窗口可视范围。在元素第一次出现时在控制台打印 true，以后再次出现不做任何处理。用代码实现&lt;/strong&gt;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://js.jirengu.com/lif/1/edit?html,console,output&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;当nav3出现时打印true&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $target = $(&lt;span class=&quot;string&quot;&gt;&#39;.nav3&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isVisiable&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;$node&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; scrollT = $(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).scrollTop(),&lt;span class=&quot;comment&quot;&gt;//获取页面顶部到窗口顶部的滚动距离&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      windowH = $(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).height(),&lt;span class=&quot;comment&quot;&gt;//获取浏览器窗口高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      offsetT = $node.offset().top;&lt;span class=&quot;comment&quot;&gt;//获取该元素距页面顶部的距离&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//判断该元素是否出现过，出现过就不再进行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ($target.data(&lt;span class=&quot;string&quot;&gt;&#39;isAppeared&#39;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (scrollT+windowH &amp;gt; offsetT) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; clock;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;scroll&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (clock) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		clearTimeout(clock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	clock = setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result = isVisiable ($target);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(result)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    	&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    	$target.data(&lt;span class=&quot;string&quot;&gt;&#39;isAppeared&#39;&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &amp;#125;;    		  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;,&lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;4-图片懒加载的原理是什么？&quot;&gt;&lt;a href=&quot;#4-图片懒加载的原理是什么？&quot; class=&quot;headerlink&quot; title=&quot;4.图片懒加载的原理是什么？&quot;&gt;&lt;/a&gt;&lt;strong&gt;4.图片懒加载的原理是什么？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;原理实际上很简单，当页面被请求时，只加载可视区域的图片，其它部分的图片则不加载，只有这些图片出现在可视区域时才会动态加载这些图片。判断图片是否出现在可视区域内前文已通过函数实现；还有一个就是当页面加载时我们需要将页面上的 &lt;code&gt;img&lt;/code&gt; 标签的 &lt;code&gt;src&lt;/code&gt; 指向一个小的图片（随便是啥），把我们要展示图片的真实地址放在一个自定义属性中，如 &lt;code&gt;data-src&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;loading.gif&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://xx.oo.com&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;【具体实现】&quot;&gt;&lt;a href=&quot;#【具体实现】&quot; class=&quot;headerlink&quot; title=&quot;【具体实现】&quot;&gt;&lt;/a&gt;【具体实现】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;1-实现如下回到顶部效果&quot;&gt;&lt;a href=&quot;#1-实现如下回到顶部效果&quot; class=&quot;headerlink&quot; title=&quot;1. 实现如下回到顶部效果&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 实现如下回到顶部效果&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;当页面滚动到一定距离时，窗口右下角会出现回到顶部按钮，点击按钮页面会滚动到顶部。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://febox.applinzi.com/task29/task29-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果预览&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task29/js/backtop.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实现代码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;2-实现图片懒加载效果&quot;&gt;&lt;a href=&quot;#2-实现图片懒加载效果&quot; class=&quot;headerlink&quot; title=&quot;2. 实现图片懒加载效果&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. 实现图片懒加载效果&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://febox.applinzi.com/task29/task29-2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果预览&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task29/task29-2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实现代码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;3-实现如下无限滚动效果&quot;&gt;&lt;a href=&quot;#3-实现如下无限滚动效果&quot; class=&quot;headerlink&quot; title=&quot;3. 实现如下无限滚动效果&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. 实现如下无限滚动效果&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://febox.applinzi.com/task29/task29-3.html#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果预览&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task29/task29-3.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实现代码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote class = &quot;blockquote-center&quot;&gt;对于图片过多的页面，我们会使用懒加载，具体表现为当页面被请求时，只加载可视区域的图片，其它部分的图片则不加载，只有这些图片出现在可视区域时才会动态加载这些图片，从而节约了网络带宽和提高了初次加载的速度，也提高了用户体验。本文将介绍其实现原理以及如何动手实现。&lt;/blockquote&gt;
    
    </summary>
    
      <category term="编程学习" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端基础" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="JavaScript" scheme="http://licao404.com/tags/JavaScript/"/>
    
      <category term="jQuery" scheme="http://licao404.com/tags/jQuery/"/>
    
      <category term="效果" scheme="http://licao404.com/tags/%E6%95%88%E6%9E%9C/"/>
    
  </entry>
  
  <entry>
    <title>jQuery实现几种轮播</title>
    <link href="http://licao404.com/2016/04/24/jQuery%E5%AE%9E%E7%8E%B0%E5%87%A0%E7%A7%8D%E8%BD%AE%E6%92%AD/"/>
    <id>http://licao404.com/2016/04/24/jQuery实现几种轮播/</id>
    <published>2016-04-24T02:34:23.000Z</published>
    <updated>2016-04-24T04:26:30.240Z</updated>
    
    <content type="html">&lt;img src=&quot;http://7xrvo9.com1.z0.glb.clouddn.com/0424/%E8%BD%AE%E6%92%AD.gif&quot; class=&quot;full-image&quot; alt=&quot;alt&quot;&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;淡入淡出轮播&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://febox.applinzi.com/task27/task27-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果预览&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task27/task27-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实现代码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;多个轮播&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://febox.applinzi.com/task27/task27-2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果预览&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task27/task27-2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实现代码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;无缝轮播(克隆法)&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://febox.applinzi.com/task27/task27-3.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果预览&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task27/task27-3.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实现代码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;无缝轮播（改变DOM）&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://febox.applinzi.com/task27/task27-3-2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果预览&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task27/task27-3-2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实现代码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;全屏轮播&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://febox.applinzi.com/task27/task27-4.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果预览&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task27/task27-4.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实现代码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://7xrvo9.com1.z0.glb.clouddn.com/0424/%E8%BD%AE%E6%92%AD.gif&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; /&gt;
    
    </summary>
    
      <category term="编程学习" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端基础" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="JavaScript" scheme="http://licao404.com/tags/JavaScript/"/>
    
      <category term="jQuery" scheme="http://licao404.com/tags/jQuery/"/>
    
      <category term="效果" scheme="http://licao404.com/tags/%E6%95%88%E6%9E%9C/"/>
    
  </entry>
  
  <entry>
    <title>jQuery常用方法 &amp; Ajax</title>
    <link href="http://licao404.com/2016/04/19/jQuery%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95-Ajax/"/>
    <id>http://licao404.com/2016/04/19/jQuery常用方法-Ajax/</id>
    <published>2016-04-19T14:57:05.000Z</published>
    <updated>2016-04-21T04:08:03.871Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;h3 id=&quot;【知识点】&quot;&gt;&lt;a href=&quot;#【知识点】&quot; class=&quot;headerlink&quot; title=&quot;【知识点】&quot;&gt;&lt;/a&gt;【知识点】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;1-Jquery-中，-document-ready-是什么意思？和-window-onload-的区别？-还有其他什么写法或者替代方法？&quot;&gt;&lt;a href=&quot;#1-Jquery-中，-document-ready-是什么意思？和-window-onload-的区别？-还有其他什么写法或者替代方法？&quot; class=&quot;headerlink&quot; title=&quot;1. Jquery 中， $(document).ready() 是什么意思？和  window.onload 的区别？ 还有其他什么写法或者替代方法？&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. Jquery 中， &lt;code&gt;$(document).ready()&lt;/code&gt; 是什么意思？和  &lt;code&gt;window.onload&lt;/code&gt; 的区别？ 还有其他什么写法或者替代方法？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;code&gt;$(document).ready()&lt;/code&gt; 确保在所有 DOM 构建完成之后，再运行 jQuery 代码，不管其中的代码放在任何位置都是可以运行的，相当于放在了尾部：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;).ready(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( &lt;span class=&quot;string&quot;&gt;&quot;ready!&quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;$(document).ready()&lt;/code&gt; 和 &lt;code&gt;window.onload&lt;/code&gt; 的区别：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;执行时间不同。&lt;code&gt;window.onload&lt;/code&gt; 是等页面所有的资源包括图片等外链资源都加载完毕后才能执行；&lt;code&gt;$(document).ready()&lt;/code&gt; 只需等到 DOM 构建完成后便可执行，与前者的区别是 DOM 树虽然建立起来，但页面不一定加载完成；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可被执行的次数不同。 &lt;code&gt;window.onload&lt;/code&gt; 不能同时编写多个，如果有多个 &lt;code&gt;window.onload&lt;/code&gt; 方法，只会执行最后一个 &lt;code&gt;window.onload&lt;/code&gt;，之前的 &lt;code&gt;window.onload&lt;/code&gt; 都将被覆盖；&lt;code&gt;$(document).ready()&lt;/code&gt; 可以同时编写多个，并且都可以得到执行；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;window.onload&lt;/code&gt; 没有简写形式&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;$(document).ready()&lt;/code&gt; 几种简写形式：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( &lt;span class=&quot;string&quot;&gt;&quot;ready!&quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( &lt;span class=&quot;string&quot;&gt;&quot;ready!&quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$().ready(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( &lt;span class=&quot;string&quot;&gt;&quot;ready!&quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;2-node-html-和-node-text-的区别&quot;&gt;&lt;a href=&quot;#2-node-html-和-node-text-的区别&quot; class=&quot;headerlink&quot; title=&quot;2. $node.html() 和 $node.text() 的区别?&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. &lt;code&gt;$node.html()&lt;/code&gt; 和 &lt;code&gt;$node.text()&lt;/code&gt; 的区别?&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$node.html()&lt;/code&gt; 获取的是 &lt;code&gt;$node&lt;/code&gt;内部的HTML内容；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$node.text()&lt;/code&gt; 获取的是 &lt;code&gt;$node&lt;/code&gt;内部的文本内容；&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;3-extend-的作用和用法&quot;&gt;&lt;a href=&quot;#3-extend-的作用和用法&quot; class=&quot;headerlink&quot; title=&quot;3. $.extend 的作用和用法?&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. &lt;code&gt;$.extend&lt;/code&gt; 的作用和用法?&lt;/strong&gt;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;$.extend&lt;/code&gt; 是把将两个或更多对象的内容合并到 &lt;strong&gt;第一个&lt;/strong&gt; 对象。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$.extend( target [, object1 ] [, objectN ] )&lt;/code&gt;&lt;br&gt;&lt;strong&gt;&lt;em&gt;target&lt;/em&gt;&lt;/strong&gt;：一个对象，如果附加的对象被传递给这个方法将那么它将接收新的属性，如果它是唯一的参数将扩展jQuery的命名空间；&lt;br&gt;&lt;strong&gt;&lt;em&gt;object1&lt;/em&gt;&lt;/strong&gt;：待合并到第一个对象的对象；&lt;br&gt;&lt;strong&gt;&lt;em&gt;objectN&lt;/em&gt;&lt;/strong&gt;：待合并到第一个对象的对象；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$.extend( [deep], target [, object1 ] [, objectN ] )&lt;/code&gt;&lt;br&gt;&lt;strong&gt;&lt;em&gt;deep&lt;/em&gt;&lt;/strong&gt;：如果是 &lt;code&gt;true&lt;/code&gt;，合并成为递归（又叫做深拷贝）。例如下面一个例子：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; student01 = &amp;#123;name:&lt;span class=&quot;string&quot;&gt;&quot;licao&quot;&lt;/span&gt;,age:&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; student02 = &amp;#123;name:&lt;span class=&quot;string&quot;&gt;&quot;xiaomin&quot;&lt;/span&gt;,age:&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;,sex:&lt;span class=&quot;string&quot;&gt;&quot;man&quot;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.extend(student01,student02);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行后&lt;code&gt;student01&lt;/code&gt;将变为 &lt;code&gt;{age:25,name:&amp;quot;xiaomin&amp;quot;,sex:&amp;quot;man&amp;quot;}&lt;/code&gt;,而&lt;code&gt;student02&lt;/code&gt;不变；&lt;/p&gt;
&lt;p&gt;如果我们想保留原对象，我们可以通过传递一个空对象作为目标对象：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; student01 = &amp;#123;name:&lt;span class=&quot;string&quot;&gt;&quot;licao&quot;&lt;/span&gt;,age:&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; student02 = &amp;#123;name:&lt;span class=&quot;string&quot;&gt;&quot;xiaomin&quot;&lt;/span&gt;,age:&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;,sex:&lt;span class=&quot;string&quot;&gt;&quot;man&quot;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; object = $.extend(&amp;#123;&amp;#125;, object1, object2);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行后&lt;code&gt;object&lt;/code&gt;将变为 &lt;code&gt;{age:25,name:&amp;quot;xiaomin&amp;quot;,sex:&amp;quot;man&amp;quot;}&lt;/code&gt;，而&lt;code&gt;student01&lt;/code&gt; , &lt;code&gt;student02&lt;/code&gt;不变；&lt;/p&gt;
&lt;h4 id=&quot;4-JQuery-的链式调用是什么？&quot;&gt;&lt;a href=&quot;#4-JQuery-的链式调用是什么？&quot; class=&quot;headerlink&quot; title=&quot;4. JQuery 的链式调用是什么？&quot;&gt;&lt;/a&gt;&lt;strong&gt;4. JQuery 的链式调用是什么？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;链式调用是一种语法招数，通过多次重复使用同一个变量来达到用少量代码表达复杂操作的目的，代码看起来更加优雅。缺点是占用了函数的返回值。当我们在实现一个&lt;code&gt;hover&lt;/code&gt;效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xr868.com1.z0.glb.clouddn.com/%E9%93%BE%E5%BC%8F%E8%B0%83%E7%94%A8.gif&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;code&gt;mouseover&lt;/code&gt;时显示半透明层，&lt;code&gt;mouseleave&lt;/code&gt;时不显示，这其实就是 jQuery 链式调用的反映：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;.panel&quot;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;mouseover&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;.item&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).find(&lt;span class=&quot;string&quot;&gt;&#39;.item-hover&#39;&lt;/span&gt;).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;).on(&lt;span class=&quot;string&quot;&gt;&#39;mouseleave&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;.item&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).find(&lt;span class=&quot;string&quot;&gt;&#39;.item-hover&#39;&lt;/span&gt;).hide();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们选中的对象 &lt;code&gt;&amp;#39;.item&amp;#39;&lt;/code&gt; 执行完一个方法后就返回本身（&lt;code&gt;return this&lt;/code&gt;）,然后被返回的对象继续执行后面的方法，可以写一下 &lt;a href=&quot;http://www.imooc.com/code/3402&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;小例子&lt;/a&gt; 增加理解&lt;/p&gt;
&lt;h4 id=&quot;5-JQuery-Ajax-中缓存怎样控制&quot;&gt;&lt;a href=&quot;#5-JQuery-Ajax-中缓存怎样控制&quot; class=&quot;headerlink&quot; title=&quot;5. JQuery Ajax 中缓存怎样控制?&quot;&gt;&lt;/a&gt;&lt;strong&gt;5. JQuery Ajax 中缓存怎样控制?&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;首先得了解为什么我们二次访问后会访问之前一次请求成功后的缓存？这是浏览器的一种机制，当使用 Ajax 请求回来数据以后，浏览器会将请求的 URL 和数据缓存起来，然后当我们第二次请求时，浏览器先匹配本次URL是与之前留在缓存里的URL一致，是则给你本地缓存的数据，不会请求web服务器。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如何解决 JQuery Ajax 缓存问题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;调用 &lt;code&gt;$.ajaxSetup ({cache:false})&lt;/code&gt; 方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;6-jQuery-中-data-函数的作用&quot;&gt;&lt;a href=&quot;#6-jQuery-中-data-函数的作用&quot; class=&quot;headerlink&quot; title=&quot;6. jQuery 中 data 函数的作用&quot;&gt;&lt;/a&gt;&lt;strong&gt;6. jQuery 中 &lt;code&gt;data&lt;/code&gt; 函数的作用&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;在匹配元素上存储任意相关数据 或 返回匹配的元素集合中的第一个元素的给定名称的数据存储的值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.data()&lt;/code&gt; 方法允许我们在DOM元素上绑定任意类型的数据,避免了循环引用的内存泄漏风险。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.data( key, value )&lt;/code&gt;：在匹配元素上存储任意相关数据&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.data( key )&lt;/code&gt;：返回匹配的元素集合中的第一个元素的给定名称的数据存储的值&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;body&#39;&lt;/span&gt;).data(&lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;body&#39;&lt;/span&gt;).data(&lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;body&quot;&lt;/span&gt;).data();&lt;span class=&quot;comment&quot;&gt;//[object Object] &amp;#123; data: 20 &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以在 dom 元素中存值然后取回&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;【练习】&quot;&gt;&lt;a href=&quot;#【练习】&quot; class=&quot;headerlink&quot; title=&quot;【练习】&quot;&gt;&lt;/a&gt;【练习】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;1-写出以下功能对应的-jQuery-方法：&quot;&gt;&lt;a href=&quot;#1-写出以下功能对应的-jQuery-方法：&quot; class=&quot;headerlink&quot; title=&quot;1. 写出以下功能对应的 jQuery 方法：&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 写出以下功能对应的 jQuery 方法：&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;给元素 &lt;code&gt;$node&lt;/code&gt; 添加 class &lt;code&gt;active&lt;/code&gt;，给元素 $noed 删除 class &lt;code&gt;active&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$node.addClass(&lt;span class=&quot;string&quot;&gt;&quot;active&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//添加 class&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$node.removeClass(&lt;span class=&quot;string&quot;&gt;&quot;active&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//删除 class&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;展示元素 &lt;code&gt;$node&lt;/code&gt;, 隐藏元素&lt;code&gt;$node&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$node.show();&lt;span class=&quot;comment&quot;&gt;//展示元素 `$node`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$node.fadeIn(&lt;span class=&quot;string&quot;&gt;&quot;slow&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//通过淡入的方式显示元素。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$node.hide();&lt;span class=&quot;comment&quot;&gt;//隐藏元素`$node`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$node.fadeOut(&lt;span class=&quot;string&quot;&gt;&quot;slow&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//通过淡入的方式隐藏元素。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;获取元素 &lt;code&gt;$node&lt;/code&gt; 的 属性: id、src、title， 修改以上属性&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$node.attr(&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$node.attr(&lt;span class=&quot;string&quot;&gt;&quot;src&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$node.attr(&lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//单独设置一个简单属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$node.attr(&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;yourid&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//一次设置多个属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$node.attr(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  id: &lt;span class=&quot;string&quot;&gt;&quot;yourid&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  src: &lt;span class=&quot;string&quot;&gt;&quot;http://www.licao404.com/...&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  title: &lt;span class=&quot;string&quot;&gt;&quot;jQuery&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;给 &lt;code&gt;$node&lt;/code&gt; 添加自定义属性 &lt;code&gt;data-src&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$node.attr(&lt;span class=&quot;string&quot;&gt;&quot;data-src&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 &lt;code&gt;$ct&lt;/code&gt; 内部最开头添加元素 &lt;code&gt;$node&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ct.prepand($node);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 &lt;code&gt;$ct&lt;/code&gt; 内部最末尾添加元素 &lt;code&gt;$node&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ct.append($node);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;删除 &lt;code&gt;$node&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$node.remove(); &lt;span class=&quot;comment&quot;&gt;//同时移除移除元素内部的一切,包括元素上的事件及 jQuery 数据。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$node.detach(); &lt;span class=&quot;comment&quot;&gt;//删除的元素不删除数据和事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把 &lt;code&gt;$ct&lt;/code&gt; 里内容清空&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ct.empty();&lt;span class=&quot;comment&quot;&gt;//为了避免内存泄漏，jQuery先移除子元素的数据和事件处理函数，然后移除子元素。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 &lt;code&gt;$ct&lt;/code&gt; 里设置 html &lt;code&gt;&amp;lt;div class=&amp;quot;btn&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ct.html(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;div class=&quot;btn&quot;&amp;gt;&amp;lt;/div&amp;gt;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;获取、设置 &lt;code&gt;$node&lt;/code&gt; 的宽度、高度(分别不包括内边距、包括内边距、包括边框、包括外边距)&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$node.height()&lt;span class=&quot;comment&quot;&gt;//获取匹配元素集合中的第一个元素的当前计算高度值(不包括padding)。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$node.height(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;//设置高度为200px,不输入单位默认是 px&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$node.innerHeight()&lt;span class=&quot;comment&quot;&gt;//获得匹配集合中第一个元素的当前计算的内部高度（包括padding，但不包括border）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$node.innerHeight(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$node.outerHeight()&lt;span class=&quot;comment&quot;&gt;//获得匹配集合中第一个元素的当前计算的高度（）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$node.outerHeight(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;///获得匹配集合中第一个元素的当前计算的高度（包括border，但不包括margin）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$node.outerHeight(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;///获得匹配集合中第一个元素的当前计算的高度（包括margin）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//宽度设置也是和高度设置一样；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;获取窗口滚动条垂直滚动距离&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$node.scrollTop();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;获取 &lt;code&gt;$node&lt;/code&gt; 到根节点水平、垂直偏移距离&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$node.offset();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改 &lt;code&gt;$node&lt;/code&gt; 的样式，字体颜色设置红色，字体大小设置14px&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$node.css(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;color&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;font-size&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;14px&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;遍历节点，把每个节点里面的文本内容重复一遍&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$node.each(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).clone.insertAfter($(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从 &lt;code&gt;$ct&lt;/code&gt; 里查找 class 为 &lt;code&gt;.item&lt;/code&gt; 的子元素&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ct.find(&lt;span class=&quot;string&quot;&gt;&#39;.item&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;获取 &lt;code&gt;$ct&lt;/code&gt; 里面的所有孩子&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ct.chidren()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于 &lt;code&gt;$node&lt;/code&gt;，向上找到 class 为’.ct’的父亲，在从该父亲找到’.panel’的孩子&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$node.parent(&lt;span class=&quot;string&quot;&gt;&#39;.ct&#39;&lt;/span&gt;).find(&lt;span class=&quot;string&quot;&gt;&#39;.panel&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;获取选择元素的数量&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$node.length;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;获取当前元素在兄弟中的排行&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$node.index();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;2-简单实现以下操作：&quot;&gt;&lt;a href=&quot;#2-简单实现以下操作：&quot; class=&quot;headerlink&quot; title=&quot;2. 简单实现以下操作：&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. 简单实现以下操作：&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;当点击 &lt;code&gt;$btn&lt;/code&gt; 时，让 &lt;code&gt;$btn&lt;/code&gt; 的背景色变为红色再变为蓝色&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$btn.on(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).animate(&amp;#123;backgroundColor:&lt;span class=&quot;string&quot;&gt;&#39;red&#39;&lt;/span&gt;&amp;#125;,&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;).animate(&amp;#123;backgroundColor:&lt;span class=&quot;string&quot;&gt;&#39;blue&#39;&lt;/span&gt;&amp;#125;,&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当窗口滚动时，获取垂直滚动距离&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://js.jirengu.com/lic/2/edit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;scroll&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( $(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;).scrollTop() )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当鼠标放置到 &lt;code&gt;$div&lt;/code&gt; 上，把&lt;code&gt;$div&lt;/code&gt; 背景色改为红色，移出鼠标背景色变为白色&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://js.jirengu.com/lipe/1/edit?output&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$button.on(&lt;span class=&quot;string&quot;&gt;&quot;mouseenter&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      $(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).css(&lt;span class=&quot;string&quot;&gt;&quot;background-color&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;).on(&lt;span class=&quot;string&quot;&gt;&quot;mouseleave&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      $(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).css(&lt;span class=&quot;string&quot;&gt;&quot;background-color&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;white&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当鼠标激活 &lt;code&gt;input&lt;/code&gt; 输入框时让输入框边框变为蓝色，当输入框内容改变时把输入框里的文字小写变为大写，当输入框失去焦点时去掉边框蓝色，控制台展示输入框里的文字&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://js.jirengu.com/kal/2/edit?html,console,output&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ipt.on(&lt;span class=&quot;string&quot;&gt;&#39;focusin&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).css(&lt;span class=&quot;string&quot;&gt;&#39;border&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;1px solid blue&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;).on(&lt;span class=&quot;string&quot;&gt;&#39;keyup&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).val($(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).val().toUpperCase());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;).on(&lt;span class=&quot;string&quot;&gt;&#39;focusout&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).css(&lt;span class=&quot;string&quot;&gt;&#39;border&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log($(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).val());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当选择 &lt;code&gt;select&lt;/code&gt; 后，获取用户选择的内容&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://js.jirengu.com/poc/1/edit?console,output&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$select.on(&lt;span class=&quot;string&quot;&gt;&#39;change&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; selected = $(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).val();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(selected);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;3-用-jquery-ajax-实现如下效果。当点击加载更多会加载数据展示到页面。当鼠标放置上去会变色&quot;&gt;&lt;a href=&quot;#3-用-jquery-ajax-实现如下效果。当点击加载更多会加载数据展示到页面。当鼠标放置上去会变色&quot; class=&quot;headerlink&quot; title=&quot;3. 用 jquery ajax 实现如下效果。当点击加载更多会加载数据展示到页面。当鼠标放置上去会变色&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. 用 jquery ajax 实现如下效果。&lt;code&gt;当点击加载更多会加载数据展示到页面。当鼠标放置上去会变色&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://febox.applinzi.com/task26/task26-3.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例效果&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 后端 php 测试接口文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $start = $_GET[&lt;span class=&quot;string&quot;&gt;&#39;start&#39;&lt;/span&gt;]; &lt;span class=&quot;comment&quot;&gt;//2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $len = $_GET[&lt;span class=&quot;string&quot;&gt;&#39;len&#39;&lt;/span&gt;];  &lt;span class=&quot;comment&quot;&gt;//6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $items = &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;($i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; $i &amp;lt; $len; $i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        array_push($items, &lt;span class=&quot;string&quot;&gt;&#39;内容&#39;&lt;/span&gt; . ($start+$i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $ret = &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;status&#39;&lt;/span&gt;=&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;data&#39;&lt;/span&gt;=&amp;gt;$items);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#123;status: 1, data: [&#39;内容1&#39;,&#39;内容2&#39;,&#39;内容3&#39;]&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sleep(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; json_encode($ret);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://febox.applinzi.com/task26/task26-3.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果点点我&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task26/task26-3.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;瞅瞅代码&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h3 id=&quot;【知识点】&quot;&gt;&lt;a href=&quot;#【知识点】&quot; class=&quot;headerlink&quot; title=&quot;【知识点】&quot;&gt;&lt;/a&gt;【知识点】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;1-Jquery-中，-document-ready-是什么意思？和-window-onload-的区别？-还有其他什么写法或者替代方法？&quot;&gt;&lt;a href=&quot;#1-Jquery-中，-document-ready-是什么意思？和-window-onload-的区别？-还有其他什么写法或者替代方法？&quot; class=&quot;headerlink&quot; title=&quot;1. Jquery 中， $(document).ready() 是什么意思？和  window.onload 的区别？ 还有其他什么写法或者替代方法？&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. Jquery 中， &lt;code&gt;$(document).ready()&lt;/code&gt; 是什么意思？和  &lt;code&gt;window.onload&lt;/code&gt; 的区别？ 还有其他什么写法或者替代方法？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;code&gt;$(document).ready()&lt;/code&gt; 确保在所有 DOM 构建完成之后，再运行 jQuery 代码，不管其中的代码放在任何位置都是可以运行的，相当于放在了尾部：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;).ready(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( &lt;span class=&quot;string&quot;&gt;&quot;ready!&quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程学习" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端基础" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="JavaScript" scheme="http://licao404.com/tags/JavaScript/"/>
    
      <category term="AJAX" scheme="http://licao404.com/tags/AJAX/"/>
    
      <category term="jQuery" scheme="http://licao404.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>学习 ECharts（一）：初窥</title>
    <link href="http://licao404.com/2016/04/19/%E5%AD%A6%E4%B9%A0-ECharts%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%88%9D%E7%AA%A5/"/>
    <id>http://licao404.com/2016/04/19/学习-ECharts（一）：初窥/</id>
    <published>2016-04-18T16:12:50.000Z</published>
    <updated>2016-04-24T04:28:41.245Z</updated>
    
    <content type="html">&lt;img src=&quot;http://7xrvo9.com1.z0.glb.clouddn.com/ECharts/example.png&quot; class=&quot;full-image&quot; alt=&quot;alt&quot;&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;ECharts，一个纯 Javascript 的图表库，可以流畅的运行在 PC 和移动设备上，兼容当前绝大部分浏览器（IE8/9/10/11，Chrome，Firefox，Safari等），底层依赖轻量级的 Canvas 类库 &lt;a href=&quot;https://github.com/ecomfe/zrender&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ZRender&lt;/a&gt;，提供直观，生动，可交互，可高度个性化定制的数据可视化图表。&lt;/blockquote&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;入门-Demo-01&quot;&gt;&lt;a href=&quot;#入门-Demo-01&quot; class=&quot;headerlink&quot; title=&quot;入门 Demo 01&quot;&gt;&lt;/a&gt;入门 Demo 01&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;如下面 demo 展示，我们尝试插入一个简单的柱形图：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;div id=&quot;wrap0&quot; style=&quot;width: 100%;height: 400px;&quot;&gt;&lt;/div&gt;&lt;!--step2：先为echarts准备有宽高的容器--&gt;&lt;/p&gt;
&lt;script src=&quot;http://7xrvo9.com1.z0.glb.clouddn.com/Echarts%E5%AE%8C%E6%95%B4%E7%89%88/echarts.min.js&quot;&gt;&lt;/script&gt;&lt;!--step1：引入 ECharts--&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    //step3：基于准备好的dom，初始化echarts实例
    var myChart = echarts.init(document.getElementById(&#39;wrap0&#39;));
    //step4：指定图表的配置项和数据
    var option = {
        title: {
            text: &#39;开始学习ECharts&#39;
        },
        tooltip: {},
        legend: {
            data: [&#39;决定因素&#39;]
        },
        xAxis: {
            data: [&quot;天赋&quot;,&quot;努力&quot;,&quot;兴趣&quot;,&quot;交流&quot;,&quot;心态&quot;,&quot;好学&quot;]
        },
        yAxis: {
            // data: [&#39;点数&#39;]
        },
        backgroundColor: &#39;#fff&#39;,
        series: [{
            name: &#39;决定因素&#39;,
            type: &#39;bar&#39;,
            data: [5, 20, 36, 10, 10, 20]
        }]

    }; 

    //step5: 使用刚指定的配置项和数据显示图表。
    myChart.setOption(option);
&lt;/script&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载 &lt;a href=&quot;http://echarts.baidu.com/download.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ECharts&lt;/a&gt; ，由于是初学，随便下什么版本。然后像普通引入外部 JS 文件一样引入 Echarts ;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 &lt;code&gt;body&lt;/code&gt; 里面写一个具有宽高的容器，准备往里面塞 ECharts ：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width: 100%;height: 400px;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基于准备好的 &lt;code&gt;dom&lt;/code&gt; ，用 &lt;code&gt;echarts.init()&lt;/code&gt; 初始化一个 ECharts 实例:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myChart = echarts.init(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;wrap&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指定图表配置和数据,具体见 &lt;a href=&quot;http://echarts.baidu.com/option.html#title&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;配置项手册&lt;/a&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; option = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过 &lt;a href=&quot;http://echarts.baidu.com/api.html#echartsInstance.setOption&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;setOption&lt;/a&gt; 方法生成一个简单的柱状图，下面是完整代码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;demo1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap1&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width: 100%;height: 400px;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--step2：先为echarts准备有宽高的容器--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;echarts.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--step1：引入 ECharts,src里面写你放ECharts的JS文件地址，可以是url--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//step3：基于准备好的dom，初始化echarts实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myChart = echarts.init(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;wrap1&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//step4：指定图表的配置项和数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; option = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			title: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				text: &lt;span class=&quot;string&quot;&gt;&#39;开始学习ECharts&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			tooltip: &amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			legend: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				data: [&lt;span class=&quot;string&quot;&gt;&#39;决定因素&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			xAxis: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				data: [&lt;span class=&quot;string&quot;&gt;&quot;天赋&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;努力&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;兴趣&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;交流&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;心态&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;好学&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			yAxis: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;comment&quot;&gt;// data: [&#39;点数&#39;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            backgroundColor: &lt;span class=&quot;string&quot;&gt;&#39;#91C7AE&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			series: [&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				name: &lt;span class=&quot;string&quot;&gt;&#39;决定因素&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				type: &lt;span class=&quot;string&quot;&gt;&#39;bar&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				data: [&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//step5: 使用刚指定的配置项和数据显示图表。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		myChart.setOption(option);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;入门-Demo-02&quot;&gt;&lt;a href=&quot;#入门-Demo-02&quot; class=&quot;headerlink&quot; title=&quot;入门 Demo 02&quot;&gt;&lt;/a&gt;入门 Demo 02&lt;/h3&gt;&lt;p&gt;&lt;div id=&quot;wrap2&quot; style=&quot;width: 100%;height: 400px;&quot;&gt;&lt;/div&gt;&lt;!--step2：先为echarts准备有宽高的容器--&gt;&lt;br&gt;&lt;!-- &lt;script src=&quot;echarts.min.js&quot;&gt;&lt;/script&gt; --&gt;&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var myChart = echarts.init(document.getElementById(&#39;wrap2&#39;));
    myChart.setOption({
        series : [
            {
                name: &#39;访问来源&#39;,
                type: &#39;pie&#39;,
                radius: &#39;55%&#39;,
                roseType: &#39;angle&#39;,
                data:[
                    {value:235, name:&#39;视频广告&#39;},
                    {value:274, name:&#39;联盟广告&#39;},
                    {value:310, name:&#39;邮件营销&#39;},
                    {value:335, name:&#39;直接访问&#39;},
                    {value:400, name:&#39;搜索引擎&#39;}
                ]
            }
        ]
})
&lt;/script&gt;

&lt;blockquote&gt;
&lt;p&gt;看看上面的demo，我们尝试画一个进化的饼图 —— 南丁格尔图&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;先画一个饼图：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myChart = echarts.init(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;wrap2&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myChart.setOption(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    series : [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            name: &lt;span class=&quot;string&quot;&gt;&#39;访问来源&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            type: &lt;span class=&quot;string&quot;&gt;&#39;pie&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            radius: &lt;span class=&quot;string&quot;&gt;&#39;55%&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            data:[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;value:&lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;, name:&lt;span class=&quot;string&quot;&gt;&#39;搜索引擎&#39;&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;value:&lt;span class=&quot;number&quot;&gt;335&lt;/span&gt;, name:&lt;span class=&quot;string&quot;&gt;&#39;直接访问&#39;&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;value:&lt;span class=&quot;number&quot;&gt;310&lt;/span&gt;, name:&lt;span class=&quot;string&quot;&gt;&#39;邮件营销&#39;&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;value:&lt;span class=&quot;number&quot;&gt;274&lt;/span&gt;, name:&lt;span class=&quot;string&quot;&gt;&#39;联盟广告&#39;&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;value:&lt;span class=&quot;number&quot;&gt;235&lt;/span&gt;, name:&lt;span class=&quot;string&quot;&gt;&#39;视频广告&#39;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;这里 &lt;code&gt;data&lt;/code&gt; 属性值不像入门教程里那样每一项都是单个数值，而是一个包含 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; 属性的对象，ECharts 中的数据项都是既可以只设成数值，也可以设成一个包含有名称、该数据图形的样式配置、标签配置的对象，具体见 &lt;a href=&quot;http://echarts.baidu.com/option.html#series-pie.data&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;data&lt;/a&gt; 文档。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ECharts 中的饼图也支持通过设置 &lt;a href=&quot;http://echarts.baidu.com/option.html#series-pie.roseType&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;roseType&lt;/a&gt; 显示成南丁格尔图。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;roseType: &lt;span class=&quot;string&quot;&gt;&#39;angle&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;南丁格尔图会通过半径表示数据的大小。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;还不够漂亮？试试美化一下吧&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;添加阴影，使用到 &lt;a href=&quot;http://echarts.baidu.com/tutorial.html#series-pie.itemStyle&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;itemStyle&lt;/a&gt;:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;roseType: &lt;span class=&quot;string&quot;&gt;&#39;angle&#39;&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//饼图转换成南丁格尔图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//添加阴影&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;itemStyle: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	normal: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 阴影的大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shadowBlur: &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 阴影水平方向上的偏移&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shadowOffsetX: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 阴影垂直方向上的偏移&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shadowOffsetY: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 阴影颜色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shadowColor: &lt;span class=&quot;string&quot;&gt;&#39;rgba(0, 0, 0, 0.5)&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;div id=&quot;wrap3&quot; style=&quot;width: 100%;height: 400px;&quot;&gt;&lt;/div&gt;&lt;!--step2：先为echarts准备有宽高的容器--&gt;&lt;/p&gt;
&lt;script src=&quot;echarts.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var myChart = echarts.init(document.getElementById(&#39;wrap3&#39;));
    myChart.setOption({
        series : [
            {
                name: &#39;访问来源&#39;,
                type: &#39;pie&#39;,
                radius: &#39;55%&#39;,
                data:[
                    {value:235, name:&#39;视频广告&#39;},
                    {value:274, name:&#39;联盟广告&#39;},
                    {value:310, name:&#39;邮件营销&#39;},
                    {value:335, name:&#39;直接访问&#39;},
                    {value:400, name:&#39;搜索引擎&#39;}
                ],
                roseType: &#39;angle&#39;,//饼图转换成南丁格尔图
                //添加阴影
                itemStyle: {
                        normal: {
                        // 阴影的大小
                        shadowBlur: 200,
                        // 阴影水平方向上的偏移
                        shadowOffsetX: 0,
                        // 阴影垂直方向上的偏移
                        shadowOffsetY: 0,
                        // 阴影颜色
                        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;
                    }
                }
            }
        ]
})
&lt;/script&gt;

&lt;p&gt;&lt;code&gt;itemStyle&lt;/code&gt; 都会有 &lt;code&gt;normal&lt;/code&gt; 和 &lt;code&gt;emphasis&lt;/code&gt; 两个选项，&lt;code&gt;normal&lt;/code&gt; 选项是正常展示下的样式，&lt;code&gt;emphasis&lt;/code&gt; 是鼠标 &lt;code&gt;hover&lt;/code&gt; 时候的高亮样式。这个示例里是正常的样式下加阴影，但是可能更多的时候是 &lt;code&gt;hover&lt;/code&gt; 的时候通过阴影突出。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;itemStyle: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    emphasis: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shadowBlur: &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shadowColor: &lt;span class=&quot;string&quot;&gt;&#39;rgba(0, 0, 0, 0.5)&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;div id=&quot;wrap4&quot; style=&quot;width: 100%;height: 400px;&quot;&gt;&lt;/div&gt;&lt;!--step2：先为echarts准备有宽高的容器--&gt;&lt;/p&gt;
&lt;script src=&quot;echarts.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var myChart = echarts.init(document.getElementById(&#39;wrap4&#39;));
    myChart.setOption({
        series : [
            {
                name: &#39;访问来源&#39;,
                type: &#39;pie&#39;,
                radius: &#39;55%&#39;,
                data:[
                    {value:235, name:&#39;视频广告&#39;},
                    {value:274, name:&#39;联盟广告&#39;},
                    {value:310, name:&#39;邮件营销&#39;},
                    {value:335, name:&#39;直接访问&#39;},
                    {value:400, name:&#39;搜索引擎&#39;}
                ],
                roseType: &#39;angle&#39;,//饼图转换成南丁格尔图
                //添加阴影
                itemStyle: {
                    emphasis: {
                        shadowBlur: 200,
                        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;
                    }
                }
            }
        ]
})
&lt;/script&gt;

&lt;blockquote&gt;
&lt;p&gt;设置深色背景和浅色标签&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;背景色是全局的，所以直接在 &lt;code&gt;option&lt;/code&gt; 下设置 &lt;a href=&quot;http://echarts.baidu.com/option.html#backgroundColor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;backgroundColor&lt;/a&gt; :&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;setOption(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    backgroundColor: &lt;span class=&quot;string&quot;&gt;&#39;#2c343c&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文本的样式可以设置全局的 &lt;a href=&quot;http://echarts.baidu.com/option.html#textStyle&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;textStyle&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;setOption(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    textStyle: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        color: &lt;span class=&quot;string&quot;&gt;&#39;rgba(255, 255, 255, 0.3)&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;也可以每个系列分别设置，每个系列的文本设置在 &lt;a href=&quot;http://echarts.baidu.com/option.html#series-pie.label.normal.textStyle&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;label.normal.textStyle&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;label: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    normal: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        textStyle: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            color: &lt;span class=&quot;string&quot;&gt;&#39;rgba(255, 255, 255, 0.3)&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;饼图的话还要将标签的视觉引导线的颜色设为浅色。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;labelLine: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    normal: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lineStyle: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            color: &lt;span class=&quot;string&quot;&gt;&#39;rgba(255, 255, 255, 0.3)&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;div id=&quot;wrap5&quot; style=&quot;width: 100%;height: 400px;&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;!--step2：先为echarts准备有宽高的容器--&gt;&lt;/p&gt;
&lt;script src=&quot;echarts.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var myChart = echarts.init(document.getElementById(&#39;wrap5&#39;));
    myChart.setOption({
        // // 背景色是全局的，所以直接在 option 下设置 backgroundColor
        backgroundColor: &#39;#2c343c&#39;,
        // // 文本的样式可以设置全局的 textStyle
        // textStyle: {
        //     color: &#39;rgba(255, 255, 255, 0.3)&#39;
        // },//
        series : [
            {
                name: &#39;访问来源&#39;,
                type: &#39;pie&#39;,
                radius: &#39;55%&#39;,
                data:[
                    {value:235, name:&#39;视频广告&#39;},
                    {value:274, name:&#39;联盟广告&#39;},
                    {value:310, name:&#39;邮件营销&#39;},
                    {value:335, name:&#39;直接访问&#39;},
                    {value:400, name:&#39;搜索引擎&#39;}
                ],
                roseType: &#39;angle&#39;,//饼图转换成南丁格尔图
                // 添加阴影
                itemStyle: {
                        normal: {
                        // 阴影的大小
                        shadowBlur: 200,
                        // 阴影水平方向上的偏移
                        shadowOffsetX: 0,
                        // 阴影垂直方向上的偏移
                        shadowOffsetY: 0,
                        // 阴影颜色
                        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;
                    }
                },    
                // itemStyle: {
                //     emphasis: {
                //         shadowBlur: 200,
                //         shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;
                //     }
                // }    


                //每个系列分别设置文本样式，每个系列的文本设置在 label.normal.textStyle                            
                label: {
                    normal: {
                        textStyle: {
                            color: &#39;rgba(255, 255, 255, 0.3)&#39;
                        }
                    }
                },    

                //饼图的话还要将标签的视觉引导线的颜色设为浅色。
                labelLine: {
                    normal: {
                        lineStyle: {
                            color: &#39;rgba(255, 255, 255, 0.3)&#39;
                        }
                    }
                }       
            }
        ]
})
&lt;/script&gt;

&lt;blockquote&gt;
&lt;p&gt;设置扇形的颜色&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;扇形的颜色也是在 itemStyle 中设置：&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;itemStyle: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    normal: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 设置扇形的颜色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        color: &lt;span class=&quot;string&quot;&gt;&#39;#c23531&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shadowBlur: &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shadowColor: &lt;span class=&quot;string&quot;&gt;&#39;rgba(0, 0, 0, 0.5)&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;div id=&quot;wrap6&quot; style=&quot;width: 100%;height: 400px;&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;!--step2：先为echarts准备有宽高的容器--&gt;&lt;/p&gt;
&lt;script src=&quot;echarts.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var myChart = echarts.init(document.getElementById(&#39;wrap6&#39;));
    myChart.setOption({
        // // 背景色是全局的，所以直接在 option 下设置 backgroundColor
        backgroundColor: &#39;#2c343c&#39;,
        // // 文本的样式可以设置全局的 textStyle
        // textStyle: {
        //     color: &#39;rgba(255, 255, 255, 0.3)&#39;
        // },//
        series : [
            {
                name: &#39;访问来源&#39;,
                type: &#39;pie&#39;,
                radius: &#39;55%&#39;,
                data:[
                    {value:235, name:&#39;视频广告&#39;},
                    {value:274, name:&#39;联盟广告&#39;},
                    {value:310, name:&#39;邮件营销&#39;},
                    {value:335, name:&#39;直接访问&#39;},
                    {value:400, name:&#39;搜索引擎&#39;}
                ],
                roseType: &#39;angle&#39;,//饼图转换成南丁格尔图
                // 添加阴影
                itemStyle: {
                        normal: {
                        // 阴影的大小
                        shadowBlur: 200,
                        // 阴影水平方向上的偏移
                        shadowOffsetX: 0,
                        // 阴影垂直方向上的偏移
                        shadowOffsetY: 0,
                        // 阴影颜色
                        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,
                        // 设置扇形的颜色
                        color: &#39;#c23531&#39;,
                        shadowBlur: 200,
                        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;                        
                    }
                },    
                // itemStyle: {
                //     emphasis: {
                //         shadowBlur: 200,
                //         shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;
                //     }
                // }    


                //每个系列分别设置文本样式，每个系列的文本设置在 label.normal.textStyle                            
                label: {
                    normal: {
                        textStyle: {
                            color: &#39;rgba(255, 255, 255, 0.3)&#39;
                        }
                    }
                },    

                //饼图的话还要将标签的视觉引导线的颜色设为浅色。
                labelLine: {
                    normal: {
                        lineStyle: {
                            color: &#39;rgba(255, 255, 255, 0.3)&#39;
                        }
                    }
                }       
            }
        ]
})
&lt;/script&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;ECharts 中每个扇形颜色的可以通过分别设置 &lt;code&gt;data&lt;/code&gt; 下的数据项实现。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;data: [&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value:&lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name:&lt;span class=&quot;string&quot;&gt;&#39;搜索引擎&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    itemStyle: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        normal: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            color: &lt;span class=&quot;string&quot;&gt;&#39;c23531&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, ...]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;但是这次因为只有明暗度的变化，所以有一种更快捷的方式是通过 &lt;a href=&quot;http://echarts.baidu.com/tutorial.html#option.html#visualMap&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;visualMap&lt;/a&gt; 组件将数值的大小映射到明暗度。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;visualMap: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 不显示 visualMap 组件，只用于明暗度的映射&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    show: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 映射的最小值为 80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    min: &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 映射的最大值为 600&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    max: &lt;span class=&quot;number&quot;&gt;600&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    inRange: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 明暗度的范围是 0 到 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        colorLightness: [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;div id=&quot;wrap7&quot; style=&quot;width: 100%;height: 400px;&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;!--step2：先为echarts准备有宽高的容器--&gt;&lt;/p&gt;
&lt;script src=&quot;echarts.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var myChart = echarts.init(document.getElementById(&#39;wrap7&#39;));
    myChart.setOption({
        // // 背景色是全局的，所以直接在 option 下设置 backgroundColor
        backgroundColor: &#39;#2c343c&#39;,
        // // 文本的样式可以设置全局的 textStyle
        // textStyle: {
        //     color: &#39;rgba(255, 255, 255, 0.3)&#39;
        // },//

        visualMap: {
            // 不显示 visualMap 组件，只用于明暗度的映射
            show: false,
            // 映射的最小值为 80
            min: 80,
            // 映射的最大值为 600
            max: 600,
            inRange: {
                // 明暗度的范围是 0 到 1
                colorLightness: [0, 1]
            }
        },

        series : [
            {
                name: &#39;访问来源&#39;,
                type: &#39;pie&#39;,
                radius: &#39;55%&#39;,
                data:[
                    {value:235, name:&#39;视频广告&#39;},
                    {value:274, name:&#39;联盟广告&#39;},
                    {value:310, name:&#39;邮件营销&#39;},
                    {value:335, name:&#39;直接访问&#39;},
                    {value:400, name:&#39;搜索引擎&#39;}
                ],
                roseType: &#39;angle&#39;,//饼图转换成南丁格尔图
                // 添加阴影
                itemStyle: {
                        normal: {
                        // 阴影的大小
                        shadowBlur: 200,
                        // 阴影水平方向上的偏移
                        shadowOffsetX: 0,
                        // 阴影垂直方向上的偏移
                        shadowOffsetY: 0,
                        // 阴影颜色
                        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,
                        // 设置扇形的颜色
                        color: &#39;#c23531&#39;,
                        shadowBlur: 200,
                        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;                        
                    }
                },    
                // itemStyle: {
                //     emphasis: {
                //         shadowBlur: 200,
                //         shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;
                //     }
                // }    


                //每个系列分别设置文本样式，每个系列的文本设置在 label.normal.textStyle                            
                label: {
                    normal: {
                        textStyle: {
                            color: &#39;rgba(255, 255, 255, 0.3)&#39;
                        }
                    }
                },    

                //饼图的话还要将标签的视觉引导线的颜色设为浅色。
                labelLine: {
                    normal: {
                        lineStyle: {
                            color: &#39;rgba(255, 255, 255, 0.3)&#39;
                        }
                    }
                }       
            }
        ]
})
&lt;/script&gt;






&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://7xrvo9.com1.z0.glb.clouddn.com/ECharts/example.png&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; /&gt;
&lt;blockquote class = &quot;blockquote-center&quot;&gt;ECharts，一个纯 Javascript 的图表库，可以流畅的运行在 PC 和移动设备上，兼容当前绝大部分浏览器（IE8/9/10/11，Chrome，Firefox，Safari等），底层依赖轻量级的 Canvas 类库 &lt;a href=&quot;https://github.com/ecomfe/zrender&quot;&gt;ZRender&lt;/a&gt;，提供直观，生动，可交互，可高度个性化定制的数据可视化图表。&lt;/blockquote&gt;
    
    </summary>
    
      <category term="数据可视化" scheme="http://licao404.com/categories/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="库" scheme="http://licao404.com/tags/%E5%BA%93/"/>
    
      <category term="图表库" scheme="http://licao404.com/tags/%E5%9B%BE%E8%A1%A8%E5%BA%93/"/>
    
      <category term="ECharts" scheme="http://licao404.com/tags/ECharts/"/>
    
      <category term="可视化" scheme="http://licao404.com/tags/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>jQuery DOM &amp; 事件</title>
    <link href="http://licao404.com/2016/04/16/jQuery-DOM-%E4%BA%8B%E4%BB%B6/"/>
    <id>http://licao404.com/2016/04/16/jQuery-DOM-事件/</id>
    <published>2016-04-16T01:51:23.000Z</published>
    <updated>2016-04-18T16:51:50.641Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;h3 id=&quot;【知识点】&quot;&gt;&lt;a href=&quot;#【知识点】&quot; class=&quot;headerlink&quot; title=&quot;【知识点】&quot;&gt;&lt;/a&gt;【知识点】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;1-说说库和框架的区别？&quot;&gt;&lt;a href=&quot;#1-说说库和框架的区别？&quot; class=&quot;headerlink&quot; title=&quot;1. 说说库和框架的区别？&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 说说库和框架的区别？&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;库&lt;/strong&gt; 是把一些可以复用的方法集中进行封装到一个&lt;code&gt;library&lt;/code&gt;，提供&lt;code&gt;API&lt;/code&gt;，我们通过这些&lt;code&gt;API&lt;/code&gt;就可以调用这些已经封装好的方法，将代码写得更少/巧/强壮，以便简单快捷完成任务，提高生产力！比如 &lt;code&gt;jQuery&lt;/code&gt; 就是更加接近一个库，要什么可以从中拿；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;框架&lt;/strong&gt; 也算是库的一种，不过更加强调提供一种解决方案，给你搭好架子，代码怎样组织，所以不单单是具体的方法或函数，而是注重从细节到整体的宏观思路。&lt;code&gt;AngularJS&lt;/code&gt; 就算是一个框架，因为它提供了一整套的解决方案；&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;对于小型应用来说，因为业务逻辑简单，代码总量不会太大，组织不会是太大的问题，所以用类库就够了；而面对中/大型项目，特别是需要多人共同参与的项目，选择一个合适的框架有助于写出规范的，易于理解的，易于回复的，低耦合的……等等的代码，在此基础上再使用各种类库来增加具体代码的健壮性与功能性则更好。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;2-jQuery-能做什么？&quot;&gt;&lt;a href=&quot;#2-jQuery-能做什么？&quot; class=&quot;headerlink&quot; title=&quot;2. jQuery 能做什么？&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. jQuery 能做什么？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;一言以蔽之，jQuery就是让我们能更加畅快舒爽地编写JavaScript，不必去编写蛋疼费时的原生JavaScript！它轻量，快速，功能丰富。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以简单快捷完成诸如JavaScript中的HTML元素选取和操作，CSS操作，HTML &lt;code&gt;DOM&lt;/code&gt;遍历和操作，事件处理，特效，动画和&lt;code&gt;AJAX&lt;/code&gt;交互。&lt;/li&gt;
&lt;li&gt;jQuery提供&lt;code&gt;API&lt;/code&gt;让开发者编写插件。其模块化的使用方式使开发者可以很轻松的开发出功能强大的静态或动态网页。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;3-jQuery-对象和-DOM-原生对象有什么区别？如何转化？&quot;&gt;&lt;a href=&quot;#3-jQuery-对象和-DOM-原生对象有什么区别？如何转化？&quot; class=&quot;headerlink&quot; title=&quot;3. jQuery 对象和 DOM 原生对象有什么区别？如何转化？&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. jQuery 对象和 DOM 原生对象有什么区别？如何转化？&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;DOM对象是通过原生JavaScript获得的对象，jQuery对象是通过jQuery选择器获得对象；&lt;/li&gt;
&lt;li&gt;jQuery对象只能使用jQuery自己的属性和方法，DOM对象只能使用DOM的属性和方法，&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;jQuery对象转DOM对象&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们可以通过类数组下标的获取方式或者get方法获取指定下标的&lt;code&gt;DOM&lt;/code&gt;对象:&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ct&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;item&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;item1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;item&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;item2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;item&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;item3&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;jQuery 对象是类数组对象，所以可通过数组下标获取数组中的DOM对象：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;.item&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;//&amp;lt;div class=&quot;item&quot;&amp;gt;item3&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;.item&#39;&lt;/span&gt;).eq(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;//&amp;lt;div class=&quot;item&quot;&amp;gt;item3&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过jQuery的&lt;code&gt;.get()&lt;/code&gt;方法获得的直接是DOM对象：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;.item&#39;&lt;/span&gt;).get(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//&amp;lt;div class=&quot;item&quot;&amp;gt;item3&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DOM对象转 jQuery 对象&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用 &lt;code&gt;$()&lt;/code&gt; 将DOM对象包裹起来就是jQuery对象：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ct = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;ct&#39;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//DOM对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $ct = $(ct);&lt;span class=&quot;comment&quot;&gt;//$(DOM对象)转化为了jQuery对象$ct&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;4-jQuery中如何绑定事件？bind、unbind、delegate、live、on、off都有什么作用？推荐使用哪种？使用on绑定事件使用事件代理的写法？&quot;&gt;&lt;a href=&quot;#4-jQuery中如何绑定事件？bind、unbind、delegate、live、on、off都有什么作用？推荐使用哪种？使用on绑定事件使用事件代理的写法？&quot; class=&quot;headerlink&quot; title=&quot;4. jQuery中如何绑定事件？bind、unbind、delegate、live、on、off都有什么作用？推荐使用哪种？使用on绑定事件使用事件代理的写法？&quot;&gt;&lt;/a&gt;&lt;strong&gt;4. jQuery中如何绑定事件？&lt;code&gt;bind&lt;/code&gt;、&lt;code&gt;unbind&lt;/code&gt;、&lt;code&gt;delegate&lt;/code&gt;、&lt;code&gt;live&lt;/code&gt;、&lt;code&gt;on&lt;/code&gt;、&lt;code&gt;off&lt;/code&gt;都有什么作用？推荐使用哪种？使用&lt;code&gt;on&lt;/code&gt;绑定事件使用事件代理的写法？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;jQuery中有很多绑定事件的方法&lt;code&gt;.bind()&lt;/code&gt;,&lt;code&gt;.live()&lt;/code&gt;,&lt;code&gt;.delegate()&lt;/code&gt;,&lt;code&gt;.on()&lt;/code&gt;,下面看看他们的区别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;.bind()&lt;/code&gt;：对于早期jQuery版本（1.7以前），&lt;code&gt;.bind()&lt;/code&gt;方法用于直接将事件绑定在选中的元素上，所以&lt;code&gt;.bind()&lt;/code&gt;在绑定事件的时候被选的元素必须存在；使用一次&lt;code&gt;.bind()&lt;/code&gt;选择器匹配的元素会附加一个事件处理函数，而以后再添加的元素则不会有。为此需要再使用一次 &lt;code&gt;.bind()&lt;/code&gt; 才行；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;.unbind&lt;/code&gt;：&lt;code&gt;.bind()&lt;/code&gt;的反向操作，从每一个匹配的元素中删除绑定的事件。&lt;br&gt;如果没有参数，则删除所有绑定的事件，&lt;code&gt;.bind(typpe)&lt;/code&gt;删除指定类型事件；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;.live()&lt;/code&gt;：（1.9版本已废弃,不建议使用，老版本建议使用&lt;code&gt;.delegate()&lt;/code&gt;）默认使用了事件代理（绑定在祖先元素上的事件处理程序可以对后代上触发事件作出回应），没有将事件直接绑定在该元素上，而是绑定在&lt;code&gt;document&lt;/code&gt;元素上（DOM树的根节点），&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;clickme&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Click here&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;.clickme&#39;&lt;/span&gt;).live(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      alert(&lt;span class=&quot;string&quot;&gt;&quot;Live handler called.&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//事件冒泡`document`元素上，查看事件类型是否是click、&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;//目标元素和选择器.clickme否匹配，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;//是则执行绑定的事件处理函数；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;.delegate()&lt;/code&gt;：对于早期jQuery版本（1.7以前），&lt;code&gt;.delegate&lt;/code&gt;是使用事件代理最有效的方式,&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;background-color:red&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;这是一个段落。&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;请点击这里&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;).delegate(&lt;span class=&quot;string&quot;&gt;&#39;button&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&#39;p&#39;&lt;/span&gt;).slideToggle();&lt;span class=&quot;comment&quot;&gt;//将事件绑定到$(&#39;div&#39;)上，事件冒泡到$(&#39;div&#39;)上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;//查看是不是click事件，目标元素是不是button，如果都满足，就执行函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;.on()&lt;/code&gt;：（1.7版本后&lt;code&gt;.on()&lt;/code&gt;取代了&lt;code&gt;.bind()&lt;/code&gt;,&lt;code&gt;.live()&lt;/code&gt;,&lt;code&gt;.delegate()&lt;/code&gt;，提供绑定事件处理的所有功能，&lt;strong&gt;强烈推荐&lt;/strong&gt;）&lt;br&gt;事件代理&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;body&quot;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;p&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alert( $(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).text() );&lt;span class=&quot;comment&quot;&gt;//当点击段落时，显示该段落中的文本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);javascript&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;.off()&lt;/code&gt;：移除用&lt;code&gt;.on()&lt;/code&gt;绑定的事件处理程序。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;5-jQuery-如何展示-隐藏元素？&quot;&gt;&lt;a href=&quot;#5-jQuery-如何展示-隐藏元素？&quot; class=&quot;headerlink&quot; title=&quot;5. jQuery 如何展示/隐藏元素？&quot;&gt;&lt;/a&gt;&lt;strong&gt;5. jQuery 如何展示/隐藏元素？&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;.hide( speed, [callback] )&lt;/strong&gt;：隐藏显示的元素，&lt;br&gt;&lt;code&gt;speed&lt;/code&gt;：表示速度的参数，可选（&lt;code&gt;slow&lt;/code&gt;,&lt;code&gt;fast&lt;/code&gt;,&lt;code&gt;normal&lt;/code&gt;）或者毫秒数;&lt;br&gt;&lt;code&gt;[callback]&lt;/code&gt;:在动画完成时执行的函数，每个元素执行一次。&lt;br&gt;不设置参数就立即执行，没有动画；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;.show(speed,callback)&lt;/strong&gt;：显示隐藏的元素；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;6-jQuery-动画如何使用？&quot;&gt;&lt;a href=&quot;#6-jQuery-动画如何使用？&quot; class=&quot;headerlink&quot; title=&quot;6. jQuery 动画如何使用？&quot;&gt;&lt;/a&gt;&lt;strong&gt;6. jQuery 动画如何使用？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;.animate(params,[speed],[callback])&lt;/strong&gt; 函数用来创建自定义动画，这个函数的关键在于指定动画形式及结果样式属性对象。这个对象中每个属性都表示一个可以变化的样式属性（如“height”、“top”或“opacity”）。注意：所有指定的属性必须用骆驼形式，比如用marginLeft代替margin-left.&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;css&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.box&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;50px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: red;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.btn&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;margin-bottom&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;btn&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Click&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $(&lt;span class=&quot;string&quot;&gt;&#39;.btn&#39;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;repeat&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&#39;.box&#39;&lt;/span&gt;).animate(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      width:&lt;span class=&quot;string&quot;&gt;&quot;100px&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      height:&lt;span class=&quot;string&quot;&gt;&quot;100px&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      opacity:&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      $(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).animate(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width:&lt;span class=&quot;string&quot;&gt;&quot;50px&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height:&lt;span class=&quot;string&quot;&gt;&quot;50px&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        opacity:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;,repeat());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果：&lt;br&gt;&lt;img src=&quot;http://7xr868.com1.z0.glb.clouddn.com/task25/animate%28%29.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;7-如何设置和获取元素内部-HTML-内容？如何设置和获取元素内部文本？&quot;&gt;&lt;a href=&quot;#7-如何设置和获取元素内部-HTML-内容？如何设置和获取元素内部文本？&quot; class=&quot;headerlink&quot; title=&quot;7. 如何设置和获取元素内部 HTML 内容？如何设置和获取元素内部文本？&quot;&gt;&lt;/a&gt;&lt;strong&gt;7. 如何设置和获取元素内部 HTML 内容？如何设置和获取元素内部文本？&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;$(selector).html()&lt;/code&gt;&lt;/strong&gt;用于获取&lt;strong&gt;第一个&lt;/strong&gt;匹配元素的内容，。这个函数不能用于XML文档，但可以用于XHTML文档。如果选择器匹配多个元素，那么只有第一个匹配元素的 HTML 内容会被获取；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;$(selector).html( htmlString )&lt;/code&gt;&lt;/strong&gt;用于设定每一个匹配元素的html内容;也可以通过函数来设置html内容：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;div.demo-container&#39;&lt;/span&gt;).html(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; emph = &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;em&amp;gt;&#39;&lt;/span&gt; + $(&lt;span class=&quot;string&quot;&gt;&#39;p&#39;&lt;/span&gt;).length + &lt;span class=&quot;string&quot;&gt;&#39; paragraphs!&amp;lt;/em&amp;gt;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;p&amp;gt;All new content for &#39;&lt;/span&gt; + emph + &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;/p&amp;gt;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;$(selector).text()&lt;/code&gt;&lt;/strong&gt;取得所有匹配元素的文本内容。这个方法对HTML和XML文档都有效。注意：&lt;code&gt;.text()&lt;/code&gt; 方法不能使用在 &lt;code&gt;input&lt;/code&gt; 元素或&lt;code&gt;scripts&lt;/code&gt;元素上。 &lt;code&gt;input&lt;/code&gt; 或 &lt;code&gt;textarea&lt;/code&gt; 需要使用 &lt;strong&gt;&lt;code&gt;.val()&lt;/code&gt;&lt;/strong&gt; 方法获取或设置文本值。得到&lt;code&gt;scripts&lt;/code&gt;元素的值，使用&lt;code&gt;.html()&lt;/code&gt;方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;$(selecor).text( textString )&lt;/code&gt;&lt;/strong&gt;用于设置每一个匹配元素的文本内容；也可以通过函数来设置：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;p&quot;&lt;/span&gt;).text(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;这个 p 元素的 index 是：&quot;&lt;/span&gt; + n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;8-如何设置和获取表单用户输入或者选择的内容？如何设置和获取元素属性？&quot;&gt;&lt;a href=&quot;#8-如何设置和获取表单用户输入或者选择的内容？如何设置和获取元素属性？&quot; class=&quot;headerlink&quot; title=&quot;8. 如何设置和获取表单用户输入或者选择的内容？如何设置和获取元素属性？&quot;&gt;&lt;/a&gt;&lt;strong&gt;8. 如何设置和获取表单用户输入或者选择的内容？如何设置和获取元素属性？&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;$(selector).val()&lt;/code&gt;&lt;/strong&gt;获取匹配元素的当前（输入/选择）值，如果多选，将返回一个数组，其包含所选的值。例如：如果是&lt;code&gt;select&lt;/code&gt;元素， 当没有选择项被选中，它返回&lt;code&gt;null&lt;/code&gt;;如果&lt;code&gt;select&lt;/code&gt;元素有&lt;code&gt;multiple&lt;/code&gt;（多选）属性，并且至少一个选择项被选中，&lt;code&gt;.val()&lt;/code&gt;方法返回一个数组，这个数组包含每个选中选择项的值；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;$(selector).val(value)&lt;/code&gt;&lt;/strong&gt;设置匹配元素输入或选择的值；也可以通过函数设定文本框的值；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;例如将文本框输入变为大写：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ipt&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ipt&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&#39;.ipt&#39;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;keyup&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      $(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).val($(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).val().toUpperCase());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;.attr(name|properties|key,value|fn)&lt;/code&gt;&lt;/strong&gt;获取匹配的元素集合中的&lt;strong&gt;第一个&lt;/strong&gt;元素的属性的值  或 设置每一个匹配元素的一个或多个属性。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  设置一个属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#img1&#39;&lt;/span&gt;).attr(&lt;span class=&quot;string&quot;&gt;&#39;alt&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;rain&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置多个属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#img1&#39;&lt;/span&gt;).attr(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  alt: &lt;span class=&quot;string&quot;&gt;&#39;rain&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  title: &lt;span class=&quot;string&quot;&gt;&#39;cloud&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置函数返回&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;img&quot;&lt;/span&gt;).attr(&lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.src &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;【练习】&quot;&gt;&lt;a href=&quot;#【练习】&quot; class=&quot;headerlink&quot; title=&quot;【练习】&quot;&gt;&lt;/a&gt;【练习】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;1-使用-jQuery实现如下效果&quot;&gt;&lt;a href=&quot;#1-使用-jQuery实现如下效果&quot; class=&quot;headerlink&quot; title=&quot;1. 使用 jQuery实现如下效果&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 使用 jQuery实现如下效果&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xnk1s.com2.z0.glb.qiniucdn.com/8-1.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://febox.applinzi.com/task25/task25-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果点我&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://js.jirengu.com/vor/8/edit?html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;瞅瞅代码&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;2-使用-jQuery实现如下效果&quot;&gt;&lt;a href=&quot;#2-使用-jQuery实现如下效果&quot; class=&quot;headerlink&quot; title=&quot;2. 使用 jQuery实现如下效果&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. 使用 jQuery实现如下效果&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xnk1s.com2.z0.glb.qiniucdn.com/8-2.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;问题：&lt;/strong&gt; 点奢侈品2的时候页面跳到了顶部，可能是什么原因？如何解决&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://febox.applinzi.com/task25/task25-2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果点我&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://js.jirengu.com/doj/1/edit?html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;瞅瞅代码&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;3-使用-jQuery实现如下效果&quot;&gt;&lt;a href=&quot;#3-使用-jQuery实现如下效果&quot; class=&quot;headerlink&quot; title=&quot;3. 使用 jQuery实现如下效果&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. 使用 jQuery实现如下效果&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xnk1s.com2.z0.glb.qiniucdn.com/8-3-1.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://febox.applinzi.com/task25/task25-3.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果点我&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://js.jirengu.com/duh/3/edit?html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;瞅瞅代码&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;提示&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1.使用代理&lt;br&gt;2.当点击按钮时使用如下数据&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; products = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        img: &lt;span class=&quot;string&quot;&gt;&#39;http://img10.360buyimg.com/N3/jfs/t2242/92/1446546284/374195/9196ac66/56af0958N1a723458.jpg&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name: &lt;span class=&quot;string&quot;&gt;&#39;珂兰 黄金手 猴哥款&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        price: &lt;span class=&quot;string&quot;&gt;&#39;￥405.00&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        img: &lt;span class=&quot;string&quot;&gt;&#39;http://img10.360buyimg.com/N3/jfs/t2242/92/1446546284/374195/9196ac66/56af0958N1a723458.jpg&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name: &lt;span class=&quot;string&quot;&gt;&#39;珂兰 黄金转运珠 猴哥款&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        price: &lt;span class=&quot;string&quot;&gt;&#39;￥100.00&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        img: &lt;span class=&quot;string&quot;&gt;&#39;http://img10.360buyimg.com/N3/jfs/t2242/92/1446546284/374195/9196ac66/56af0958N1a723458.jpg&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name: &lt;span class=&quot;string&quot;&gt;&#39;珂兰 黄金手链 3D猴哥款&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        price: &lt;span class=&quot;string&quot;&gt;&#39;￥45.00&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jquery.cuishifeng.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jQuery API 1.12 中文文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.css88.com/jqapi-1.9/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jQuery API 中文文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h3 id=&quot;【知识点】&quot;&gt;&lt;a href=&quot;#【知识点】&quot; class=&quot;headerlink&quot; title=&quot;【知识点】&quot;&gt;&lt;/a&gt;【知识点】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;1-说说库和框架的区别？&quot;&gt;&lt;a href=&quot;#1-说说库和框架的区别？&quot; class=&quot;headerlink&quot; title=&quot;1. 说说库和框架的区别？&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 说说库和框架的区别？&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;库&lt;/strong&gt; 是把一些可以复用的方法集中进行封装到一个&lt;code&gt;library&lt;/code&gt;，提供&lt;code&gt;API&lt;/code&gt;，我们通过这些&lt;code&gt;API&lt;/code&gt;就可以调用这些已经封装好的方法，将代码写得更少/巧/强壮，以便简单快捷完成任务，提高生产力！比如 &lt;code&gt;jQuery&lt;/code&gt; 就是更加接近一个库，要什么可以从中拿；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;框架&lt;/strong&gt; 也算是库的一种，不过更加强调提供一种解决方案，给你搭好架子，代码怎样组织，所以不单单是具体的方法或函数，而是注重从细节到整体的宏观思路。&lt;code&gt;AngularJS&lt;/code&gt; 就算是一个框架，因为它提供了一整套的解决方案；&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="编程学习" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端基础" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="JavaScript" scheme="http://licao404.com/tags/JavaScript/"/>
    
      <category term="jQuery" scheme="http://licao404.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>AJAX-从入门到放弃</title>
    <link href="http://licao404.com/2016/04/12/Ajax%E6%B5%85%E5%85%A5%E9%97%A8/"/>
    <id>http://licao404.com/2016/04/12/Ajax浅入门/</id>
    <published>2016-04-11T16:47:32.000Z</published>
    <updated>2016-04-14T02:25:29.112Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;h3 id=&quot;【知识点】&quot;&gt;&lt;a href=&quot;#【知识点】&quot; class=&quot;headerlink&quot; title=&quot;【知识点】&quot;&gt;&lt;/a&gt;【知识点】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;AJAX-是什么？有什么作用？&quot;&gt;&lt;a href=&quot;#AJAX-是什么？有什么作用？&quot; class=&quot;headerlink&quot; title=&quot;AJAX 是什么？有什么作用？&quot;&gt;&lt;/a&gt;&lt;strong&gt;AJAX 是什么？有什么作用？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;AJAX（&lt;strong&gt;Asynchronous Javascript And XML&lt;/strong&gt;）即异步的JavaScript和XML，是一种创建交互式网页应用的网页开发技术，所以并不是一门编程语言（小白多少年以为它诸如JavaScript，jQuery一类&lt;code&gt;(@_@;)&lt;/code&gt;,身份终于得到正名）。&lt;/p&gt;
&lt;p&gt;通过在后台与服务器进行少量的数据交换，AJAX可以使网页实现异步更新，这意味着可以在不重新加载（刷新）整个网页的情况下，对网页某部分进行更新。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;AJAX的核心、基础是JavaScript的 &lt;strong&gt;XMLHttpRequest&lt;/strong&gt; 对象（&lt;code&gt;IE7+、Firefox、Chrome、Safari and Opera&lt;/code&gt;），这个对象为向服务器发送请求和解析服务器响应提供了流畅的接口，XmlHttpRequest可以使用JavaScript向服务器提出请求并处理响应，而不阻塞用户。通过以下代码创建一个XMLHttpRequest对象：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; xmlhttp = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XMLHttpRequest();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;老版本IE浏览器（IE5，6）使用&lt;code&gt;ActiveX&lt;/code&gt;对象：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; xmlhttp = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ActiveXObject();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;尝试写一个浏览器兼容的创建XHR对象的函数：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;creatXHR&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; xmlhttp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.XMLHttpRequest) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//IE7+、Firefox、Chrome、Safari and Opera&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xmlhttp = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XMLHttpRequest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//IE5，6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xmlhttp = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ActiveXObject(&lt;span class=&quot;string&quot;&gt;&quot;Microsoft.XMLHTTP&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; xmlhttp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个函数貌似只是个思路(草稿)？我们试试让他更加丰满的吧，教你封装一个“&lt;a href=&quot;#01&quot;&gt;ajax()函数&lt;/a&gt;”.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;创建了XMLHttpRequest对象后，我们需要给对象的 &lt;strong&gt;onreadystatechange&lt;/strong&gt; 属性绑定事件监听函数，告诉服务器接收到请求然后应该去干什么：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xmlhttp.onreadystatechange = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//Something you want to do ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(xmlhttp.status);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (xmlhttp.readyState == &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &amp;amp;&amp;amp; xmlhttp.status == &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(xmlhtt.status === &lt;span class=&quot;number&quot;&gt;404&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后发送请求，有两个重要方法 &lt;strong&gt;open()&lt;/strong&gt; 和 &lt;strong&gt;send()&lt;/strong&gt; ：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xmlhttp.open(&lt;span class=&quot;string&quot;&gt;&quot;GET&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;example.php&quot;&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;open()&lt;/code&gt;方法内的3个参数：&lt;br&gt;&lt;strong&gt;&lt;code&gt;1).&lt;/code&gt;&lt;/strong&gt; &lt;code&gt;method&lt;/code&gt;规定HTTP请求的方式，一般是&lt;code&gt;GET&lt;/code&gt;或者&lt;code&gt;POST&lt;/code&gt;（按照HTTP规范,该参数要大写;否则,某些浏览器(如Firefox)可能无法处理请求。HTTP有&lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;9种请求方式&lt;/a&gt;&lt;br&gt;&lt;strong&gt;&lt;code&gt;2).&lt;/code&gt;&lt;/strong&gt; 请求页面的&lt;code&gt;url&lt;/code&gt;，注意不能&lt;strong&gt;跨域请求&lt;/strong&gt;,否则会有&lt;code&gt;permission denied&lt;/code&gt;错误；&lt;br&gt;&lt;strong&gt;&lt;code&gt;3).&lt;/code&gt;&lt;/strong&gt; &lt;code&gt;asunc&lt;/code&gt;:设置为 &lt;strong&gt;true&lt;/strong&gt; 异步模式，JavaScript函数将继续执行,而不等待服务器响应.这就是”AJAX”中的”A”；设置为 &lt;strong&gt;false&lt;/strong&gt; 同步模式，只能等待服务器响应而无法继续进行其他；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xmlhttp.send();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xmlhttp.send(string);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;如果采用了&lt;code&gt;GET&lt;/code&gt;方式，直接&lt;code&gt;send()&lt;/code&gt;后进行其他操作;如果采用了&lt;code&gt;POST&lt;/code&gt;方式，&lt;code&gt;send()&lt;/code&gt;方法的参数可以使任何想发给服务器的数据，规定必须是字符串的形式；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;readyState&lt;/strong&gt; ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0 ：请求未初始化&lt;/li&gt;
&lt;li&gt;1 ：服务器连接已建立&lt;/li&gt;
&lt;li&gt;2 ：请求已接收&lt;/li&gt;
&lt;li&gt;3 ：请求处理中&lt;/li&gt;
&lt;li&gt;4 ：请求完成，响应就绪&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;status&lt;/strong&gt; ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;202 ： “OK”&lt;/li&gt;
&lt;li&gt;404 ： 未找到资源&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;前后端开发联调需要注意哪些事情？后端接口完成前如何-mock-数据？&quot;&gt;&lt;a href=&quot;#前后端开发联调需要注意哪些事情？后端接口完成前如何-mock-数据？&quot; class=&quot;headerlink&quot; title=&quot;前后端开发联调需要注意哪些事情？后端接口完成前如何 mock 数据？&quot;&gt;&lt;/a&gt;&lt;strong&gt;前后端开发联调需要注意哪些事情？后端接口完成前如何 mock 数据？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;前后端纯接口开发模式：&lt;br&gt;&lt;strong&gt;&lt;code&gt;1).&lt;/code&gt;&lt;/strong&gt; 在开发之前规定好接口文档，并指明由谁来撰写和维护；&lt;br&gt;&lt;strong&gt;&lt;code&gt;2).&lt;/code&gt;&lt;/strong&gt; 如果接口的信息改动需要互相确认改动信息；&lt;br&gt;&lt;strong&gt;&lt;code&gt;3).&lt;/code&gt;&lt;/strong&gt; 确定接口数据传输类型，JSON、XML or JSONP；&lt;br&gt;&lt;strong&gt;&lt;code&gt;4).&lt;/code&gt;&lt;/strong&gt; 定义数据管理和归属权，是属于前端管理还是后端管理；&lt;br&gt;&lt;strong&gt;&lt;code&gt;5).&lt;/code&gt;&lt;/strong&gt; 确定数据传输方式，前后端之间是否有中间层；&lt;/p&gt;
&lt;p&gt;后端接口完成前如何 mock 数据：&lt;br&gt;&lt;strong&gt;&lt;code&gt;1).&lt;/code&gt;&lt;/strong&gt; 自己制作模拟数据，但这种方式工作量比较大，而且需要收集分类要求的数据，如果&lt;code&gt;API&lt;/code&gt;变更，之前的所有数据也需要及时更新。但这样的好处是能够快速的完成前端任务；&lt;br&gt;&lt;strong&gt;&lt;code&gt;2).&lt;/code&gt;&lt;/strong&gt; 使用模拟数据生成器：&lt;a href=&quot;http://mockjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mock.js&lt;/a&gt;；&lt;/p&gt;
&lt;h4 id=&quot;点击按钮，使用-AJAX-获取数据，如何在数据到来之前防止重复点击&quot;&gt;&lt;a href=&quot;#点击按钮，使用-AJAX-获取数据，如何在数据到来之前防止重复点击&quot; class=&quot;headerlink&quot; title=&quot;点击按钮，使用 AJAX 获取数据，如何在数据到来之前防止重复点击?&quot;&gt;&lt;/a&gt;&lt;strong&gt;点击按钮，使用 AJAX 获取数据，如何在数据到来之前防止重复点击?&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;1).&lt;/code&gt;&lt;/strong&gt; 这个只知道可以通过设置一个表示状态的&lt;code&gt;flag&lt;/code&gt;，初始化值为&lt;code&gt;false&lt;/code&gt;，即：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; flag = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;2).&lt;/code&gt;&lt;/strong&gt; 然后在绑定事件函数内部flag值设为&lt;code&gt;true&lt;/code&gt;，当前可用,函数返回。例如：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;btn.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    flag = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(flag)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;3).&lt;/code&gt;&lt;/strong&gt; 请求数据时，函数flag设为false，保证其重复点击不请求。&lt;br&gt;……待续&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;【练习】&quot;&gt;&lt;a href=&quot;#【练习】&quot; class=&quot;headerlink&quot; title=&quot;【练习】&quot;&gt;&lt;/a&gt;【练习】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;封装一个-AJAX-函数，能通过如下方式调用&quot;&gt;&lt;a href=&quot;#封装一个-AJAX-函数，能通过如下方式调用&quot; class=&quot;headerlink&quot; title=&quot;封装一个 AJAX 函数，能通过如下方式调用&quot;&gt;&lt;/a&gt;&lt;strong&gt;封装一个 AJAX 函数，能通过如下方式调用&lt;/strong&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;#btn&#39;&lt;/span&gt;).addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        url: &lt;span class=&quot;string&quot;&gt;&#39;getData.php&#39;&lt;/span&gt;,   &lt;span class=&quot;comment&quot;&gt;//接口地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        type: &lt;span class=&quot;string&quot;&gt;&#39;get&#39;&lt;/span&gt;,               &lt;span class=&quot;comment&quot;&gt;// 类型， post 或者 get,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            username: &lt;span class=&quot;string&quot;&gt;&#39;xiaoming&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            password: &lt;span class=&quot;string&quot;&gt;&#39;abcd1234&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ret&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(ret);       &lt;span class=&quot;comment&quot;&gt;// &amp;#123;status: 0&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        error: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;出错了&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a id=&quot;01&quot; name=&quot;01&quot;&gt; &lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;将其封装成一个&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task24/js/ajax.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ajax.js&lt;/a&gt;，以便让我们以后尽情的调用它，代码如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; xmlhttp = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ajax&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;opts&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//跨浏览器创建xhr对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xmlhttp = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.XMLHttpRequest) &amp;#123; &lt;span class=&quot;comment&quot;&gt;//现代浏览器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xmlhttp = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XMLHttpRequest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (xmlhttp.overrideMimeType) &amp;#123; &lt;span class=&quot;comment&quot;&gt;//设置MIME类别，针对某些特定版本的mozillar浏览器的BUG进行修正&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            xmlhttp.overrideMimeType(&lt;span class=&quot;string&quot;&gt;&#39;text/xml&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.ActiveXObject) &amp;#123; &lt;span class=&quot;comment&quot;&gt;//IE5,6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            xmlhttp = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ActiveXObject(&lt;span class=&quot;string&quot;&gt;&quot;Msxm12.XMLHTTP&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                xmlhttp = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ActiveXObject(&lt;span class=&quot;string&quot;&gt;&quot;Microsoft.XMLHTTP&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (e) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!xmlhttp) &amp;#123; &lt;span class=&quot;comment&quot;&gt;//异常，创建xhr对象实例失败&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;string&quot;&gt;&#39;Giving up :( Cannot create an XMLHTTP instance&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xmlhttp.onreadystatechange = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (xmlhttp.readyState == &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &amp;amp;&amp;amp; xmlhttp.status == &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; json = &lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.parse(xmlhttp.responseText);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            opts.success(json);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (xmlhttp.readyState == &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &amp;amp;&amp;amp; xmlhttp.status == &lt;span class=&quot;number&quot;&gt;404&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            opts.error();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; dataStr = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; opts.data) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dataStr += key + &lt;span class=&quot;string&quot;&gt;&#39;=&#39;&lt;/span&gt; + opts.data[key] + &lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// dataStr = dataStr.substr(0,dataStr.length-1);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dataStr = dataStr.replace(&lt;span class=&quot;regexp&quot;&gt;/&amp;amp;$/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (opts.type.toLowerCase() === &lt;span class=&quot;string&quot;&gt;&#39;post&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xmlhttp.open(opts.type, opts.url, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xmlhttp.setRequestHeader(&lt;span class=&quot;string&quot;&gt;&quot;Content-type&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;application/x-www-form-urlencoded&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xmlhttp.send(dataStr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (opts.type.toLowerCase() === &lt;span class=&quot;string&quot;&gt;&#39;get&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xmlhttp.open(opts.type, opts.url + &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt; + dataStr, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xmlhttp.send();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;实现如下”加载更多”的功能&quot;&gt;&lt;a href=&quot;#实现如下”加载更多”的功能&quot; class=&quot;headerlink&quot; title=&quot;实现如下”加载更多”的功能&quot;&gt;&lt;/a&gt;&lt;strong&gt;实现如下”加载更多”的功能&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://febox.applinzi.com/task24-2/task24-2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果点我点我&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;瞅瞅代码：&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task24/task24-2/task24-2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;index.html&lt;/a&gt; | &lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task24/js/ajax.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ajax.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;实现注册表单验证功能&quot;&gt;&lt;a href=&quot;#实现注册表单验证功能&quot; class=&quot;headerlink&quot; title=&quot;实现注册表单验证功能&quot;&gt;&lt;/a&gt;&lt;strong&gt;实现注册表单验证功能&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://febox.applinzi.com/task24-3/task24-3.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果点我点我&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;瞅瞅代码：&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task24/task24-3/task24-3.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;index.html&lt;/a&gt; | &lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task24/js/ajax.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ajax.js&lt;/a&gt; | &lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task24/js/checkIpt.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;checkIpt.js&lt;/a&gt; | &lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task24/js/doClass.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;doClass.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;参考:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/AJAX/Getting_Started&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN | AJAX入门&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h3 id=&quot;【知识点】&quot;&gt;&lt;a href=&quot;#【知识点】&quot; class=&quot;headerlink&quot; title=&quot;【知识点】&quot;&gt;&lt;/a&gt;【知识点】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;AJAX-是什么？有什么作用？&quot;&gt;&lt;a href=&quot;#AJAX-是什么？有什么作用？&quot; class=&quot;headerlink&quot; title=&quot;AJAX 是什么？有什么作用？&quot;&gt;&lt;/a&gt;&lt;strong&gt;AJAX 是什么？有什么作用？&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;AJAX（&lt;strong&gt;Asynchronous Javascript And XML&lt;/strong&gt;）即异步的JavaScript和XML，是一种创建交互式网页应用的网页开发技术，所以并不是一门编程语言（小白多少年以为它诸如JavaScript，jQuery一类&lt;code&gt;(@_@;)&lt;/code&gt;,身份终于得到正名）。&lt;/p&gt;
&lt;p&gt;通过在后台与服务器进行少量的数据交换，AJAX可以使网页实现异步更新，这意味着可以在不重新加载（刷新）整个网页的情况下，对网页某部分进行更新。&lt;br&gt;
    
    </summary>
    
      <category term="编程学习" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端基础" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="JavaScript" scheme="http://licao404.com/tags/JavaScript/"/>
    
      <category term="AJAX" scheme="http://licao404.com/tags/AJAX/"/>
    
      <category term="前后端" scheme="http://licao404.com/tags/%E5%89%8D%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>使用XAMPP搭建本地Apache服务器</title>
    <link href="http://licao404.com/2016/04/10/%E4%BD%BF%E7%94%A8XAMPP%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0Web%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://licao404.com/2016/04/10/使用XAMPP搭建本地Web服务器/</id>
    <published>2016-04-10T08:29:58.000Z</published>
    <updated>2016-05-07T03:43:39.564Z</updated>
    
    <content type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;Web服务器的搭建，例如&lt;a href=&quot;http://baike.baidu.com/link?url=MroN_mSBbcJL21A0lYqZlh5FNT3Hukj2ZfurTNf0gxr904iT7hc7zrVaLUC8UuXLTT8ABpm16ilURuOMOMwma9b2R011L2tqMeugghpPt9W&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Apache&lt;/a&gt;，对初学者来说并不是简单事，如果还想添加PHP、MySQL等，就更难了。如果我们借助一些集成软件包，一切操作都简单了。而本文使用的XAMPP，就是这样一个易于安装且包含 MySQL、PHP 和 Perl 的 Apache 发行版，其他类似软件还有&lt;a href=&quot;http://www.wampserver.com/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wamp&lt;/a&gt;等&lt;/blockquote&gt;

&lt;h3 id=&quot;安装及配置&quot;&gt;&lt;a href=&quot;#安装及配置&quot; class=&quot;headerlink&quot; title=&quot;安装及配置&quot;&gt;&lt;/a&gt;安装及配置&lt;/h3&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;1）&lt;/strong&gt;.XAMPP是全平台的，直接在&lt;a href=&quot;https://www.apachefriends.org/zh_cn/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;下载系统对应的版本：&lt;a href=&quot;https://www.apachefriends.org/xampp-files/5.6.19/xampp-win32-5.6.19-0-VC11-installer.exe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;XAMPP for Windows&lt;/a&gt;  |  &lt;a href=&quot;https://www.apachefriends.org/xampp-files/5.6.19/xampp-linux-x64-5.6.19-0-installer.run&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;XAMPP for Linux&lt;/a&gt;  |  &lt;a href=&quot;https://www.apachefriends.org/xampp-files/5.6.19/xampp-osx-5.6.19-0-installer.dmg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;XAMPP for OS X&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2）&lt;/strong&gt;.安装XAMPP，不要安装到C盘，安装过程就不详细展开，不了解的可自行搜索。建议至少安装Apache、MySQL、PHP、以及phpMyAdmin；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3）&lt;/strong&gt;.新建一个文件夹来存放网站代码，比如我在D盘下新建&lt;code&gt;myWeb&lt;/code&gt;文件夹；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4）&lt;/strong&gt;.安装完成后，打开安装目录下的&lt;code&gt;apache&lt;/code&gt;文件夹下的&lt;code&gt;conf&lt;/code&gt;文件夹下的&lt;code&gt;httpd.conf&lt;/code&gt;文件（记事本或其他文本编辑器）。修改&lt;br&gt;&lt;code&gt;DocumentRoot&lt;/code&gt;目录（该目录就是网站代码的路径），大概在240行附近，将其改为刚刚新建的文件夹的路径，例如：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DocumentRoot &amp;quot;D:/myWeb&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Directory &amp;quot;D:/myWeb&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5）&lt;/strong&gt;.在&lt;code&gt;C:\Windows\System32\drivers\etc&lt;/code&gt;目录下修改&lt;code&gt;host&lt;/code&gt;，加入&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;127.0.0.1 www.licao-train.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这一步的目的是让你后面在浏览器输入&lt;code&gt;www.licao-train.com&lt;/code&gt;域名能定位到你的代码目录（这里是&lt;code&gt;myWeb&lt;/code&gt;目录），当然域名可以替换。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;测试&quot;&gt;&lt;a href=&quot;#测试&quot; class=&quot;headerlink&quot; title=&quot;测试&quot;&gt;&lt;/a&gt;测试&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1）&lt;/strong&gt;.在存放网站代码文件夹里(这里是myWeb文件夹)新建一个php文件&lt;code&gt;hello.php&lt;/code&gt;，打开文件编写php代码：&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;hello php&quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    phpinfo(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2）&lt;/strong&gt;.保存退出，打开XAMPP，启动Apache和MySQL（start）；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3）&lt;/strong&gt;.在浏览器地址栏输入&lt;code&gt;http://localhost/index.php&lt;/code&gt;或者&lt;code&gt;http://www.licao-train.com/hello.php&lt;/code&gt;，看是否可以访问刚刚新建的&lt;code&gt;php&lt;/code&gt;文件：&lt;br&gt;&lt;img src=&quot;http://7xr868.com1.z0.glb.clouddn.com/task23/XAMPP%E9%85%8D%E7%BD%AE%E5%B1%95%E7%A4%BA.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;到这里，你的Apache服务器+PHP基本上已经搭建好了。遇到不可测的问题可以在下面回复，我们一起学习。&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote class = &quot;blockquote-center&quot;&gt;Web服务器的搭建，例如&lt;a href=&quot;http://baike.baidu.com/link?url=MroN_mSBbcJL21A0lYqZlh5FNT3Hukj2ZfurTNf0gxr904iT7hc7zrVaLUC8UuXLTT8ABpm16ilURuOMOMwma9b2R011L2tqMeugghpPt9W&quot;&gt;Apache&lt;/a&gt;，对初学者来说并不是简单事，如果还想添加PHP、MySQL等，就更难了。如果我们借助一些集成软件包，一切操作都简单了。而本文使用的XAMPP，就是这样一个易于安装且包含 MySQL、PHP 和 Perl 的 Apache 发行版，其他类似软件还有&lt;a href=&quot;http://www.wampserver.com/en/&quot;&gt;wamp&lt;/a&gt;等&lt;/blockquote&gt;

&lt;h3 id=&quot;安装及配置&quot;&gt;&lt;a href=&quot;#安装及配置&quot; class=&quot;headerlink&quot; title=&quot;安装及配置&quot;&gt;&lt;/a&gt;安装及配置&lt;/h3&gt;
    
    </summary>
    
      <category term="计算机基础" scheme="http://licao404.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
      <category term="计算机网络" scheme="http://licao404.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="php" scheme="http://licao404.com/tags/php/"/>
    
      <category term="Web服务器" scheme="http://licao404.com/tags/Web%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="前后端" scheme="http://licao404.com/tags/%E5%89%8D%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Apache" scheme="http://licao404.com/tags/Apache/"/>
    
  </entry>
  
  <entry>
    <title>史上最全CSS学习资料大全</title>
    <link href="http://licao404.com/2016/04/04/%E3%80%902016%E5%B9%B4%E7%89%B9%E5%88%AB%E7%A6%8F%E5%88%A9%E3%80%91%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%85%A8CSS%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E5%A4%A7%E5%85%A8/"/>
    <id>http://licao404.com/2016/04/04/【2016年特别福利】史上最全CSS学习资料大全/</id>
    <published>2016-04-03T16:15:45.000Z</published>
    <updated>2016-04-24T04:31:33.738Z</updated>
    
    <content type="html">&lt;img src=&quot;http://img.imooc.com/568c7d4400013a4d19201080.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot;&gt;
&lt;blockquote&gt;
&lt;p&gt;本文转载自慕课网，原文&lt;a href=&quot;http://www.imooc.com/article/3450&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;戳此&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;基础篇&quot;&gt;&lt;a href=&quot;#基础篇&quot; class=&quot;headerlink&quot; title=&quot;基础篇&quot;&gt;&lt;/a&gt;基础篇&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/1437&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS 最核心的几个概念&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/1186&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS 简写指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2001&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS样式基础&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2067&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS样式设置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2058&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS布局模型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2010&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS文字排版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2475&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;你不得不知道的CSS 字体那些事儿&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2064&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS中的颜色值和长度值&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2004&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS选择器分类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2787&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;30个你必须记住的CSS选择符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2031&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS元素分类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2799&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;浅谈CSS伪类分类&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;进阶篇&quot;&gt;&lt;a href=&quot;#进阶篇&quot; class=&quot;headerlink&quot; title=&quot;进阶篇&quot;&gt;&lt;/a&gt;进阶篇&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2442&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS 专业技巧收集&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/1845&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS小技巧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2061&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS代码优化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2007&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS的继承、层叠、特殊性和重要性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/3030&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS 的使用中你可能不知道的 7 件事&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/1536&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Web 开发中 20 个很有用的 CSS 库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/1334&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;11个学习CSS实用工具和资源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/1247&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;17个有趣实用的CSS 3悬停效果教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2181&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;前端笔试面试中的常用知识点总结(CSS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/1332&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;10个顶级的CSS UI开源框架&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;实战篇&quot;&gt;&lt;a href=&quot;#实战篇&quot; class=&quot;headerlink&quot; title=&quot;实战篇&quot;&gt;&lt;/a&gt;实战篇&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2055&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用CSS来找出两张图的差异&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2979&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用 CSS 3 来做个平安果吧~&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2409&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何调试CSS动画&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2409&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用CSS制作Loading加载动画【第一期】&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/1258&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用CSS制作Loading加载动画-Loading字样【第二期】&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2439&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;帮助你美化网站的10+实用 CSS3 技巧&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2163&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;30个使用CSS实现的loading等待加载效果&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/3273&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;慕课课程导航解析&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;免费课程（视频）篇&quot;&gt;&lt;a href=&quot;#免费课程（视频）篇&quot; class=&quot;headerlink&quot; title=&quot;免费课程（视频）篇&quot;&gt;&lt;/a&gt;免费课程（视频）篇&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/315&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;重识CSS&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/314&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS未来&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/316&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;css框架的迷思&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/319&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS与界面动效&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/320&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS工作流&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/57&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何用CSS进行网页布局&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/473&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS3图片动态提示效果&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/323&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Web Components中的CSS&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/357&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS动画实用技巧&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTML+CSS基础课程&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/174&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;商城分类导航效果&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/12&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;形形色色的下拉菜单&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/6&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;导航条菜单的制作&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://img.imooc.com/568c7d4400013a4d19201080.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; /&gt;
&lt;blockquote&gt;
&lt;p&gt;本文转载自慕课网，原文&lt;a href=&quot;http://www.imooc.com/article/3450&quot;&gt;戳此&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;基础篇&quot;&gt;&lt;a href=&quot;#基础篇&quot; class=&quot;headerlink&quot; title=&quot;基础篇&quot;&gt;&lt;/a&gt;基础篇&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/1437&quot;&gt;CSS 最核心的几个概念&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/1186&quot;&gt;CSS 简写指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2001&quot;&gt;CSS样式基础&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2067&quot;&gt;CSS样式设置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2058&quot;&gt;CSS布局模型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2010&quot;&gt;CSS文字排版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2475&quot;&gt;你不得不知道的CSS 字体那些事儿&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2064&quot;&gt;CSS中的颜色值和长度值&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2004&quot;&gt;CSS选择器分类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2787&quot;&gt;30个你必须记住的CSS选择符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2031&quot;&gt;CSS元素分类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/article/2799&quot;&gt;浅谈CSS伪类分类&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="编程学习" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端基础" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="CSS" scheme="http://licao404.com/tags/CSS/"/>
    
      <category term="转载" scheme="http://licao404.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="干货" scheme="http://licao404.com/tags/%E5%B9%B2%E8%B4%A7/"/>
    
  </entry>
  
  <entry>
    <title>DOM,事件</title>
    <link href="http://licao404.com/2016/04/03/DOM-%E4%BA%8B%E4%BB%B6/"/>
    <id>http://licao404.com/2016/04/03/DOM-事件/</id>
    <published>2016-04-03T05:13:41.000Z</published>
    <updated>2016-04-14T01:08:02.398Z</updated>
    
    <content type="html">&lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;DOM（文档对象模型）是针对HTML、XML和SVG文档的API（编程接口）。DOM将前述的结构化文档解析成一个层次化的节点树（DOM Tree）。所有的节点和树状结构都有规范的API，这样我们就可以通过编程语言操作（增删改查）这些文档。严格地说，DOM不属于JavaScript，但是操作DOM是JavaScript最常见的任务，而JavaScript也是最常用于DOM操作的语言。所以，DOM往往放在JavaScript里面介绍。下文是利用JavaScript对DOM标准的实现。&lt;/blockquote&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;【知识点】&quot;&gt;&lt;a href=&quot;#【知识点】&quot; class=&quot;headerlink&quot; title=&quot;【知识点】&quot;&gt;&lt;/a&gt;【知识点】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;1-dom对象的innerText和innerHTML有什么区别？&quot;&gt;&lt;a href=&quot;#1-dom对象的innerText和innerHTML有什么区别？&quot; class=&quot;headerlink&quot; title=&quot;1. dom对象的innerText和innerHTML有什么区别？&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. &lt;code&gt;dom对象&lt;/code&gt;的&lt;code&gt;innerText&lt;/code&gt;和&lt;code&gt;innerHTML&lt;/code&gt;有什么区别？&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;innerHTML&lt;/code&gt;获取的是这个元素节点包含的所有HTML代码，包括标签，文本内容，例如：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;p1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;我是段落1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;link&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;#&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;FE&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p1 = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;p1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( p1.innerHTML);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//输出：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//我是段落1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;lt;a class=&quot;link&quot; href=&quot;#&quot;&amp;gt;FE&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;innerText&lt;/code&gt;自动忽略当前节点内部的HTML标签，获取的是这个元素节点包含的所有文本字符串内容，进行拼接。输出结果为：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( p1.innerText);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//输出：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//我是段落1 FE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;innerHTML&lt;/code&gt;是符合W3C标准的属性，而&lt;code&gt;innerText&lt;/code&gt;只适用于IE浏览器；&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;innerText&lt;/code&gt;会自动对HTML标签转义，什么意思呢，继续修改上面的例子：p标签解释为文本，即&lt;code&gt;&amp;amp;lt;p&amp;amp;gt;&lt;/code&gt;，而不会当作标签处理，正因为如此，&lt;code&gt;innerText&lt;/code&gt;比&lt;code&gt;innerHTML&lt;/code&gt;更加安全，可以防止&lt;code&gt;XSS攻击&lt;/code&gt;;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p1.innerText = &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;p&amp;gt;hello&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( p1.innerHTML); &lt;span class=&quot;comment&quot;&gt;//&amp;amp;lt;p&amp;amp;gt;hello&amp;amp;lt;/p&amp;amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( p1.innerText); &lt;span class=&quot;comment&quot;&gt;//&amp;lt;p&amp;gt;hello&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;2-elem-children和elem-childNodes的区别？&quot;&gt;&lt;a href=&quot;#2-elem-children和elem-childNodes的区别？&quot; class=&quot;headerlink&quot; title=&quot;2. elem.children和elem.childNodes的区别？&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. elem.children和elem.childNodes的区别？&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;children&lt;/code&gt;属性是非标准的，返回一个类似数组的动态对象（实时反映变化），包括当前元素节点的所有子元素集合。如果当前元素没有子元素，则返回的对象包含零个成员。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;childNodes&lt;/code&gt;属性是标准的，返回一个包括当前节点的所有子节点的&lt;code&gt;NodeList&lt;/code&gt;集合，包括文本节点Text，Comment节点。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;3-查询元素有几种常见的方法？&quot;&gt;&lt;a href=&quot;#3-查询元素有几种常见的方法？&quot; class=&quot;headerlink&quot; title=&quot;3. 查询元素有几种常见的方法？&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. 查询元素有几种常见的方法？&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;getElementById(id)&lt;/code&gt;：返回指定ID属性的元素节点.找不到匹配的节点，返回&lt;code&gt;null&lt;/code&gt;；特别的，在搜索匹配节点时，id属性是大小写敏感的。比如，如果某个节点的id属性是&lt;code&gt;main&lt;/code&gt;，那么&lt;code&gt;document.getElementById(&amp;quot;Main&amp;quot;)&lt;/code&gt;将返回&lt;code&gt;null&lt;/code&gt;，而不是指定节点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;getElementByClassName(class)&lt;/code&gt;：该方法返回一个类数组对象，包括了所有class名字符合指定条件的元素（搜索范围包括本身），元素的变化实时反映在返回结果中。这个方法不仅可以在document对象上调用，也可以在任何元素节点上调用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;getElementsByTagName()&lt;/code&gt;：返回所有指定标签的元素。返回值是一个&lt;code&gt;HTMLCollection&lt;/code&gt;对象，也就是说，搜索结果是一个动态集合，任何元素的变化都会实时反映在返回的集合中。这个方法不仅可以在&lt;code&gt;document&lt;/code&gt;对象上调用，也可以在任何元素节点上调用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;getElementsByName()&lt;/code&gt;：返回拥有&lt;code&gt;name属性&lt;/code&gt;的HTML元素，比如&lt;code&gt;form&lt;/code&gt;、&lt;code&gt;img&lt;/code&gt;、&lt;code&gt;frame&lt;/code&gt;、&lt;code&gt;embed和object&lt;/code&gt;，返回一个&lt;code&gt;NodeList&lt;/code&gt;格式的对象，不会实时反映元素的变化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;querySelector()&lt;/code&gt;：返回匹配指定的&lt;code&gt;CSS选择器&lt;/code&gt;的元素节点。如果有多个节点满足匹配条件，则返回&lt;code&gt;第一个匹配&lt;/code&gt;的节点。如果没有发现匹配的节点，则返回&lt;code&gt;null&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; el2 = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;#myParent &amp;gt; [ng-click]&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 其中&lt;code&gt;querySelector()&lt;/code&gt;无法选中CSS伪元素&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;querySelectorAll()&lt;/code&gt;：返回匹配指定的&lt;code&gt;CSS选择器&lt;/code&gt;的所有节点，返回的是&lt;code&gt;NodeList类型&lt;/code&gt;的对象。NodeList对象不是动态集合，所以元素节点的变化无法实时反映在返回结果中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;4-如何创建一个元素？如何给元素设置属性？&quot;&gt;&lt;a href=&quot;#4-如何创建一个元素？如何给元素设置属性？&quot; class=&quot;headerlink&quot; title=&quot;4. 如何创建一个元素？如何给元素设置属性？&quot;&gt;&lt;/a&gt;&lt;strong&gt;4. 如何创建一个元素？如何给元素设置属性？&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用&lt;code&gt;createElement()&lt;/code&gt;方法来创建一个&lt;code&gt;HTML&lt;/code&gt;元素节点，例如创建一个&lt;code&gt;img&lt;/code&gt;元素：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; img = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;img&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用&lt;code&gt;setAttribute()&lt;/code&gt;方法来&lt;strong&gt;设置元素属性&lt;/strong&gt;，例如：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;img.setAttribute(&lt;span class=&quot;string&quot;&gt;&quot;src&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;1.png&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后使用&lt;code&gt;appendChild()&lt;/code&gt;，把元素节点添加到指定元素节点末尾，比如添加到&lt;code&gt;body&lt;/code&gt;元素节点末尾：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.appendChild(img);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;createTextNode()&lt;/code&gt;方法创建文本节点：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; text = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createTextNode(&lt;span class=&quot;string&quot;&gt;&#39;hello!&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.appendChild(text);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 这个方法可以确保返回的节点，被浏览器当作txt文本渲染，而不是当作HTML代码（恶意代码会被转义）渲染。因此，可以用来展示用户的输入，避免&lt;code&gt;XSS攻击&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;createDocumentFragment()&lt;/code&gt;生成一个&lt;code&gt;DocumentFragment&lt;/code&gt;对象。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;5-元素的添加、删除？&quot;&gt;&lt;a href=&quot;#5-元素的添加、删除？&quot; class=&quot;headerlink&quot; title=&quot;5. 元素的添加、删除？&quot;&gt;&lt;/a&gt;&lt;strong&gt;5. 元素的添加、删除？&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用&lt;code&gt;appendChild()&lt;/code&gt;添加元素到指定元素的末尾：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.appendChild(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;img&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用&lt;code&gt;insertBefore()&lt;/code&gt;添加元素到指定元素之前;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用&lt;code&gt;removeChild()&lt;/code&gt;删除元素;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;body.removeChild(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;p1&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;6-DOM0-事件和-DOM2级-在事件监听使用方式上有什么区别？&quot;&gt;&lt;a href=&quot;#6-DOM0-事件和-DOM2级-在事件监听使用方式上有什么区别？&quot; class=&quot;headerlink&quot; title=&quot;6. DOM0 事件和 DOM2级 在事件监听使用方式上有什么区别？&quot;&gt;&lt;/a&gt;&lt;strong&gt;6. &lt;code&gt;DOM0&lt;/code&gt; 事件和 &lt;code&gt;DOM2级&lt;/code&gt; 在事件监听使用方式上有什么区别？&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;DOM0&lt;/code&gt;级事件处理程序只能给元素绑定一个事件，例如给&lt;code&gt;button&lt;/code&gt;绑定两个&lt;code&gt;onclick&lt;/code&gt;事件：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;btn&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;btn&quot;&lt;/span&gt;).onclick = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;btn&quot;&lt;/span&gt;).onclick = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;world&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;点击&lt;code&gt;button&lt;/code&gt;只会打印出&lt;code&gt;world&lt;/code&gt;,这种方式绑定的事件只会在时间流的冒泡阶段被处理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;DOM2&lt;/code&gt;级事件处理程序可以绑定多个事件（新浏览器处理方式），修改上面的例子：&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;btn&quot;&lt;/span&gt;).addEventListener(&lt;span class=&quot;string&quot;&gt;&quot;click&quot;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;helo&quot;&lt;/span&gt;);&amp;#125;,&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;btn&quot;&lt;/span&gt;).addEventListener(&lt;span class=&quot;string&quot;&gt;&quot;click&quot;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;world&quot;&lt;/span&gt;);&amp;#125;,&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;点击&lt;code&gt;button&lt;/code&gt;会先后打印出&lt;code&gt;hello&lt;/code&gt;、&lt;code&gt;world&lt;/code&gt;，通过&lt;code&gt;addEventListener()&lt;/code&gt;绑定的事件处理程序只能通过&lt;code&gt;removeElementListener()&lt;/code&gt;移除。&lt;code&gt;addEventListener()&lt;/code&gt;第三个参数为布尔值，设为&lt;code&gt;false&lt;/code&gt;时表示在事件流的冒泡阶段触发事件，&lt;code&gt;true&lt;/code&gt;则为捕获阶段。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;p1&quot;&lt;/span&gt;).addEventListener(&lt;span class=&quot;string&quot;&gt;&quot;click&quot;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;helo parents&quot;&lt;/span&gt;);&amp;#125;,&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;btn&quot;&lt;/span&gt;).addEventListener(&lt;span class=&quot;string&quot;&gt;&quot;click&quot;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;helo&quot;&lt;/span&gt;);&amp;#125;,&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的事件在事件捕获阶段被触发，绑定在父元素上的事件先于目标事件被触发，先后输出&lt;code&gt;hello parents&lt;/code&gt;、&lt;code&gt;hello&lt;/code&gt;；&lt;/p&gt;
&lt;h4 id=&quot;7-attachEvent与addEventListener的区别？&quot;&gt;&lt;a href=&quot;#7-attachEvent与addEventListener的区别？&quot; class=&quot;headerlink&quot; title=&quot;7. attachEvent与addEventListener的区别？&quot;&gt;&lt;/a&gt;&lt;strong&gt;7. &lt;code&gt;attachEvent&lt;/code&gt;与&lt;code&gt;addEventListener&lt;/code&gt;的区别？&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;参数不同：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;参数个数不同，&lt;code&gt;addEventListener()&lt;/code&gt;有3个参数，&lt;code&gt;attachEvent()&lt;/code&gt;有2个参数；&lt;code&gt;attachEvent()&lt;/code&gt;事件处理程序只能绑定在事件冒泡阶段，&lt;code&gt;addEventListener()&lt;/code&gt;可以通过其第3个参数设定为&lt;code&gt;true&lt;/code&gt;和&lt;code&gt;false&lt;/code&gt;来决定事件处理程序绑定在冒泡还是捕获阶段；（一般情况下都是冒泡，出于兼容性考虑）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第一个参数意义不同，&lt;code&gt;addEventListener()&lt;/code&gt;第一个参数是事件类型（&lt;code&gt;click&lt;/code&gt; ，&lt;code&gt;load&lt;/code&gt;），&lt;code&gt;attachEvent()&lt;/code&gt;第一个参数是事件处理函数名称（&lt;code&gt;onclick&lt;/code&gt;，&lt;code&gt;onload&lt;/code&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;事件处理程序的作用域不同。&lt;code&gt;addEventListener()&lt;/code&gt;作用域是元素本身，&lt;code&gt;this&lt;/code&gt;触发元素；&lt;code&gt;attachEvent()&lt;/code&gt;在全局作用域中运行，&lt;code&gt;this&lt;/code&gt;等于&lt;code&gt;window&lt;/code&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;时间处理程序的执行顺序不同。&lt;code&gt;addEventListener()&lt;/code&gt;是以添加它们的顺序执行，&lt;code&gt;attachEvent()&lt;/code&gt;执行顺序一般是则相反的；&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;8-解释IE事件冒泡和DOM2事件传播机制？&quot;&gt;&lt;a href=&quot;#8-解释IE事件冒泡和DOM2事件传播机制？&quot; class=&quot;headerlink&quot; title=&quot;8. 解释IE事件冒泡和DOM2事件传播机制？&quot;&gt;&lt;/a&gt;&lt;strong&gt;8. 解释&lt;code&gt;IE&lt;/code&gt;事件冒泡和&lt;code&gt;DOM2&lt;/code&gt;事件传播机制？&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;IE事件冒泡：事件开始由具体的元素接收，然后一层层往上传播到较不具体的节点，基本上所有的浏览器都支持事件冒泡；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;DOM2级&lt;/code&gt;事件传播包含3个阶段，事件捕获阶段 ——&amp;gt; 处于目标阶段 ——&amp;gt; 事件冒泡阶段，首先是事件捕获，从最上层节点一层层往下传播，然后目标节点接收事件，最后进行事件冒泡；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;9-如何阻止事件冒泡？-如何阻止默认事件？&quot;&gt;&lt;a href=&quot;#9-如何阻止事件冒泡？-如何阻止默认事件？&quot; class=&quot;headerlink&quot; title=&quot;9. 如何阻止事件冒泡？ 如何阻止默认事件？&quot;&gt;&lt;/a&gt;&lt;strong&gt;9. 如何阻止事件冒泡？ 如何阻止默认事件？&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;stopPropagation()&lt;/code&gt;方法用于立即停止事件在DOM层次中的传播，阻止事件进一步冒泡或捕获，例如：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;btn&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Click Me&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;#btn&#39;&lt;/span&gt;).onclick = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e.stopPropagation();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.innerText());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(e.target);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.onclick = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;world!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(e.target);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;添加了&lt;code&gt;stopPropagation()&lt;/code&gt;方法阻止了事件冒泡到&lt;code&gt;body&lt;/code&gt;,绑定在&lt;code&gt;body&lt;/code&gt;上的事件没有被触发。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对IE来讲，是通过将&lt;code&gt;cancelBubble&lt;/code&gt;属性值设置为&lt;code&gt;true&lt;/code&gt;来取消冒泡：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;btn&#39;&lt;/span&gt;).attachEvent(&lt;span class=&quot;string&quot;&gt;&quot;onclick&quot;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    e.cancelBubble = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;preventDefault()&lt;/code&gt;方法用于取消事件默认行为,例如点击&lt;code&gt;a链接&lt;/code&gt;会发生跳转是默认行为，可以通过&lt;code&gt;e.preventDefault()&lt;/code&gt;阻止这一行为：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.baidu.com&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;btn&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Click Me&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.btn&#39;&lt;/span&gt;).addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e.preventDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;对IE来讲，是通过将&lt;code&gt;returnValue&lt;/code&gt;属性值设置为&lt;code&gt;false&lt;/code&gt;来取消默认行为：&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;btn&#39;&lt;/span&gt;).attachEvent(&lt;span class=&quot;string&quot;&gt;&quot;onclick&quot;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    e.returnValue = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;【练习】&quot;&gt;&lt;a href=&quot;#【练习】&quot; class=&quot;headerlink&quot; title=&quot;【练习】&quot;&gt;&lt;/a&gt;【练习】&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;1-有如下代码，要求当点击每一个元素li时控制台展示该元素的文本内容。不考虑兼容&quot;&gt;&lt;a href=&quot;#1-有如下代码，要求当点击每一个元素li时控制台展示该元素的文本内容。不考虑兼容&quot; class=&quot;headerlink&quot; title=&quot;1. 有如下代码，要求当点击每一个元素li时控制台展示该元素的文本内容。不考虑兼容&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 有如下代码，要求当点击每一个元素li时控制台展示该元素的文本内容。不考虑兼容&lt;/strong&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ct&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;让我们&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;一起学习&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;JavaScript&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//使用事件代理：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.ct&#39;&lt;/span&gt;).onclick = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(e.target.innerText);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者采用原始方法：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//给每个&amp;lt;li&amp;gt;标签绑定事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&#39;li&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i &amp;lt; arr.length;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	arr[i].addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    		 &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.innerText);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;2-补全代码，要求如下：&quot;&gt;&lt;a href=&quot;#2-补全代码，要求如下：&quot; class=&quot;headerlink&quot; title=&quot;2. 补全代码，要求如下：&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. 补全代码，要求如下：&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;当点击按钮开头添加时在&lt;code&gt;&amp;lt;li&amp;gt;让我们&amp;lt;/li&amp;gt;&lt;/code&gt;元素前添加一个新元素，内容为用户输入的非空字符串；当点击结尾添加时在&lt;code&gt;&amp;lt;li&amp;gt;JavaScript&amp;lt;/li&amp;gt;&lt;/code&gt;后添加用户输入的非空字符串;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当点击每一个元素&lt;code&gt;li&lt;/code&gt;时控制台展示该元素的文本内容;    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://book.jirengu.com/jirengu-inc/jrg-tehui2/homework/%E6%9D%8E%E6%93%8D/task-22/task-22-2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果点我&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;代码如下：(事件代理的一种&lt;a href=&quot;http://jsbin.com/relowi/7/edit?html,console,output&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;错误写法&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ct&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;让我们&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;一起学习&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;JavaScript&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ipt-add-content&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;placeholder&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;添加内容&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;btn-add-start&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;开头添加&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;btn-add-end&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;结尾添加&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ul = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.ct&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addEnd = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;#btn-add-end&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addStart = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;#btn-add-start&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ul.onclick = function (e) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//      console.log(e.target.innerText) ;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#125;//注意：这样写会出问题，当点击到的是ul而不是li时（ul有padding时）会出错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//改为以下这种写法：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ul.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (e.target.tagName.toLowerCase() === &lt;span class=&quot;string&quot;&gt;&#39;li&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(e.target.innerText);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;addEnd.onclick = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; item = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;li&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    item.innerText = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.ipt-add-content&#39;&lt;/span&gt;).value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (item.innerText) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ul.appendChild(item);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.ipt-add-content&#39;&lt;/span&gt;).value = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;string&quot;&gt;&quot;Input Nothing!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;addStart.onclick = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; item = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;li&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    item.innerText = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.ipt-add-content&#39;&lt;/span&gt;).value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (item.innerText) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ul.insertBefore(item,ul.firstChild);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.ipt-add-content&#39;&lt;/span&gt;).value = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;string&quot;&gt;&quot;Input Nothing!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;3-补全代码，要求：当鼠标放置在li元素上，会在img-preview里展示当前li元素的data-img对应的图片。&quot;&gt;&lt;a href=&quot;#3-补全代码，要求：当鼠标放置在li元素上，会在img-preview里展示当前li元素的data-img对应的图片。&quot; class=&quot;headerlink&quot; title=&quot;3. 补全代码，要求：当鼠标放置在li元素上，会在img-preview里展示当前li元素的data-img对应的图片。&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. 补全代码，要求：当鼠标放置在&lt;code&gt;li&lt;/code&gt;元素上，会在&lt;code&gt;img-preview&lt;/code&gt;里展示当前&lt;code&gt;li&lt;/code&gt;元素的&lt;code&gt;data-img&lt;/code&gt;对应的图片。&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://book.jirengu.com/jirengu-inc/jrg-tehui2/homework/%E6%9D%8E%E6%93%8D/task-22/task-22-3.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果点我&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;代码如下：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ct&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-img&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://7xrvo9.com1.z0.glb.clouddn.com/0320/2016-03-20%2012.19.57%201.jpg&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;鼠标放置查看图片1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-img&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://7xrvo9.com1.z0.glb.clouddn.com/0320/2016-03-20%2012.24.13%201.jpg&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;鼠标放置查看图片2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-img&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://7xrvo9.com1.z0.glb.clouddn.com/0320/2016-03-20%2012.28.55%201.jpg&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;鼠标放置查看图片3&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img-preview&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ct = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.ct&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    preview = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.img-preview&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ct.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;mouseover&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    preview.innerHTML = &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;img src=&quot;&#39;&lt;/span&gt;+e.target.getAttribute(&lt;span class=&quot;string&quot;&gt;&#39;data-img&#39;&lt;/span&gt;)+&lt;span class=&quot;string&quot;&gt;&#39;&quot; style=&quot;width:500px&quot;&amp;gt;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;4-实现tab切换功能&quot;&gt;&lt;a href=&quot;#4-实现tab切换功能&quot; class=&quot;headerlink&quot; title=&quot;4. 实现tab切换功能&quot;&gt;&lt;/a&gt;&lt;strong&gt;4. 实现&lt;code&gt;tab&lt;/code&gt;切换功能&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://book.jirengu.com/jirengu-inc/jrg-tehui2/homework/%E6%9D%8E%E6%93%8D/task-22/task-22-4.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果点我点我&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task-22/task-22-4.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;瞅瞅代码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;5-实现模态框功能&quot;&gt;&lt;a href=&quot;#5-实现模态框功能&quot; class=&quot;headerlink&quot; title=&quot;5. 实现模态框功能&quot;&gt;&lt;/a&gt;&lt;strong&gt;5. 实现模态框功能&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://book.jirengu.com/jirengu-inc/jrg-tehui2/homework/%E6%9D%8E%E6%93%8D/task-22/task-22-5.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果点我点我&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jirengu-inc/jrg-tehui2/blob/master/homework/%E6%9D%8E%E6%93%8D/task-22/task-22-5.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;瞅瞅代码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class = &quot;blockquote-center&quot;&gt;DOM（文档对象模型）是针对HTML、XML和SVG文档的API（编程接口）。DOM将前述的结构化文档解析成一个层次化的节点树（DOM Tree）。所有的节点和树状结构都有规范的API，这样我们就可以通过编程语言操作（增删改查）这些文档。严格地说，DOM不属于JavaScript，但是操作DOM是JavaScript最常见的任务，而JavaScript也是最常用于DOM操作的语言。所以，DOM往往放在JavaScript里面介绍。下文是利用JavaScript对DOM标准的实现。&lt;/blockquote&gt;&lt;br&gt;
    
    </summary>
    
      <category term="编程学习" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="前端基础" scheme="http://licao404.com/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="JavaScript" scheme="http://licao404.com/tags/JavaScript/"/>
    
  </entry>
  
</feed>
